<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>My Orders</title>
    <link href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap/5.3.0/css/bootstrap.min.css" rel="stylesheet">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" rel="stylesheet">
    <link href="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.min.css" rel="stylesheet">
    <%- include("../partials/user/account-sidebar")Â %>
    <style>
        :root {
            --bg-primary: #ffffff;
            --bg-secondary: #f8f9fa;
            --bg-tertiary: #e9ecef;
            --border-color: #dee2e6;
            --text-primary: #000000;
            --text-secondary: #495057;
            --text-muted: #6c757d;
            --hover-color: #f5f5f5;
        }

        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            background-color: #f5f5f5;
            color: var(--text-primary);
            font-family: 'Inter', -apple-system, BlinkMacSystemFont, sans-serif;
            min-height: 100vh;
            padding-top: 80px;
        }

        .main-content {
            margin-left: 280px;
            padding: 1rem 2rem;
            min-height: 100vh;
        }

        .page-header {
            background: linear-gradient(135deg, var(--bg-primary) 0%, var(--bg-secondary) 100%);
            border-radius: 15px;
            padding: 2rem;
            margin-bottom: 2rem;
            box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);
            border: 1px solid var(--border-color);
        }

        .page-header h1 {
            color: var(--text-primary);
            font-size: 2rem;
            font-weight: 700;
            margin-bottom: 0.5rem;
            display: flex;
            align-items: center;
            gap: 0.75rem;
        }

        .page-header p {
            color: var(--text-secondary);
            margin-bottom: 0;
            font-size: 1.1rem;
        }

        .orders-container {
            background: var(--bg-primary);
            border-radius: 15px;
            padding: 2rem;
            box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);
            border: 1px solid var(--border-color);
        }

        .orders-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 2rem;
            flex-wrap: wrap;
            gap: 1rem;
        }

        .orders-header h2 {
            color: var(--text-primary);
            font-size: 1.5rem;
            font-weight: 600;
            margin: 0;
            display: flex;
            align-items: center;
            gap: 0.5rem;
        }

        .orders-grid {
            display: grid;
            gap: 1.5rem;
        }

        .order-card {
            background: var(--bg-primary);
            border: 1px solid var(--border-color);
            border-radius: 12px;
            padding: 1.5rem;
            transition: all 0.3s ease;
        }

        .order-card:hover {
            transform: translateY(-2px);
            box-shadow: 0 8px 25px rgba(0, 0, 0, 0.1);
        }

        .order-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 1rem;
            padding-bottom: 1rem;
            border-bottom: 1px solid var(--border-color);
        }

        .order-id {
            font-family: 'Courier New', monospace;
            font-size: 1rem;
            color: var(--text-primary);
        }

        .order-status {
            padding: 0.25rem 0.75rem;
            border-radius: 20px;
            font-size: 0.75rem;
            font-weight: 600;
            text-transform: uppercase;
        }

        .status-pending {
            background: #fef3c7;
            color: #92400e;
        }

        .status-processing {
            background: #dbeafe;
            color: #1e40af;
        }

        .status-shipped {
            background: #d1fae5;
            color: #065f46;
        }

        .status-delivered {
            background: #d1fae5;
            color: #065f46;
        }

        .status-cancelled {
            background: #fee2e2;
            color: #991b1b;
        }

        .status-partially-cancelled {
            background: #fef3c7;
            color: #92400e;
        }

        .status-return-request {
            background: #fef3c7;
            color: #92400e;
        }

        .status-returned {
            background: #fee2e2;
            color: #991b1b;
        }

        
        .order-info {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(150px, 1fr));
            gap: 1rem;
            margin-bottom: 1rem;
        }

        .order-date,
        .order-amount,
        .order-payment {
            display: flex;
            align-items: center;
            gap: 0.5rem;
            color: var(--text-secondary);
            font-size: 0.875rem;
        }

        .order-items {
            margin-bottom: 1.5rem;
        }

        .order-items h6 {
            color: var(--text-primary);
            font-weight: 600;
            margin-bottom: 0.75rem;
            display: flex;
            align-items: center;
            gap: 0.5rem;
        }

        .items-preview {
            display: flex;
            gap: 0.75rem;
            align-items: center;
            flex-wrap: wrap;
        }

        .item-preview {
            display: flex;
            align-items: center;
            gap: 0.5rem;
            background: var(--bg-secondary);
            padding: 0.5rem;
            border-radius: 8px;
            border: 1px solid var(--border-color);
        }

        .item-image {
            width: 40px;
            height: 40px;
            border-radius: 6px;
            object-fit: contain;
            border: 1px solid var(--border-color);
        }

        .item-details {
            font-size: 0.75rem;
        }

        .item-name {
            color: var(--text-primary);
            font-weight: 600;
            margin-bottom: 0.125rem;
        }

        .item-qty {
            color: var(--text-muted);
        }

        .more-items {
            background: var(--text-primary);
            color: white;
            padding: 0.5rem 0.75rem;
            border-radius: 20px;
            font-size: 0.75rem;
            font-weight: 600;
        }

        .order-actions {
            display: flex;
            gap: 0.75rem;
            flex-wrap: wrap;
        }

        .btn-view-details {
            background: var(--text-primary);
            color: white;
            border: none;
            padding: 0.4rem 0.8rem;
            border-radius: 6px;
            font-size: 0.75rem;
            font-weight: 600;
            text-decoration: none;
            transition: all 0.3s ease;
            display: flex;
            align-items: center;
            gap: 0.5rem;
        }

        .btn-view-details:hover {
            background: var(--text-secondary);
            color: white;
            transform: translateY(-1px);
        }

        .btn-download-invoice {
            background: #10b981;
            color: white;
            border: none;
            padding: 0.4rem 0.8rem;
            border-radius: 6px;
            font-size: 0.75rem;
            font-weight: 600;
            text-decoration: none;
            transition: all 0.3s ease;
            display: flex;
            align-items: center;
            gap: 0.5rem;
            cursor: pointer;
        }

        .btn-download-invoice:hover {
            background: #059669;
            transform: translateY(-1px);
        }

        .btn-download-invoice:disabled {
            background: #9ca3af;
            cursor: not-allowed;
            transform: none;
        }

        .btn-retry-payment {
            background: #f59e0b;
            color: white;
            border: none;
            padding: 0.4rem 0.8rem;
            border-radius: 6px;
            font-size: 0.75rem;
            font-weight: 600;
            text-decoration: none;
            transition: all 0.3s ease;
            display: flex;
            align-items: center;
            gap: 0.5rem;
            cursor: pointer;
        }

        .btn-retry-payment:hover {
            background: #d97706;
            color: white;
            transform: translateY(-1px);
            text-decoration: none;
        }

        .payment-status-failed {
            color: #ef4444;
            font-weight: 600;
            font-size: 0.75rem;
        }

        .payment-status-pending {
            color: #f59e0b;
            font-weight: 600;
            font-size: 0.75rem;
        }

        
        .empty-state {
            text-align: center;
            padding: 3rem 2rem;
            color: var(--text-muted);
        }

        .empty-state i {
            font-size: 4rem;
            margin-bottom: 1rem;
            opacity: 0.5;
            color: var(--text-primary);
        }

        .empty-state h3 {
            margin-bottom: 1rem;
            color: var(--text-secondary);
            font-size: 1.5rem;
            font-weight: 600;
        }

        .empty-state p {
            margin-bottom: 2rem;
            font-size: 1.1rem;
            color: var(--text-muted);
        }

        .browse-btn {
            background: linear-gradient(135deg, var(--text-primary) 0%, #333 100%);
            color: white;
            border: none;
            padding: 0.75rem 1.5rem;
            border-radius: 10px;
            font-weight: 600;
            text-decoration: none;
            display: inline-flex;
            align-items: center;
            gap: 0.5rem;
            transition: all 0.3s ease;
            box-shadow: 0 4px 15px rgba(0, 0, 0, 0.2);
        }

        .browse-btn:hover {
            transform: translateY(-2px);
            box-shadow: 0 6px 20px rgba(0, 0, 0, 0.3);
            color: white;
            text-decoration: none;
        }

        /* Mobile Responsive */
        @media (max-width: 768px) {
            .main-content {
                margin-left: 0;
                padding: 0.5rem 1rem;
                padding-top: 90px;
            }

            .page-header {
                padding: 1.5rem;
                margin-bottom: 1.5rem;
            }

            .page-header h1 {
                font-size: 1.5rem;
            }

            .orders-container {
                padding: 1.5rem;
            }

            .orders-header {
                flex-direction: column;
                align-items: stretch;
            }

            .browse-btn {
                width: 100%;
                justify-content: center;
            }
        }

        .fade-in {
            animation: fadeIn 0.6s ease-in;
        }

        @keyframes fadeIn {
            from {
                opacity: 0;
                transform: translateY(20px);
            }
            to {
                opacity: 1;
                transform: translateY(0);
            }
        }

        /* Breadcrumb Styles */
        .breadcrumb-container {
            margin-bottom: 1.5rem;
        }

        .breadcrumb {
            background: transparent;
            padding: 0;
            margin: 0;
            font-size: 0.9rem;
        }

        .breadcrumb-item {
            color: var(--text-muted);
        }

        .breadcrumb-item a {
            color: var(--text-primary);
            text-decoration: none;
            transition: color 0.3s ease;
        }

        .breadcrumb-item a:hover {
            color: var(--text-secondary);
        }

        .breadcrumb-item.active {
            color: var(--text-secondary);
            font-weight: 500;
        }

        /* Highlighted Order Styles */
        .order-card.highlighted {
            border: 2px solid var(--success-color);
            background: linear-gradient(135deg, rgba(16, 185, 129, 0.05) 0%, rgba(16, 185, 129, 0.02) 100%);
            box-shadow: 0 8px 30px rgba(16, 185, 129, 0.15);
            position: relative;
            animation: highlightPulse 2s ease-in-out;
        }

        .order-card.highlighted::before {
            content: '';
            position: absolute;
            top: -2px;
            left: -2px;
            right: -2px;
            bottom: -2px;
            background: linear-gradient(45deg, var(--success-color), #059669, var(--success-color));
            border-radius: 14px;
            z-index: -1;
            animation: borderGlow 3s ease-in-out infinite;
        }

        .order-card.highlighted .order-header {
            border-bottom-color: rgba(16, 185, 129, 0.2);
        }

        .highlighted-badge {
            position: absolute;
            top: -8px;
            right: 15px;
            background: var(--success-color);
            color: white;
            padding: 0.25rem 0.75rem;
            border-radius: 15px;
            font-size: 0.75rem;
            font-weight: 600;
            box-shadow: 0 2px 8px rgba(16, 185, 129, 0.3);
            animation: badgeBounce 0.6s ease-out;
        }

        @keyframes highlightPulse {
            0% {
                transform: scale(1);
                box-shadow: 0 8px 30px rgba(16, 185, 129, 0.15);
            }
            50% {
                transform: scale(1.02);
                box-shadow: 0 12px 40px rgba(16, 185, 129, 0.25);
            }
            100% {
                transform: scale(1);
                box-shadow: 0 8px 30px rgba(16, 185, 129, 0.15);
            }
        }

        @keyframes borderGlow {
            0%, 100% {
                opacity: 0.6;
            }
            50% {
                opacity: 1;
            }
        }

        @keyframes badgeBounce {
            0% {
                transform: translateY(-10px) scale(0.8);
                opacity: 0;
            }
            60% {
                transform: translateY(2px) scale(1.1);
                opacity: 1;
            }
            100% {
                transform: translateY(0) scale(1);
                opacity: 1;
            }
        }
    </style>
    </head>
<body>
    <!-- Main Content -->
    <div class="main-content">
        <!-- Breadcrumb -->
        <div class="breadcrumb-container">
            <nav aria-label="breadcrumb">
                <ol class="breadcrumb">
                    <li class="breadcrumb-item"><a href="/profile">My Account</a></li>
                    <li class="breadcrumb-item active" aria-current="page">My Orders</li>
                </ol>
            </nav>
        </div>

        <!-- Page Header -->
        <div class="page-header fade-in">
            <h1><i class="fas fa-shopping-bag"></i> My Orders</h1>
            <p>Track and manage your purchases</p>
        </div>

        <!-- Orders Container -->
        <div class="orders-container fade-in">
            <div class="orders-header">
                <h2><i class="fas fa-list"></i> Order History</h2>
            </div>

            <% if (orders && orders.length > 0) { %>
                <div class="orders-grid">
                    <% orders.forEach(order => { %>
                        <div class="order-card<%= highlightOrderId === order.orderId ? ' highlighted' : '' %>"
                             data-order-id="<%= order.orderId %>">
                            <% if (highlightOrderId === order.orderId) { %>
                                <div class="highlighted-badge">
                                    <i class="fas fa-star"></i> Latest Order
                                </div>
                            <% } %>
                            <div class="order-header">
                                <div class="order-id">
                                    <strong><%= order.orderId %></strong>
                                </div>
                                <div class="order-status status-<%= order.status.toLowerCase().replace(/\s+/g, '-') %>">
                                    <%= order.status %>
                                </div>
                            </div>

                            <div class="order-info">
                                <div class="order-date">
                                    <i class="fas fa-calendar"></i>
                                    <%= new Date(order.createdAt).toLocaleDateString('en-IN', {
                                        year: 'numeric',
                                        month: 'short',
                                        day: 'numeric'
                                    }) %>
                                </div>
                                <div class="order-amount">
                                    <i class="fas fa-rupee-sign"></i>
                                    <%
                                        // Calculate current amount based on active items with proportional discount
                                        const activeItems = order.orderedItems.filter(item => item.status === 'Active');
                                        const cancelledItems = order.orderedItems.filter(item => item.status === 'Cancelled');
                                        const currentSubtotal = activeItems.reduce((sum, item) => sum + item.totalPrice, 0);
                                        const cancelledAmount = cancelledItems.reduce((sum, item) => sum + item.totalPrice, 0);
                                        const originalOrderTotal = currentSubtotal + cancelledAmount;
                                        
                                        let currentAmount = 0;
                                        if (currentSubtotal > 0) {
                                            let applicableDiscount = 0;
                                            if (order.discount > 0 && originalOrderTotal > 0) {
                                                // Calculate proportional discount for active items only
                                                const activeItemsProportion = currentSubtotal / originalOrderTotal;
                                                applicableDiscount = Math.min(order.discount * activeItemsProportion, currentSubtotal);
                                            }
                                            currentAmount = Math.max(0, currentSubtotal - applicableDiscount + order.shippingCharges);
                                        }
                                    %>
                                    â¹<%= currentAmount.toFixed(2) %>
                                </div>
                                <div class="order-payment">
                                    <i class="fas fa-credit-card"></i>
                                    <%= order.paymentMethod %>
                                    <% if (order.paymentStatus === 'Failed') { %>
                                        <span class="payment-status-failed">â¢ Payment Failed</span>
                                    <% } else if (order.paymentStatus === 'Pending') { %>
                                        <span class="payment-status-pending">â¢ Payment Pending</span>
                                    <% } else if (order.paymentStatus === 'Completed') { %>
                                        <span style="color: #10b981; font-weight: 600; font-size: 0.75rem;">â¢ Payment Completed</span>
                                    <% } %>
                                </div>
                            </div>

                            <div class="order-items">
                                <h6><i class="fas fa-box"></i> Items (<%= order.orderedItems.length %>)</h6>
                                <div class="items-preview">
                                    <% order.orderedItems.slice(0, 3).forEach(item => { %>
                                        <div class="item-preview">
                                            <img src="/uploads/products/<%= item.product.mainImage %>"
                                                 alt="<%= item.product.productName %>"
                                                 class="item-image">
                                            <div class="item-details">
                                                <div class="item-name"><%= item.product.productName %></div>
                                                <div class="item-qty">Qty: <%= item.quantity %></div>
                                            </div>
                                        </div>
                                    <% }); %>
                                    <% if (order.orderedItems.length > 3) { %>
                                        <div class="more-items">
                                            +<%= order.orderedItems.length - 3 %> more
                                        </div>
                                    <% } %>
                                </div>
                            </div>

                            <div class="order-actions">
                                <a href="/order-details/<%= order.orderId %>" class="btn-view-details">
                                    <i class="fas fa-eye"></i> View Details
                                </a>
                                <% if (order.paymentStatus === 'Failed') { %>
                                    <a href="/checkout/retry-payment/<%= order.orderId %>" class="btn-retry-payment">
                                        <i class="fas fa-redo"></i> Retry Payment
                                    </a>
                                <% } else if (
                                    (order.paymentMethod === 'Cash on Delivery') ||
                                    (order.paymentMethod !== 'Cash on Delivery' && order.paymentStatus === 'Completed')
                                ) { %>
                                    <button class="btn-download-invoice" onclick="downloadInvoice('<%= order.orderId %>')">
                                        <i class="fas fa-download"></i> Invoice
                                    </button>
                                <% } %>
                            </div>
                        </div>
                    <% }); %>
                </div>
            <% } else { %>
                <!-- Empty State -->
                <div class="empty-state">
                    <i class="fas fa-shopping-bag"></i>
                    <h3>No Orders Found</h3>
                    <p>You haven't placed any orders yet. Start shopping to see your orders here!</p>
                    <a href="/shop" class="browse-btn">
                        <i class="fas fa-shopping-cart"></i> Browse Products
                    </a>
                </div>
            <% } %>
        </div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap/5.3.0/js/bootstrap.bundle.min.js"></script>
    <script>
        
        // Download PDF invoice
        async function downloadInvoice(orderId) {
            // Get the button that was clicked
            const downloadBtn = event.target.closest('.btn-download-invoice');
            const originalText = downloadBtn.innerHTML;

            try {
                // Show loading state
                downloadBtn.innerHTML = '<i class="fas fa-spinner fa-spin"></i> Generating...';
                downloadBtn.disabled = true;

                // Make request to download invoice
                const response = await fetch(`/orders/${orderId}/download-invoice`);

                if (response.ok) {
                    // Get the PDF blob
                    const blob = await response.blob();

                    // Create download link
                    const url = window.URL.createObjectURL(blob);
                    const a = document.createElement('a');
                    a.href = url;
                    a.download = `Invoice-${orderId}.pdf`;
                    document.body.appendChild(a);
                    a.click();

                    // Cleanup
                    window.URL.revokeObjectURL(url);
                    document.body.removeChild(a);

                    // Show success toast
                    const Toast = Swal.mixin({
                        toast: true,
                        position: 'bottom-right',
                        showConfirmButton: false,
                        timer: 3000,
                        timerProgressBar: true
                    });

                    Toast.fire({
                        icon: 'success',
                        title: 'Invoice downloaded successfully'
                    });
                } else {
                    const errorData = await response.json();
                    throw new Error(errorData.message || 'Failed to download invoice');
                }
            } catch (error) {
                console.error('Error downloading invoice:', error);
                Swal.fire({
                    icon: 'error',
                    title: 'Download Failed',
                    text: error.message || 'Failed to download invoice. Please try again.'
                });
            } finally {
                // Reset button state
                downloadBtn.innerHTML = originalText;
                downloadBtn.disabled = false;
            }
        }

        // Handle highlighted order functionality
        document.addEventListener('DOMContentLoaded', function() {
            const urlParams = new URLSearchParams(window.location.search);
            const highlightOrderId = urlParams.get('highlight');

            if (highlightOrderId) {
                // Find the highlighted order card
                const highlightedCard = document.querySelector(`[data-order-id="${highlightOrderId}"]`);

                if (highlightedCard) {
                    // Smooth scroll to the highlighted order with offset for header
                    setTimeout(() => {
                        const headerOffset = 120; // Account for fixed header and padding
                        const elementPosition = highlightedCard.getBoundingClientRect().top;
                        const offsetPosition = elementPosition + window.pageYOffset - headerOffset;

                        window.scrollTo({
                            top: offsetPosition,
                            behavior: 'smooth'
                        });
                    }, 300); // Small delay to ensure page is fully loaded

                    // Add a temporary focus ring effect
                    setTimeout(() => {
                        highlightedCard.style.outline = '3px solid rgba(16, 185, 129, 0.5)';
                        highlightedCard.style.outlineOffset = '4px';

                        // Remove the focus ring after animation
                        setTimeout(() => {
                            highlightedCard.style.outline = 'none';
                            highlightedCard.style.outlineOffset = '0';
                        }, 3000);
                    }, 800);

                    // Show a subtle toast notification
                    const Toast = Swal.mixin({
                        toast: true,
                        position: 'top-right',
                        showConfirmButton: false,
                        timer: 4000,
                        timerProgressBar: true,
                        didOpen: (toast) => {
                            toast.addEventListener('mouseenter', Swal.stopTimer)
                            toast.addEventListener('mouseleave', Swal.resumeTimer)
                        }
                    });

                    setTimeout(() => {
                        Toast.fire({
                            icon: 'success',
                            title: 'Your latest order is highlighted below',
                            text: 'Click "View Details" to see complete order information'
                        });
                    }, 1200);

                    // Clean up URL after highlighting (optional)
                    setTimeout(() => {
                        const newUrl = window.location.pathname;
                        window.history.replaceState({}, document.title, newUrl);
                    }, 5000);
                }
            }
        });
    </script>
</body>
</html>
