<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Address Book</title>
    <link href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap/5.3.0/css/bootstrap.min.css" rel="stylesheet">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" rel="stylesheet">
    <link href="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.min.css" rel="stylesheet">
    <%- include("../partials/user/account-sidebar") %>
    <style>
        :root {
            --bg-primary: #ffffff;
            --bg-secondary: #f8f9fa;
            --bg-tertiary: #e9ecef;
            --border-color: #dee2e6;
            --text-primary: #000000;
            --text-secondary: #495057;
            --text-muted: #6c757d;
            --hover-color: #f5f5f5;
            --success-color: #28a745;
            --danger-color: #dc3545;
            --warning-color: #ffc107;
        }

        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            background-color: #f5f5f5;
            color: var(--text-primary);
            font-family: 'Inter', -apple-system, BlinkMacSystemFont, sans-serif;
            min-height: 100vh;
            padding-top: 80px;
        }

        .main-content {
            margin-left: 280px;
            padding: 1rem 2rem;
            min-height: 100vh;
        }

        .page-header {
            background: linear-gradient(135deg, var(--bg-primary) 0%, var(--bg-secondary) 100%);
            border-radius: 15px;
            padding: 2rem;
            margin-bottom: 2rem;
            box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);
            border: 1px solid var(--border-color);
        }

        .page-header h1 {
            color: var(--text-primary);
            font-size: 2rem;
            font-weight: 700;
            margin-bottom: 0.5rem;
            display: flex;
            align-items: center;
            gap: 0.75rem;
        }

        .page-header p {
            color: var(--text-secondary);
            margin-bottom: 0;
            font-size: 1.1rem;
        }

        .addresses-container {
            background: var(--bg-primary);
            border-radius: 15px;
            padding: 2rem;
            box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);
            border: 1px solid var(--border-color);
        }

        .addresses-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 2rem;
            flex-wrap: wrap;
            gap: 1rem;
        }

        .addresses-header h2 {
            color: var(--text-primary);
            font-size: 1.5rem;
            font-weight: 600;
            margin: 0;
            display: flex;
            align-items: center;
            gap: 0.5rem;
        }

        .btn-add-address {
            background: linear-gradient(135deg, var(--text-primary) 0%, #333 100%);
            color: white;
            border: none;
            padding: 0.75rem 1.5rem;
            border-radius: 10px;
            font-weight: 600;
            text-decoration: none;
            display: inline-flex;
            align-items: center;
            gap: 0.5rem;
            transition: all 0.3s ease;
            box-shadow: 0 4px 15px rgba(0, 0, 0, 0.2);
        }

        .btn-add-address:hover {
            transform: translateY(-2px);
            box-shadow: 0 6px 20px rgba(0, 0, 0, 0.3);
            color: white;
            text-decoration: none;
        }

        .addresses-grid {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(350px, 1fr));
            gap: 1.5rem;
        }

        .address-card {
            background: var(--bg-primary);
            border: 2px solid var(--border-color);
            border-radius: 12px;
            padding: 1.5rem;
            transition: all 0.3s ease;
            position: relative;
            overflow: hidden;
        }

        .address-card:hover {
            border-color: var(--text-primary);
            box-shadow: 0 8px 25px rgba(0, 0, 0, 0.15);
            transform: translateY(-2px);
        }

        .address-type {
            background: linear-gradient(135deg, var(--text-primary) 0%, #333 100%);
            color: white;
            padding: 0.4rem 0.8rem;
            border-radius: 20px;
            font-size: 0.8rem;
            font-weight: 600;
            text-transform: uppercase;
            letter-spacing: 0.5px;
            display: inline-block;
            margin-bottom: 1rem;
        }

        .address-badges {
            display: flex;
            gap: 0.5rem;
            margin-bottom: 1rem;
            flex-wrap: wrap;
        }

        .default-star {
            position: absolute;
            top: 12px;
            right: 12px;
            background: linear-gradient(135deg, #28a745 0%, #20c997 100%);
            color: white;
            width: 32px;
            height: 32px;
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            box-shadow: 0 3px 10px rgba(40, 167, 69, 0.4);
            z-index: 10;
            transition: all 0.3s ease;
        }

        .default-star i {
            font-size: 0.9rem;
        }

        .default-star:hover {
            transform: scale(1.1);
            box-shadow: 0 4px 15px rgba(40, 167, 69, 0.5);
        }

        .address-name {
            font-size: 1.1rem;
            font-weight: 600;
            color: var(--text-primary);
            margin-bottom: 0.5rem;
        }

        .address-details {
            color: var(--text-secondary);
            line-height: 1.6;
            margin-bottom: 1rem;
        }

        .address-phone {
            color: var(--text-muted);
            font-size: 0.9rem;
            margin-bottom: 1.5rem;
            display: flex;
            align-items: center;
            gap: 0.5rem;
        }

        .address-actions {
            display: flex;
            gap: 0.75rem;
            justify-content: flex-end;
        }

        .btn-edit, .btn-delete, .btn-set-default {
            padding: 0.4rem 0.8rem;
            border-radius: 6px;
            font-size: 0.8rem;
            font-weight: 500;
            text-decoration: none;
            display: inline-flex;
            align-items: center;
            gap: 0.3rem;
            transition: all 0.3s ease;
            border: none;
            cursor: pointer;
            min-height: 32px;
        }

        .btn-edit {
            background: var(--text-primary);
            color: white;
        }

        .btn-edit:hover {
            background: var(--text-secondary);
            color: white;
            text-decoration: none;
            transform: translateY(-1px);
        }

        .btn-delete {
            background: var(--danger-color);
            color: white;
        }

        .btn-delete:hover {
            background: #c82333;
            transform: translateY(-1px);
        }

        .btn-set-default {
            background: var(--text-primary);
            color: white;
        }

        .btn-set-default:hover {
            background: var(--text-secondary);
            color: white;
            transform: translateY(-1px);
        }

        .empty-state {
            text-align: center;
            padding: 3rem 2rem;
            color: var(--text-muted);
        }

        .empty-state i {
            font-size: 4rem;
            margin-bottom: 1rem;
            opacity: 0.5;
        }

        .empty-state h3 {
            margin-bottom: 1rem;
            color: var(--text-secondary);
        }

        .empty-state p {
            margin-bottom: 2rem;
            font-size: 1.1rem;
        }

        /* Mobile Responsive */
        @media (max-width: 768px) {
            .main-content {
                margin-left: 0;
                padding: 0.5rem 1rem;
                padding-top: 90px;
            }

            .page-header {
                padding: 1.5rem;
                margin-bottom: 1.5rem;
            }

            .page-header h1 {
                font-size: 1.5rem;
            }

            .addresses-container {
                padding: 1.5rem;
            }

            .addresses-grid {
                grid-template-columns: 1fr;
                gap: 1rem;
            }

            .addresses-header {
                flex-direction: column;
                align-items: stretch;
            }

            .btn-add-address {
                width: 100%;
                justify-content: center;
            }

            .address-actions {
                justify-content: center;
                flex-direction: column;
                gap: 0.4rem;
            }

            .btn-edit, .btn-delete, .btn-set-default {
                width: 100%;
                justify-content: center;
                padding: 0.5rem 0.8rem;
                min-height: 36px;
            }

            .default-star {
                top: 10px;
                right: 10px;
                width: 28px;
                height: 28px;
            }

            .default-star i {
                font-size: 0.8rem;
            }
        }

        @media (max-width: 576px) {
            .page-header h1 {
                font-size: 1.25rem;
            }

            .addresses-container {
                padding: 1rem;
            }

            .btn-edit, .btn-delete, .btn-set-default {
                font-size: 0.75rem;
                padding: 0.4rem 0.6rem;
                min-height: 34px;
            }

            .default-star {
                top: 8px;
                right: 8px;
                width: 26px;
                height: 26px;
            }

            .default-star i {
                font-size: 0.75rem;
            }
        }

        .fade-in {
            animation: fadeIn 0.6s ease-in;
        }

        @keyframes fadeIn {
            from {
                opacity: 0;
                transform: translateY(20px);
            }
            to {
                opacity: 1;
                transform: translateY(0);
            }
        }

        /* Breadcrumb Styles */
        .breadcrumb-container {
            margin-bottom: 1.5rem;
        }

        .breadcrumb {
            background: transparent;
            padding: 0;
            margin: 0;
            font-size: 0.9rem;
        }

        .breadcrumb-item {
            color: var(--text-muted);
        }

        .breadcrumb-item a {
            color: var(--text-primary);
            text-decoration: none;
            transition: color 0.3s ease;
        }

        .breadcrumb-item a:hover {
            color: var(--text-secondary);
        }

        .breadcrumb-item.active {
            color: var(--text-secondary);
            font-weight: 500;
        }
    </style>
</head>
<body>
    <!-- Main Content -->
    <div class="main-content">
        <!-- Breadcrumb -->
        <div class="breadcrumb-container">
            <nav aria-label="breadcrumb">
                <ol class="breadcrumb">
                    <li class="breadcrumb-item"><a href="/profile">My Account</a></li>
                    <li class="breadcrumb-item active" aria-current="page">Address Book</li>
                </ol>
            </nav>
        </div>

        <!-- Page Header -->
        <div class="page-header fade-in">
            <h1><i class="fas fa-map-marker-alt"></i> Address Book</h1>
            <p>Manage your delivery addresses for a seamless shopping experience</p>
        </div>

        <!-- Addresses Container -->
        <div class="addresses-container fade-in">
            <div class="addresses-header">
                <h2><i class="fas fa-home"></i> Saved Addresses</h2>
                <a href="/address/add" class="btn-add-address">
                    <i class="fas fa-plus"></i> Add New Address
                </a>
            </div>

            <% if (addresses && addresses.length > 0) { %>
                <div class="addresses-grid">
                    <% addresses.forEach(address => { %>
                        <div class="address-card">
                            <% if (address.isDefault) { %>
                                <div class="default-star">
                                    <i class="fas fa-star"></i>
                                </div>
                            <% } %>
                            <div class="address-badges">
                                <div class="address-type"><%= address.addressType %></div>
                            </div>
                            <div class="address-name"><%= address.name %></div>
                            <div class="address-details">
                                <%= address.landMark %>, <%= address.city %><br>
                                <%= address.state %> - <%= address.pincode %>
                            </div>
                            <div class="address-phone">
                                <i class="fas fa-phone"></i> <%= address.phone %>
                                <% if (address.altPhone) { %>
                                    | <%= address.altPhone %>
                                <% } %>
                            </div>
                            <div class="address-actions">
                                <% if (!address.isDefault) { %>
                                    <button class="btn-set-default" onclick="setAsDefault('<%= address._id %>')">
                                        <i class="fas fa-star"></i> Set as Default
                                    </button>
                                <% } %>
                                <a href="/address/edit/<%= address._id %>" class="btn-edit">
                                    <i class="fas fa-edit"></i> Edit
                                </a>
                                <button class="btn-delete" onclick="deleteAddress('<%= address._id %>')">
                                    <i class="fas fa-trash"></i> Delete
                                </button>
                            </div>
                        </div>
                    <% }) %>
                </div>
            <% } else { %>
                <div class="empty-state">
                    <i class="fas fa-map-marker-alt"></i>
                    <h3>No Addresses Found</h3>
                    <p>You haven't added any addresses yet. Add your first address to get started!</p>
                    <a href="/address/add" class="btn-add-address">
                        <i class="fas fa-plus"></i> Add Your First Address
                    </a>
                </div>
            <% } %>
        </div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.min.js"></script>
    <script>
        function setAsDefault(addressId) {
            Swal.fire({
                title: 'Set as Default?',
                text: 'This address will be automatically selected for your orders.',
                icon: 'question',
                showCancelButton: true,
                confirmButtonColor: '#000000',
                cancelButtonColor: '#6c757d',
                confirmButtonText: 'Yes, Set as Default',
                cancelButtonText: 'Cancel'
            }).then((result) => {
                if (result.isConfirmed) {
                    fetch(`/address/set-default/${addressId}`, {
                        method: 'PUT',
                        headers: {
                            'Content-Type': 'application/json'
                        }
                    })
                    .then(response => response.json())
                    .then(data => {
                        if (data.success) {
                            Swal.fire({
                                title: 'Success!',
                                text: data.message,
                                icon: 'success',
                                confirmButtonColor: '#000000'
                            }).then(() => {
                                location.reload();
                            });
                        } else {
                            Swal.fire({
                                title: 'Error!',
                                text: data.message,
                                icon: 'error',
                                confirmButtonColor: '#000000'
                            });
                        }
                    })
                    .catch(error => {
                        console.error('Error:', error);
                        Swal.fire({
                            title: 'Error!',
                            text: 'An error occurred while setting default address',
                            icon: 'error',
                            confirmButtonColor: '#000000'
                        });
                    });
                }
            });
        }

        function deleteAddress(addressId) {
            Swal.fire({
                title: 'Delete Address?',
                text: 'Are you sure you want to delete this address? This action cannot be undone.',
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#dc3545',
                cancelButtonColor: '#6c757d',
                confirmButtonText: 'Yes, Delete',
                cancelButtonText: 'Cancel'
            }).then((result) => {
                if (result.isConfirmed) {
                    fetch(`/address/${addressId}`, {
                        method: 'DELETE',
                        headers: {
                            'Content-Type': 'application/json'
                        }
                    })
                    .then(response => response.json())
                    .then(data => {
                        if (data.success) {
                            Swal.fire({
                                title: 'Deleted!',
                                text: data.message,
                                icon: 'success',
                                confirmButtonColor: '#000000'
                            }).then(() => {
                                location.reload();
                            });
                        } else {
                            Swal.fire({
                                title: 'Error!',
                                text: data.message,
                                icon: 'error',
                                confirmButtonColor: '#000000'
                            });
                        }
                    })
                    .catch(error => {
                        console.error('Error:', error);
                        Swal.fire({
                            title: 'Error!',
                            text: 'An error occurred while deleting the address',
                            icon: 'error',
                            confirmButtonColor: '#000000'
                        });
                    });
                }
            });
        }
    </script>
</body>
</html>