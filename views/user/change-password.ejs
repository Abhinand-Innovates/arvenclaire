<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Change Password</title>
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap" rel="stylesheet">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap/5.3.0/css/bootstrap.min.css" rel="stylesheet">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" rel="stylesheet">
    <%- include("../partials/user/account-sidebar") %>
    <style>
        :root {
            --bg-primary: #ffffff;
            --bg-secondary: #f8f9fa;
            --bg-tertiary: #e9ecef;
            --border-color: #dee2e6;
            --text-primary: #000000;
            --text-secondary: #495057;
            --text-muted: #6c757d;
            --hover-color: #f5f5f5;
            --success-green: #10b981;
            --error-red: #ef4444;
            --focus-blue: #3b82f6;
        }

        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            background-color: #f5f5f5;
            color: var(--text-primary);
            font-family: 'Inter', -apple-system, BlinkMacSystemFont, sans-serif;
            min-height: 100vh;
        }

        .main-content {
            margin-left: 280px;
            padding: 1rem 2rem;
            min-height: 100vh;
        }

        .page-header {
            background: linear-gradient(135deg, var(--bg-primary) 0%, var(--bg-secondary) 100%);
            border-radius: 15px;
            padding: 2rem;
            margin-bottom: 2rem;
            box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);
            border: 1px solid var(--border-color);
        }

        .page-header h1 {
            color: var(--text-primary);
            font-size: 2rem;
            font-weight: 700;
            margin-bottom: 0.5rem;
            display: flex;
            align-items: center;
            gap: 0.75rem;
        }

        .page-header h1 i {
            color: var(--error-red);
        }

        .page-header p {
            color: var(--text-secondary);
            margin-bottom: 0;
            font-size: 1.1rem;
        }

        .fade-in {
            animation: fadeIn 0.6s ease-in;
        }

        @keyframes fadeIn {
            from {
                opacity: 0;
                transform: translateY(20px);
            }
            to {
                opacity: 1;
                transform: translateY(0);
            }
        }

        /* Breadcrumb Styles */
        .breadcrumb-container {
            margin-bottom: 1.5rem;
        }

        .breadcrumb {
            background: transparent;
            padding: 0;
            margin: 0;
            font-size: 0.9rem;
        }

        .breadcrumb-item {
            color: var(--text-muted);
        }

        .breadcrumb-item a {
            color: var(--text-primary);
            text-decoration: none;
            transition: color 0.3s ease;
        }

        .breadcrumb-item a:hover {
            color: var(--text-secondary);
        }

        .breadcrumb-item.active {
            color: var(--text-secondary);
            font-weight: 500;
        }

        .form-container {
            background: var(--bg-primary);
            border-radius: 15px;
            padding: 2rem;
            box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);
            border: 1px solid var(--border-color);
        }

        .form-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 2rem;
            flex-wrap: wrap;
            gap: 1rem;
        }

        .form-header h2 {
            color: var(--text-primary);
            font-size: 1.5rem;
            font-weight: 600;
            margin: 0;
            display: flex;
            align-items: center;
            gap: 0.5rem;
        }

        .form-header h2 i {
            color: var(--error-red);
        }

        .email-display {
            background: var(--bg-secondary);
            padding: 1rem;
            border-radius: 12px;
            margin-bottom: 2rem;
            display: flex;
            align-items: center;
            gap: 0.75rem;
            color: var(--text-primary);
            font-size: 0.9375rem;
            font-weight: 500;
            border: 1px solid var(--border-color);
        }

        .email-display i {
            color: var(--text-muted);
            font-size: 1rem;
        }

        .form-group {
            margin-bottom: 1.5rem;
        }

        .form-grid {
            display: grid;
            grid-template-columns: 1fr 1fr;
            gap: 2rem;
            margin-bottom: 2rem;
        }

        .form-section {
            display: flex;
            flex-direction: column;
        }

        .form-section-title {
            font-size: 1.125rem;
            font-weight: 600;
            color: var(--text-primary);
            margin-bottom: 1.25rem;
            padding-bottom: 0.75rem;
            border-bottom: 2px solid var(--border-color);
        }

        .form-label {
            color: var(--text-primary);
            font-weight: 600;
            margin-bottom: 0.5rem;
            display: block;
            font-size: 0.9375rem;
        }

        .form-control {
            border: 2px solid var(--border-color);
            border-radius: 8px;
            padding: 0.75rem 1rem;
            font-size: 0.9375rem;
            transition: all 0.2s ease;
            background-color: var(--bg-primary);
            width: 100%;
            font-weight: 500;
            color: var(--text-primary);
        }

        .form-control:focus {
            border-color: var(--text-primary);
            box-shadow: 0 0 0 3px rgba(0, 0, 0, 0.1);
            background-color: var(--bg-primary);
            outline: none;
        }

        .form-control:hover:not(:focus) {
            border-color: var(--text-secondary);
            background-color: var(--bg-primary);
        }

        .password-input-group {
            position: relative;
        }

        .password-toggle {
            position: absolute;
            right: 0.75rem;
            top: 50%;
            transform: translateY(-50%);
            background: none;
            border: none;
            color: var(--text-muted);
            cursor: pointer;
            padding: 0.5rem;
            font-size: 1rem;
            border-radius: 6px;
            transition: all 0.2s ease;
        }

        .password-toggle:hover {
            color: var(--text-primary);
            background-color: var(--hover-color);
        }

        .requirements-section {
            background: var(--bg-secondary);
            border-radius: 12px;
            padding: 1.5rem;
            margin: 2rem 0;
            border: 1px solid var(--border-color);
        }

        .requirements-title {
            color: var(--text-primary);
            font-weight: 600;
            margin-bottom: 1rem;
            font-size: 1rem;
            display: flex;
            align-items: center;
            gap: 0.5rem;
        }

        .requirements-title::before {
            content: 'ðŸ”’';
            font-size: 1.125rem;
        }

        .requirement-item {
            display: flex;
            align-items: center;
            gap: 0.75rem;
            margin-bottom: 0.5rem;
            color: var(--text-secondary);
            font-size: 0.875rem;
            font-weight: 500;
            padding: 0.25rem 0;
        }

        .requirement-dot {
            width: 6px;
            height: 6px;
            background: var(--text-primary);
            border-radius: 50%;
            flex-shrink: 0;
        }

        .update-btn {
            background: var(--text-primary);
            border: none;
            border-radius: 8px;
            padding: 0.75rem 1.5rem;
            color: white;
            font-weight: 600;
            font-size: 0.9375rem;
            cursor: pointer;
            transition: all 0.3s ease;
            display: flex;
            align-items: center;
            justify-content: center;
            gap: 0.5rem;
            margin: 2rem auto 0;
            min-width: 200px;
            box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);
        }

        .update-btn:hover:not(:disabled) {
            transform: translateY(-2px);
            box-shadow: 0 8px 25px rgba(0, 0, 0, 0.15);
            background: var(--text-secondary);
        }

        .update-btn:active {
            transform: translateY(0);
        }

        .update-btn:disabled {
            opacity: 0.7;
            cursor: not-allowed;
            transform: none;
        }

        .error-message {
            color: var(--error-red);
            font-size: 0.875rem;
            margin-top: 0.5rem;
            display: none;
            font-weight: 500;
            padding: 0.75rem 1rem;
            background-color: rgba(239, 68, 68, 0.1);
            border-radius: 8px;
            border-left: 4px solid var(--error-red);
            animation: slideDown 0.3s ease-out;
        }

        .error-message.show {
            display: block;
        }

        .form-control.error {
            border-color: var(--error-red);
            background-color: rgba(239, 68, 68, 0.05);
        }

        .form-control.error:focus {
            border-color: var(--error-red);
            box-shadow: 0 0 0 3px rgba(239, 68, 68, 0.2);
        }

        @keyframes slideDown {
            from {
                opacity: 0;
                transform: translateY(-10px);
            }
            to {
                opacity: 1;
                transform: translateY(0);
            }
        }

        /* Loading state */
        .loading {
            opacity: 0.7;
            pointer-events: none;
        }

        /* Mobile Responsive */
        @media (max-width: 768px) {
            .main-content {
                margin-left: 0;
                padding: 0.5rem 1rem;
                padding-top: 90px;
            }

            .page-header {
                padding: 1.5rem;
                margin-bottom: 1.5rem;
            }

            .page-header h1 {
                font-size: 1.5rem;
            }

            .form-container {
                padding: 1.5rem;
            }

            .form-grid {
                grid-template-columns: 1fr;
                gap: 1.5rem;
                margin-bottom: 1.5rem;
            }

            .form-header {
                flex-direction: column;
                align-items: stretch;
            }

            .email-display {
                padding: 0.75rem;
                font-size: 0.875rem;
            }

            .form-control {
                padding: 0.75rem;
                font-size: 16px; /* Prevents zoom on iOS */
            }

            .password-toggle {
                right: 0.75rem;
            }

            .update-btn {
                padding: 0.75rem 1.25rem;
                font-size: 0.875rem;
                min-width: 180px;
            }

            .requirements-section {
                padding: 1.25rem;
                margin: 1.5rem 0;
            }

            .requirement-item {
                font-size: 0.8125rem;
            }
        }

        @media (max-width: 576px) {
            .page-header h1 {
                font-size: 1.25rem;
            }

            .form-container {
                padding: 1.25rem;
            }

            .form-section-title {
                font-size: 1rem;
            }

            .requirements-section {
                padding: 1rem;
            }
        }
    </style>
</head>
<body>
    <!-- Main Content -->
    <div class="main-content">
        <!-- Breadcrumb -->
        <div class="breadcrumb-container">
            <nav aria-label="breadcrumb">
                <ol class="breadcrumb">
                    <li class="breadcrumb-item"><a href="/profile">My Account</a></li>
                    <li class="breadcrumb-item active" aria-current="page">Change Password</li>
                </ol>
            </nav>
        </div>

        <!-- Page Header -->
        <div class="page-header fade-in">
            <h1><i class="fas fa-lock"></i> Change Password</h1>
            <p>Update your password to keep your account secure</p>
        </div>

        <!-- Form Container -->
        <div class="form-container fade-in">
            <div class="form-header">
                <h2><i class="fas fa-key"></i> Password Settings</h2>
            </div>

            <!-- Email Display -->
            <div class="email-display">
                <i class="fas fa-envelope"></i>
                <%= user.email %>
            </div>

                <!-- Password Form -->
                <form id="changePasswordForm">
                    <div class="form-grid">
                        <!-- Left Column - Password Fields -->
                        <div class="form-section">
                            <h3 class="form-section-title">Password Information</h3>

                            <!-- Current Password -->
                            <div class="form-group">
                                <label class="form-label">Current Password</label>
                                <div class="password-input-group">
                                    <input type="password" class="form-control" id="currentPassword" name="currentPassword" placeholder="Enter your current password">
                                    <button type="button" class="password-toggle" onclick="togglePassword('currentPassword')">
                                        <i class="fas fa-eye"></i>
                                    </button>
                                </div>
                                <div class="error-message" id="currentPasswordError"></div>
                            </div>

                            <!-- New Password -->
                            <div class="form-group">
                                <label class="form-label">New Password</label>
                                <div class="password-input-group">
                                    <input type="password" class="form-control" id="newPassword" name="newPassword" placeholder="Enter your new password">
                                    <button type="button" class="password-toggle" onclick="togglePassword('newPassword')">
                                        <i class="fas fa-eye"></i>
                                    </button>
                                </div>
                                <div class="error-message" id="newPasswordError"></div>
                            </div>

                            <!-- Confirm New Password -->
                            <div class="form-group">
                                <label class="form-label">Confirm New Password</label>
                                <div class="password-input-group">
                                    <input type="password" class="form-control" id="confirmPassword" name="confirmPassword" placeholder="Confirm your new password">
                                    <button type="button" class="password-toggle" onclick="togglePassword('confirmPassword')">
                                        <i class="fas fa-eye"></i>
                                    </button>
                                </div>
                                <div class="error-message" id="confirmPasswordError"></div>
                            </div>
                        </div>

                        <!-- Right Column - Requirements -->
                        <div class="form-section">
                            <h3 class="form-section-title">Security Requirements</h3>

                            <!-- Password Requirements -->
                            <div class="requirements-section">
                                <div class="requirements-title">Password Requirements:</div>
                                <div class="requirement-item">
                                    <div class="requirement-dot"></div>
                                    At least 8 characters
                                </div>
                                <div class="requirement-item">
                                    <div class="requirement-dot"></div>
                                    At least one uppercase letter
                                </div>
                                <div class="requirement-item">
                                    <div class="requirement-dot"></div>
                                    At least one lowercase letter
                                </div>
                                <div class="requirement-item">
                                    <div class="requirement-dot"></div>
                                    At least one number
                                </div>
                                <div class="requirement-item">
                                    <div class="requirement-dot"></div>
                                    At least one special character
                                </div>
                                <div class="requirement-item">
                                    <div class="requirement-dot"></div>
                                    No spaces
                                </div>
                            </div>
                        </div>
                    </div>

                    <!-- Update Button -->
                    <button type="submit" class="update-btn" id="updateBtn">
                        <i class="fas fa-key"></i>
                        Update Password
                    </button>
                </form>
            </div>
        </div>
    </div>

    <script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap/5.3.0/js/bootstrap.bundle.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.min.js"></script>
    <script>
        // Toggle password visibility
        function togglePassword(inputId) {
            const input = document.getElementById(inputId);
            const icon = input.nextElementSibling.querySelector('i');

            if (input.type === 'password') {
                input.type = 'text';
                icon.classList.replace('fa-eye', 'fa-eye-slash');
            } else {
                input.type = 'password';
                icon.classList.replace('fa-eye-slash', 'fa-eye');
            }
        }

        // Clear error messages
        function clearErrors() {
            document.querySelectorAll('.error-message').forEach(error => {
                error.style.display = 'none';
                error.textContent = '';
                error.classList.remove('show');
            });
            // Remove error styling from inputs
            document.querySelectorAll('.form-control').forEach(input => {
                input.classList.remove('error');
            });
        }

        // Show error message
        function showError(fieldId, message) {
            const errorElement = document.getElementById(fieldId + 'Error');
            const inputElement = document.getElementById(fieldId);

            if (errorElement && inputElement) {
                errorElement.textContent = message;
                errorElement.style.display = 'block';
                errorElement.classList.add('show');
                inputElement.classList.add('error');

                // Focus on the field with error
                inputElement.focus();
            }
        }

        // Clear error for specific field
        function clearFieldError(fieldId) {
            const errorElement = document.getElementById(fieldId + 'Error');
            const inputElement = document.getElementById(fieldId);

            if (errorElement && inputElement) {
                errorElement.style.display = 'none';
                errorElement.textContent = '';
                errorElement.classList.remove('show');
                inputElement.classList.remove('error');
            }
        }

        // Validate individual fields
        function validateField(fieldId, value) {
            let isValid = true;

            // Clear error for this specific field first
            clearFieldError(fieldId);

            switch(fieldId) {
                case 'currentPassword':
                    if (!value.trim()) {
                        showError('currentPassword', 'Current password is required');
                        isValid = false;
                    }
                    break;

                case 'newPassword':
                    if (!value.trim()) {
                        showError('newPassword', 'New password is required');
                        isValid = false;
                    } else {
                        // Password requirements validation
                        const passwordRegex = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\d)(?=.*[@$!%*?&])[A-Za-z\d@$!%*?&]{8,}$/;
                        if (!passwordRegex.test(value)) {
                            showError('newPassword', 'Password must be at least 8 characters long and contain at least one uppercase letter, one lowercase letter, one number, and one special character');
                            isValid = false;
                        } else if (value.includes(' ')) {
                            showError('newPassword', 'Password cannot contain spaces');
                            isValid = false;
                        }
                    }
                    break;

                case 'confirmPassword':
                    const newPasswordValue = document.getElementById('newPassword').value;
                    if (!value.trim()) {
                        showError('confirmPassword', 'Please confirm your new password');
                        isValid = false;
                    } else if (value !== newPasswordValue) {
                        showError('confirmPassword', 'New passwords do not match');
                        isValid = false;
                    }
                    break;
            }
            return isValid;
        }

        // Add real-time validation
        document.getElementById('currentPassword').addEventListener('blur', function() {
            if (this.value.trim()) {
                validateField('currentPassword', this.value);
            }
        });

        document.getElementById('currentPassword').addEventListener('input', function() {
            if (this.classList.contains('error') && this.value.trim()) {
                clearFieldError('currentPassword');
            }
        });

        document.getElementById('newPassword').addEventListener('blur', function() {
            if (this.value.trim()) {
                validateField('newPassword', this.value);
                // Also revalidate confirm password if it has a value
                const confirmPassword = document.getElementById('confirmPassword').value;
                if (confirmPassword) {
                    validateField('confirmPassword', confirmPassword);
                }
            }
        });

        document.getElementById('newPassword').addEventListener('input', function() {
            if (this.classList.contains('error') && this.value.trim()) {
                clearFieldError('newPassword');
            }
            // Also clear confirm password error if passwords now match
            const confirmPassword = document.getElementById('confirmPassword');
            if (confirmPassword.classList.contains('error') && confirmPassword.value === this.value) {
                clearFieldError('confirmPassword');
            }
        });

        document.getElementById('confirmPassword').addEventListener('blur', function() {
            if (this.value.trim()) {
                validateField('confirmPassword', this.value);
            }
        });

        document.getElementById('confirmPassword').addEventListener('input', function() {
            if (this.classList.contains('error') && this.value.trim()) {
                const newPassword = document.getElementById('newPassword').value;
                if (this.value === newPassword) {
                    clearFieldError('confirmPassword');
                }
            }
        });

        // Form submission
        document.getElementById('changePasswordForm').addEventListener('submit', async function(e) {
            e.preventDefault();
            clearErrors();

            const currentPassword = document.getElementById('currentPassword').value;
            const newPassword = document.getElementById('newPassword').value;
            const confirmPassword = document.getElementById('confirmPassword').value;
            const updateBtn = document.getElementById('updateBtn');

            // Validate all fields
            let isFormValid = true;

            if (!validateField('currentPassword', currentPassword)) {
                isFormValid = false;
            }

            if (!validateField('newPassword', newPassword)) {
                isFormValid = false;
            }

            if (!validateField('confirmPassword', confirmPassword)) {
                isFormValid = false;
            }

            // If validation fails, don't submit
            if (!isFormValid) {
                return;
            }

            // Disable button and show loading
            updateBtn.disabled = true;
            updateBtn.innerHTML = '<i class="fas fa-spinner fa-spin"></i> Updating...';

            try {
                const response = await fetch('/change-password', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({
                        currentPassword,
                        newPassword,
                        confirmPassword
                    })
                });

                const data = await response.json();

                if (data.success) {
                    Swal.fire({
                        icon: 'success',
                        title: 'Success!',
                        text: 'Password updated successfully',
                        confirmButtonColor: '#000000'
                    }).then(() => {
                        // Clear form
                        document.getElementById('changePasswordForm').reset();
                        clearErrors();
                    });
                } else {
                    // Handle specific server-side errors
                    if (data.message.includes('Current password is incorrect')) {
                        showError('currentPassword', 'Current password is incorrect');
                    } else if (data.message.includes('Password must be')) {
                        showError('newPassword', data.message);
                    } else if (data.message.includes('passwords do not match')) {
                        showError('confirmPassword', 'New passwords do not match');
                    } else {
                        // Generic error - show on current password field as fallback
                        showError('currentPassword', data.message || 'Failed to update password');
                    }
                }
            } catch (error) {
                console.error('Error:', error);
                showError('currentPassword', 'An error occurred while updating password. Please try again.');
            } finally {
                // Re-enable button
                updateBtn.disabled = false;
                updateBtn.innerHTML = '<i class="fas fa-key"></i> Update Password';
            }
        });
    </script>
</body>
</html>