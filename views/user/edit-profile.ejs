<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Edit Profile - ArvanClaire</title>
    <!-- Bootstrap Icons -->
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.3/font/bootstrap-icons.css">
    <!-- Bootstrap CSS -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <!-- SweetAlert2 CSS -->
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.min.css">
    <link rel="stylesheet" href="../../../styles/user/header.css">
</head>
<body>
    <!-- Include Account Sidebar -->
    <%- include("../partials/user/account-sidebar") %>

    <link rel="stylesheet" href="../../styles/user/edit.profile.css">

<div class="main-content fade-in">
    <!-- Breadcrumb -->
    <nav aria-label="breadcrumb">
        <ol class="breadcrumb">
            <li class="breadcrumb-item"><a href="/profile">My Profile</a></li>
            <li class="breadcrumb-item active" aria-current="page">Edit Profile</li>
        </ol>
    </nav>

    <!-- Edit Profile Container -->
    <div class="edit-profile-container">
        <div class="edit-profile-header">
            <h2>Edit Profile</h2>
        </div>
        
        <div class="edit-profile-body">
            <form id="editProfileForm">
                <!-- Full Name -->
                <div class="form-group">
                    <label for="fullname" class="form-label">Full Name *</label>
                    <input type="text" class="form-control" id="fullname" name="fullname" 
                           value="<%= user.fullname || '' %>" required>
                    <div class="error-message" id="fullname-error"></div>
                </div>

                <!-- Email -->
                <div class="form-group">
                    <label for="email" class="form-label">Email Address *</label>
                    <div class="email-field-container">
                        <input type="email" class="form-control" id="email" name="email" 
                               value="<%= user.email || '' %>" disabled>
                        <button type="button" class="email-change-btn" onclick="openEmailVerificationModal()">
                            Change
                        </button>
                    </div>
                    <div class="error-message" id="email-error"></div>
                </div>

                <!-- Phone -->
                <div class="form-group">
                    <label for="phone" class="form-label">Phone Number</label>
                    <input type="tel" class="form-control" id="phone" name="phone" 
                           value="<%= user.phone || '' %>" placeholder="Enter your phone number">
                    <div class="error-message" id="phone-error"></div>
                </div>

                <!-- Form Actions -->
                <div class="form-actions">
                    <button type="submit" class="btn btn-primary" id="updateBtn">
                        <i class="fas fa-save"></i>
                        Update Profile
                    </button>
                    <a href="/profile" class="btn btn-secondary">
                        <i class="fas fa-times"></i>
                        Cancel
                    </a>
                </div>
            </form>
        </div>
    </div>
</div>

<!-- Email Verification Modal -->
<div id="emailVerificationModal" class="modal">
    <div class="modal-content">
        <div class="modal-header">
            <h3 class="modal-title">Verify Current Email</h3>
            <button type="button" class="close" onclick="closeEmailVerificationModal()">&times;</button>
        </div>
        <div class="modal-body">
            <p>To change your email address, please verify your current email first.</p>
            <div class="form-group">
                <label for="currentEmail" class="form-label">Current Email Address</label>
                <input type="email" class="form-control" id="currentEmail"
                       placeholder="Enter your current email">
                <div class="error-message" id="currentEmail-error"></div>
            </div>
        </div>
        <div class="modal-footer">
            <button type="button" class="btn btn-secondary" onclick="closeEmailVerificationModal()">Cancel</button>
            <button type="button" class="btn btn-primary" onclick="verifyCurrentEmail()" id="verifyEmailBtn">
                Send OTP
            </button>
        </div>
    </div>
</div>

<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script>
    // Set active sidebar item
    document.addEventListener('DOMContentLoaded', function() {
        // Remove active class from all menu items
        const menuItems = document.querySelectorAll('.menu-item');
        menuItems.forEach(item => item.classList.remove('active'));

        // Add active class to profile menu item (since edit profile is part of profile)
        const profileMenuItem = document.querySelector('a[href="/profile"]');
        if (profileMenuItem) {
            profileMenuItem.classList.add('active');
        }
    });

    // Form validation functions
    function validateFullname(fullname) {
        if (!fullname || fullname.trim().length < 4) {
            return 'Full name must be at least 4 characters long';
        }
        if (/\d/.test(fullname.trim())) {
            return 'Full name should not contain numbers';
        }
        return null;
    }

    function validatePhone(phone) {
        if (phone && phone.trim() && !/^[6-9]\d{9}$/.test(phone.trim())) {
            return 'Phone number must be 10 digits and start with 6, 7, 8, or 9';
        }
        return null;
    }

    function showError(fieldId, message) {
        const errorElement = document.getElementById(fieldId + '-error');
        if (errorElement) {
            errorElement.textContent = message;
            errorElement.classList.add('show');
        }
    }

    function clearError(fieldId) {
        const errorElement = document.getElementById(fieldId + '-error');
        if (errorElement) {
            errorElement.textContent = '';
            errorElement.classList.remove('show');
        }
    }

    function clearAllErrors() {
        const errorElements = document.querySelectorAll('.error-message');
        errorElements.forEach(element => {
            element.textContent = '';
            element.classList.remove('show');
        });
    }

    // Real-time validation
    document.getElementById('fullname').addEventListener('input', function() {
        const error = validateFullname(this.value);
        if (error) {
            showError('fullname', error);
        } else {
            clearError('fullname');
        }
    });

    document.getElementById('phone').addEventListener('input', function() {
        const error = validatePhone(this.value);
        if (error) {
            showError('phone', error);
        } else {
            clearError('phone');
        }
    });

    // Form submission
    document.getElementById('editProfileForm').addEventListener('submit', async function(e) {
        e.preventDefault();

        const formData = new FormData(this);
        const fullname = formData.get('fullname');
        const phone = formData.get('phone');

        // Clear previous errors
        clearAllErrors();

        // Validate form
        let hasErrors = false;

        const fullnameError = validateFullname(fullname);
        if (fullnameError) {
            showError('fullname', fullnameError);
            hasErrors = true;
        }

        const phoneError = validatePhone(phone);
        if (phoneError) {
            showError('phone', phoneError);
            hasErrors = true;
        }

        if (hasErrors) {
            return;
        }

        // Disable button and show loading
        const updateBtn = document.getElementById('updateBtn');
        updateBtn.disabled = true;
        updateBtn.innerHTML = '<i class="fas fa-spinner fa-spin"></i> Updating...';

        try {
            const response = await fetch('/profile/edit', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({
                    fullname: fullname.trim(),
                    phone: phone.trim()
                })
            });

            const data = await response.json();

            if (data.success) {
                Swal.fire({
                    icon: 'success',
                    title: 'Success!',
                    text: 'Profile updated successfully',
                    confirmButtonColor: '#000000'
                }).then(() => {
                    window.location.href = '/profile';
                });
            } else {
                if (data.errors) {
                    // Display field-specific errors
                    Object.keys(data.errors).forEach(field => {
                        showError(field, data.errors[field]);
                    });
                } else {
                    Swal.fire({
                        icon: 'error',
                        title: 'Error',
                        text: data.message || 'Failed to update profile',
                        confirmButtonColor: '#000000'
                    });
                }
            }
        } catch (error) {
            console.error('Error:', error);
            Swal.fire({
                icon: 'error',
                title: 'Error',
                text: 'An error occurred while updating profile',
                confirmButtonColor: '#000000'
            });
        } finally {
            updateBtn.disabled = false;
            updateBtn.innerHTML = '<i class="fas fa-save"></i> Update Profile';
        }
    });

    // Email verification modal functions
    function openEmailVerificationModal() {
        document.getElementById('emailVerificationModal').style.display = 'block';
        document.getElementById('currentEmail').value = '<%= user.email || "" %>';
    }

    function closeEmailVerificationModal() {
        document.getElementById('emailVerificationModal').style.display = 'none';
        clearError('currentEmail');
    }

    // Close modal when clicking outside
    window.onclick = function(event) {
        const modal = document.getElementById('emailVerificationModal');
        if (event.target === modal) {
            closeEmailVerificationModal();
        }
    }

    // Verify current email function
    async function verifyCurrentEmail() {
        const currentEmail = document.getElementById('currentEmail').value.trim();

        if (!currentEmail) {
            showError('currentEmail', 'Please enter your current email address');
            return;
        }

        const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
        if (!emailRegex.test(currentEmail)) {
            showError('currentEmail', 'Please enter a valid email address');
            return;
        }

        clearError('currentEmail');

        const verifyBtn = document.getElementById('verifyEmailBtn');
        verifyBtn.disabled = true;
        verifyBtn.textContent = 'Sending OTP...';

        try {
            const response = await fetch('/profile/verify-current-email', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({ currentEmail })
            });

            const data = await response.json();

           if (data.success) {
    closeEmailVerificationModal();

    Swal.fire({
        toast: true,
        position: 'top-end', // top-right corner
        icon: 'success',
        title: 'OTP Sent',
        text: 'An OTP has been sent to your current email address',
        showConfirmButton: false,
        timer: 3000, // auto-close after 3 seconds
        timerProgressBar: true
    });

    // Redirect after delay so user sees the toast
    setTimeout(() => {
        window.location.href = '/profile/email-change-otp';
    }, 3000); // match the toast timer
} else {
    showError('currentEmail', data.message || 'Failed to verify email');
}

        } catch (error) {
            console.error('Error:', error);
            showError('currentEmail', 'An error occurred while verifying email');
        } finally {
            verifyBtn.disabled = false;
            verifyBtn.textContent = 'Send OTP';
        }
    }
</script>
</body>
</html>