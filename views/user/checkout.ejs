<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Checkout</title>
    <link href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap/5.3.0/css/bootstrap.min.css" rel="stylesheet">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" rel="stylesheet">
    <link href="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.min.css" rel="stylesheet">
    <%- include("../partials/user/header") %>
    <style>
        :root {
            --bg-primary: #ffffff;
            --bg-secondary: #f8f9fa;
            --bg-tertiary: #e9ecef;
            --border-color: #dee2e6;
            --text-primary: #000000;
            --text-secondary: #495057;
            --text-muted: #6c757d;
            --hover-color: #f5f5f5;
            --success-color: #10b981;
            --error-color: #ef4444;
        }

        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            background-color: #f5f5f5;
            color: var(--text-primary);
            font-family: 'Inter', -apple-system, BlinkMacSystemFont, sans-serif;
            min-height: 100vh;
            padding-top: 80px;
        }

        .checkout-container {
            max-width: 1200px;
            margin: 0 auto;
            padding: 2rem;
        }

        /* Progress Timeline */
        .progress-timeline {
            background: var(--bg-primary);
            border-radius: 15px;
            padding: 2rem;
            margin-bottom: 2rem;
            box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);
            border: 1px solid var(--border-color);
        }

        .timeline-steps {
            display: flex;
            justify-content: space-between;
            align-items: center;
            position: relative;
        }

        .timeline-step {
            display: flex;
            flex-direction: column;
            align-items: center;
            position: relative;
            z-index: 2;
        }

        .step-circle {
            width: 50px;
            height: 50px;
            border-radius: 50%;
            background: var(--bg-tertiary);
            border: 3px solid var(--border-color);
            display: flex;
            align-items: center;
            justify-content: center;
            margin-bottom: 0.5rem;
            transition: all 0.3s ease;
        }

        .step-circle.active {
            background: var(--text-primary);
            border-color: var(--text-primary);
            color: white;
        }

        .step-circle.completed {
            background: var(--success-color);
            border-color: var(--success-color);
            color: white;
        }

        .step-label {
            font-size: 0.875rem;
            font-weight: 600;
            color: var(--text-muted);
            text-align: center;
        }

        .step-label.active {
            color: var(--text-primary);
        }

        .timeline-line {
            position: absolute;
            top: 25px;
            left: 0;
            right: 0;
            height: 3px;
            background: var(--border-color);
            z-index: 1;
        }

        .timeline-progress {
            height: 100%;
            background: var(--success-color);
            width: 33.33%;
            transition: width 0.3s ease;
        }

        /* Main Content Layout */
        .checkout-content {
            display: grid;
            grid-template-columns: 1fr 400px;
            gap: 2rem;
        }

        /* Address Section */
        .address-section {
            background: var(--bg-primary);
            border-radius: 15px;
            padding: 2rem;
            box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);
            border: 1px solid var(--border-color);
            margin-bottom: 2rem;
        }

        .section-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 1.5rem;
            padding-bottom: 1rem;
            border-bottom: 2px solid var(--border-color);
        }

        .section-title {
            font-size: 1.25rem;
            font-weight: 600;
            color: var(--text-primary);
            display: flex;
            align-items: center;
            gap: 0.5rem;
        }

        .btn-add-address {
            background: var(--text-primary);
            color: white;
            border: none;
            padding: 0.4rem 0.8rem;
            border-radius: 8px;
            font-size: 0.875rem;
            font-weight: 600;
            transition: all 0.3s ease;
            display: flex;
            align-items: center;
            gap: 0.5rem;
            text-decoration: none;
        }

        .btn-add-address:hover {
            background: var(--text-secondary);
            color: white;
            transform: translateY(-1px);
            text-decoration: none;
        }

        .addresses-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
            gap: 1rem;
        }

        .address-card {
            border: 2px solid var(--border-color);
            border-radius: 12px;
            padding: 1.5rem;
            background: var(--bg-primary);
            transition: all 0.3s ease;
            cursor: pointer;
            position: relative;
        }

        .address-card:hover {
            border-color: var(--text-primary);
            transform: translateY(-2px);
            box-shadow: 0 8px 25px rgba(0, 0, 0, 0.1);
        }

        .address-card.selected {
            border-color: var(--text-primary);
            background: var(--bg-secondary);
            box-shadow: 0 8px 25px rgba(0, 0, 0, 0.1);
        }

        .default-star {
            position: absolute;
            top: 12px;
            right: 12px;
            width: 32px;
            height: 32px;
            background: var(--success-color);
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            color: white;
            font-size: 0.875rem;
        }

        .address-type {
            background: var(--text-primary);
            color: white;
            padding: 0.25rem 0.75rem;
            border-radius: 20px;
            font-size: 0.75rem;
            font-weight: 600;
            text-transform: uppercase;
            display: inline-block;
            margin-bottom: 0.75rem;
        }

        .address-name {
            font-weight: 600;
            color: var(--text-primary);
            margin-bottom: 0.5rem;
            font-size: 1rem;
        }

        .address-details {
            color: var(--text-secondary);
            line-height: 1.5;
            margin-bottom: 0.75rem;
            font-size: 0.875rem;
        }

        .address-phone {
            color: var(--text-muted);
            font-size: 0.875rem;
            display: flex;
            align-items: center;
            gap: 0.5rem;
        }

        .address-actions {
            margin-top: 1rem;
            display: flex;
            gap: 0.5rem;
        }

        .btn-edit {
            background: var(--text-primary);
            color: white;
            border: none;
            padding: 0.4rem 0.8rem;
            border-radius: 6px;
            font-size: 0.75rem;
            font-weight: 600;
            transition: all 0.3s ease;
            text-decoration: none;
            display: inline-flex;
            align-items: center;
            gap: 0.25rem;
        }

        .btn-edit:hover {
            background: var(--text-secondary);
            color: white;
            text-decoration: none;
        }

        /* Products Section */
        .products-section {
            background: var(--bg-primary);
            border-radius: 15px;
            padding: 2rem;
            box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);
            border: 1px solid var(--border-color);
            margin-bottom: 2rem;
        }

        .product-item {
            display: flex;
            gap: 1rem;
            padding: 1rem 0;
            border-bottom: 1px solid var(--border-color);
        }

        .product-item:last-child {
            border-bottom: none;
        }

        .product-image {
            width: 80px;
            height: 80px;
            border-radius: 8px;
            object-fit: contain;
            border: 1px solid var(--border-color);
        }

        .product-details {
            flex: 1;
        }

        .product-name {
            font-weight: 600;
            color: var(--text-primary);
            margin-bottom: 0.25rem;
        }

        .product-brand {
            color: var(--text-muted);
            font-size: 0.875rem;
            margin-bottom: 0.5rem;
        }

        .product-price {
            display: flex;
            align-items: center;
            gap: 0.5rem;
            margin-bottom: 0.5rem;
        }

        .current-price {
            font-weight: 600;
            color: var(--text-primary);
        }

        .original-price {
            text-decoration: line-through;
            color: var(--text-muted);
            font-size: 0.875rem;
        }

        .discount-badge {
            background: var(--success-color);
            color: white;
            padding: 0.125rem 0.5rem;
            border-radius: 12px;
            font-size: 0.75rem;
            font-weight: 600;
        }

        .quantity-info {
            color: var(--text-secondary);
            font-size: 0.875rem;
        }

        /* Coupon Section */
        .coupon-section {
            background: var(--bg-primary);
            border-radius: 15px;
            padding: 1.5rem;
            box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);
            border: 1px solid var(--border-color);
            margin-bottom: 1.5rem;
        }

        .coupon-header {
            display: flex;
            align-items: center;
            gap: 0.5rem;
            margin-bottom: 1rem;
        }

        .coupon-title {
            font-size: 1.1rem;
            font-weight: 600;
            color: var(--text-primary);
        }

        .coupon-form {
            display: flex;
            flex-direction: column;
            gap: 0.75rem;
        }

        .coupon-input-group {
            width: 100%;
        }

        .coupon-input {
            width: 100%;
            padding: 0.75rem;
            border: 2px solid var(--border-color);
            border-radius: 8px;
            background: var(--bg-primary);
            color: var(--text-primary);
            font-size: 0.875rem;
            transition: all 0.3s ease;
            font-family: inherit;
        }

        .coupon-input:focus {
            outline: none;
            border-color: var(--text-primary);
            box-shadow: 0 0 0 3px rgba(0, 0, 0, 0.1);
        }

        .coupon-input::placeholder {
            color: var(--text-muted);
            text-transform: none;
        }

        .coupon-input {
            text-transform: uppercase;
        }

        .coupon-input:invalid {
            border-color: var(--error-color);
        }

        .btn-apply-coupon {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white;
            border: none;
            padding: 1rem;
            border-radius: 10px;
            font-size: 0.875rem;
            font-weight: 600;
            transition: all 0.3s ease;
            cursor: pointer;
            width: 100%;
            text-transform: uppercase;
            letter-spacing: 0.5px;
            box-shadow: 0 6px 20px rgba(102, 126, 234, 0.3);
            position: relative;
            overflow: hidden;
        }

        .btn-apply-coupon::before {
            content: '';
            position: absolute;
            top: 0;
            left: -100%;
            width: 100%;
            height: 100%;
            background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.2), transparent);
            transition: left 0.5s ease;
        }

        .btn-apply-coupon:hover::before {
            left: 100%;
        }

        .btn-apply-coupon:hover {
            background: linear-gradient(135deg, #5a67d8 0%, #6b46c1 100%);
            transform: translateY(-3px);
            box-shadow: 0 12px 25px rgba(102, 126, 234, 0.4);
        }

        .btn-apply-coupon:active {
            transform: translateY(-1px);
            transition: all 0.1s ease;
        }

        .btn-apply-coupon:disabled {
            background: var(--text-muted);
            cursor: not-allowed;
            transform: none;
            box-shadow: none;
        }

        .btn-apply-coupon:disabled::before {
            display: none;
        }

        .btn-remove-coupon {
            background: linear-gradient(135deg, #f093fb 0%, #f5576c 100%);
            color: white;
            border: none;
            padding: 1rem;
            border-radius: 10px;
            font-size: 0.875rem;
            font-weight: 600;
            transition: all 0.3s ease;
            cursor: pointer;
            width: 100%;
            text-transform: uppercase;
            letter-spacing: 0.5px;
            box-shadow: 0 6px 20px rgba(240, 147, 251, 0.3);
            position: relative;
            overflow: hidden;
        }

        .btn-remove-coupon::before {
            content: '';
            position: absolute;
            top: 0;
            left: -100%;
            width: 100%;
            height: 100%;
            background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.2), transparent);
            transition: left 0.5s ease;
        }

        .btn-remove-coupon:hover::before {
            left: 100%;
        }

        .btn-remove-coupon:hover {
            background: linear-gradient(135deg, #e879f9 0%, #ef4444 100%);
            transform: translateY(-3px);
            box-shadow: 0 12px 25px rgba(240, 147, 251, 0.4);
        }

        .btn-remove-coupon:active {
            transform: translateY(-1px);
            transition: all 0.1s ease;
        }

        /* Coupon Modal Styles */
        .coupon-modal-overlay {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: rgba(0, 0, 0, 0.5);
            z-index: 9999;
            opacity: 0;
            visibility: hidden;
            transition: all 0.4s ease;
            backdrop-filter: blur(5px);
        }

        .coupon-modal-overlay.active {
            opacity: 1;
            visibility: visible;
        }

        .coupon-modal {
            position: fixed;
            top: 0;
            right: -500px;
            width: 450px;
            height: 100vh;
            background: var(--bg-primary);
            box-shadow: -10px 0 30px rgba(0, 0, 0, 0.2);
            transition: all 0.5s cubic-bezier(0.25, 0.46, 0.45, 0.94);
            z-index: 10000;
            overflow-y: auto;
            display: flex;
            flex-direction: column;
        }

        .coupon-modal.active {
            right: 0;
        }

        .coupon-modal-header {
            padding: 2rem;
            border-bottom: 2px solid var(--border-color);
            background: var(--bg-primary);
            position: sticky;
            top: 0;
            z-index: 10001;
        }

        .coupon-modal-title {
            font-size: 1.5rem;
            font-weight: 700;
            color: var(--text-primary);
            margin: 0;
            display: flex;
            align-items: center;
            gap: 0.75rem;
        }

        .coupon-modal-close {
            position: absolute;
            top: 1.5rem;
            right: 1.5rem;
            width: 40px;
            height: 40px;
            border: none;
            background: var(--text-primary);
            color: white;
            border-radius: 50%;
            cursor: pointer;
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 1.2rem;
            transition: all 0.3s ease;
        }

        .coupon-modal-close:hover {
            background: var(--text-secondary);
            transform: rotate(90deg) scale(1.1);
        }

        .coupon-modal-body {
            padding: 2rem;
            flex: 1;
        }

        .coupon-list {
            display: flex;
            flex-direction: column;
            gap: 1rem;
        }

        .coupon-item {
            border: 2px solid transparent;
            border-radius: 12px;
            padding: 1rem;
            cursor: pointer;
            transition: all 0.3s ease;
            position: relative;
            overflow: hidden;
            background: linear-gradient(135deg, #fff9c4 0%, #fff3a0 100%);
            box-shadow: 0 4px 15px rgba(255, 193, 7, 0.1);
        }

        .coupon-item:nth-child(even) {
            background: linear-gradient(135deg, #e3f2fd 0%, #bbdefb 100%);
            box-shadow: 0 4px 15px rgba(33, 150, 243, 0.1);
        }

        .coupon-item:nth-child(3n) {
            background: linear-gradient(135deg, #f3e5f5 0%, #e1bee7 100%);
            box-shadow: 0 4px 15px rgba(156, 39, 176, 0.1);
        }

        .coupon-item:nth-child(4n) {
            background: linear-gradient(135deg, #e8f5e8 0%, #c8e6c9 100%);
            box-shadow: 0 4px 15px rgba(76, 175, 80, 0.1);
        }

        .coupon-item:hover {
            transform: translateY(-3px) scale(1.02);
            border-color: var(--text-primary);
            box-shadow: 0 8px 25px rgba(0, 0, 0, 0.15);
        }

        .coupon-item.coupon-disabled {
            opacity: 0.6;
            cursor: not-allowed;
            filter: grayscale(50%);
        }

        .coupon-item.coupon-disabled:hover {
            transform: none;
            border-color: transparent;
            box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);
        }

        .coupon-item::before {
            content: '';
            position: absolute;
            top: 0;
            left: -100%;
            width: 100%;
            height: 100%;
            background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.4), transparent);
            transition: left 0.5s ease;
        }

        .coupon-item:hover::before {
            left: 100%;
        }

        .coupon-item.coupon-disabled::before {
            display: none;
        }

        /* Coupon Header Section */
        .coupon-header-section {
            display: flex;
            justify-content: space-between;
            align-items: flex-start;
            margin-bottom: 0.5rem;
            gap: 0.75rem;
        }

        .coupon-code {
            font-size: 1.1rem;
            font-weight: 700;
            color: var(--text-primary);
            text-transform: uppercase;
            letter-spacing: 0.5px;
            flex: 1;
            line-height: 1.2;
        }

        .coupon-status {
            display: flex;
            align-items: center;
            gap: 0.2rem;
            padding: 0.2rem 0.4rem;
            border-radius: 10px;
            font-size: 0.65rem;
            font-weight: 600;
            color: white;
            text-transform: uppercase;
            letter-spacing: 0.3px;
            white-space: nowrap;
        }

        .coupon-status i {
            font-size: 0.7rem;
        }

        .coupon-description {
            color: var(--text-secondary);
            font-size: 0.85rem;
            margin-bottom: 0.6rem;
            line-height: 1.3;
        }

        /* Discount Info Section */
        .coupon-discount-info {
            margin-bottom: 0.6rem;
        }

        .coupon-discount {
            background: var(--text-primary);
            color: white;
            padding: 0.35rem 0.8rem;
            border-radius: 16px;
            font-size: 0.9rem;
            font-weight: 700;
            display: inline-block;
            text-transform: uppercase;
            letter-spacing: 0.3px;
        }

        /* Coupon Details Grid */
        .coupon-details-grid {
            display: grid;
            grid-template-columns: 1fr;
            gap: 0.4rem;
            margin-bottom: 0.75rem;
            padding: 0.75rem;
            background: rgba(255, 255, 255, 0.3);
            border-radius: 6px;
            border: 1px solid rgba(255, 255, 255, 0.5);
        }

        .coupon-detail-item {
            display: flex;
            justify-content: space-between;
            align-items: center;
            padding: 0.25rem 0;
        }

        .detail-label {
            display: flex;
            align-items: center;
            gap: 0.4rem;
            color: var(--text-secondary);
            font-size: 0.75rem;
            font-weight: 500;
        }

        .detail-label i {
            width: 14px;
            text-align: center;
            color: var(--text-primary);
            font-size: 0.7rem;
        }

        .detail-value {
            color: var(--text-primary);
            font-size: 0.8rem;
            font-weight: 600;
        }

        .coupon-select-btn {
            width: 100%;
            background: var(--text-primary);
            color: white;
            border: none;
            padding: 0.6rem;
            border-radius: 6px;
            font-size: 0.8rem;
            font-weight: 600;
            cursor: pointer;
            transition: all 0.3s ease;
            text-transform: uppercase;
            letter-spacing: 0.3px;
        }

        .coupon-select-btn:hover {
            background: var(--text-secondary);
            transform: translateY(-1px);
        }

        .coupon-select-btn.coupon-disabled-btn {
            background: var(--text-muted);
            cursor: not-allowed;
            opacity: 0.7;
        }

        .coupon-select-btn.coupon-disabled-btn:hover {
            background: var(--text-muted);
            transform: none;
        }

        /* Responsive adjustments for coupon details */
        @media (max-width: 480px) {
            .coupon-item {
                padding: 0.75rem;
            }

            .coupon-header-section {
                flex-direction: column;
                align-items: flex-start;
                gap: 0.4rem;
                margin-bottom: 0.4rem;
            }

            .coupon-code {
                font-size: 0.95rem;
            }

            .coupon-description {
                font-size: 0.8rem;
                margin-bottom: 0.5rem;
            }

            .coupon-details-grid {
                padding: 0.6rem;
                gap: 0.3rem;
                margin-bottom: 0.6rem;
            }

            .detail-label {
                font-size: 0.7rem;
            }

            .detail-value {
                font-size: 0.75rem;
            }

            .coupon-select-btn {
                padding: 0.5rem;
                font-size: 0.75rem;
            }
        }

        .no-coupons {
            text-align: center;
            padding: 3rem 1rem;
            color: var(--text-muted);
        }

        .no-coupons i {
            font-size: 3rem;
            margin-bottom: 1rem;
            opacity: 0.5;
        }

        /* Modal Animation Keyframes */
        @keyframes slideInRight {
            from {
                transform: translateX(100%);
                opacity: 0;
            }
            to {
                transform: translateX(0);
                opacity: 1;
            }
        }

        @keyframes slideOutRight {
            from {
                transform: translateX(0);
                opacity: 1;
            }
            to {
                transform: translateX(100%);
                opacity: 0;
            }
        }

        @keyframes fadeIn {
            from {
                opacity: 0;
            }
            to {
                opacity: 1;
            }
        }

        @keyframes fadeOut {
            from {
                opacity: 1;
            }
            to {
                opacity: 0;
            }
        }

        /* Responsive Modal */
        @media (max-width: 768px) {
            .coupon-modal {
                width: 100%;
                right: -100%;
            }
            
            .coupon-modal-header {
                padding: 1.5rem;
            }
            
            .coupon-modal-body {
                padding: 1.5rem;
            }
        }

        .coupon-success {
            background: #f0fdf4;
            border: 1px solid #22c55e;
            border-radius: 8px;
            padding: 0.75rem;
            margin-top: 0.75rem;
            display: flex;
            align-items: center;
            gap: 0.5rem;
            color: #15803d;
            font-size: 0.875rem;
        }

        .coupon-error {
            background: #fef2f2;
            border: 1px solid #ef4444;
            border-radius: 8px;
            padding: 0.75rem;
            margin-top: 0.75rem;
            display: flex;
            align-items: center;
            gap: 0.5rem;
            color: #dc2626;
            font-size: 0.875rem;
        }

        /* Sidebar */
        .sidebar {
            display: flex;
            flex-direction: column;
            gap: 0;
        }

        /* Order Summary Sidebar */
        .order-summary {
            background: var(--bg-primary);
            border-radius: 15px;
            padding: 2rem;
            box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);
            border: 1px solid var(--border-color);
            height: fit-content;
            position: sticky;
            top: 100px;
        }

        .summary-row {
            display: flex;
            justify-content: space-between;
            align-items: center;
            padding: 0.75rem 0;
            border-bottom: 1px solid var(--border-color);
        }

        .summary-row:last-child {
            border-bottom: none;
            font-weight: 600;
            font-size: 1.125rem;
            padding-top: 1rem;
            margin-top: 1rem;
            border-top: 2px solid var(--border-color);
        }

        .summary-label {
            color: var(--text-secondary);
        }

        .summary-value {
            color: var(--text-primary);
            font-weight: 600;
        }

        .btn-place-order {
            width: 100%;
            background: var(--text-primary);
            color: white;
            border: none;
            padding: 1rem;
            border-radius: 8px;
            font-size: 1rem;
            font-weight: 600;
            margin-top: 1.5rem;
            transition: all 0.3s ease;
            display: flex;
            align-items: center;
            justify-content: center;
            gap: 0.5rem;
        }

        .btn-place-order:hover {
            background: var(--text-secondary);
            transform: translateY(-2px);
            box-shadow: 0 8px 25px rgba(0, 0, 0, 0.15);
        }

        .btn-place-order:disabled {
            background: var(--text-muted);
            cursor: not-allowed;
            transform: none;
            box-shadow: none;
        }

        /* Payment Method Section */
        .payment-methods {
            display: grid;
            gap: 0.5rem;
            margin-top: 1rem;
        }

        .payment-option {
            border: 2px solid var(--border-color);
            border-radius: 8px;
            padding: 0.75rem;
            background: var(--bg-primary);
            transition: all 0.3s ease;
            cursor: pointer;
            position: relative;
            width: 100%;
        }

        .payment-option:hover {
            border-color: var(--text-primary);
            transform: translateY(-2px);
            box-shadow: 0 8px 25px rgba(0, 0, 0, 0.1);
        }

        .payment-option.selected {
            border-color: var(--text-primary);
            background: var(--bg-secondary);
            box-shadow: 0 8px 25px rgba(0, 0, 0, 0.1);
        }

        .payment-option.disabled {
            opacity: 0.5;
            cursor: not-allowed;
            background: var(--bg-tertiary);
        }

        .payment-option.disabled:hover {
            transform: none;
            box-shadow: none;
            border-color: var(--border-color);
        }

        .payment-header {
            display: flex;
            align-items: center;
            gap: 0.75rem;
            margin-bottom: 0.25rem;
        }

        .payment-icon {
            width: 28px;
            height: 28px;
            border-radius: 50%;
            background: var(--text-primary);
            color: white;
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 0.9rem;
            flex-shrink: 0;
        }

        .payment-option.disabled .payment-icon {
            background: var(--text-muted);
        }

        .payment-title {
            font-weight: 600;
            color: var(--text-primary);
            font-size: 0.9rem;
            flex: 1;
        }

        .payment-option.disabled .payment-title {
            color: var(--text-muted);
        }

        .payment-description {
            color: var(--text-secondary);
            font-size: 0.75rem;
            margin-left: 44px;
            line-height: 1.2;
        }

        .payment-option.disabled .payment-description {
            color: var(--text-muted);
        }

        .payment-balance {
            color: var(--text-primary);
            font-weight: 600;
            font-size: 0.75rem;
            margin-left: 44px;
            line-height: 1.2;
        }

        .payment-insufficient {
            color: var(--error-color);
            font-size: 0.65rem;
            margin-left: 44px;
            margin-top: 0.1rem;
            line-height: 1.2;
        }

        .payment-selected-indicator {
            position: absolute;
            top: 12px;
            right: 12px;
            width: 24px;
            height: 24px;
            border-radius: 50%;
            background: var(--success-color);
            color: white;
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 0.75rem;
            opacity: 0;
            transition: opacity 0.3s ease;
        }

        .payment-option.selected .payment-selected-indicator {
            opacity: 1;
        }

        /* Responsive Design */
        @media (max-width: 768px) {
            .checkout-container {
                padding: 1rem;
            }

            .checkout-content {
                grid-template-columns: 1fr;
                gap: 1rem;
            }

            .sidebar {
                order: -1;
            }

            .order-summary, .coupon-section {
                position: static;
            }

            .timeline-steps {
                flex-direction: column;
                gap: 1rem;
            }

            .timeline-line {
                display: none;
            }

            .addresses-grid {
                grid-template-columns: 1fr;
            }

            .coupon-form {
                flex-direction: column;
                gap: 1rem;
            }

            .payment-methods {
                gap: 0.75rem;
            }

            .payment-option {
                padding: 1rem;
            }
        }

        .fade-in {
            animation: fadeIn 0.6s ease-in;
        }

        @keyframes fadeIn {
            from {
                opacity: 0;
                transform: translateY(20px);
            }
            to {
                opacity: 1;
                transform: translateY(0);
            }
        }
        </style>
</head>
<body>
    <div class="checkout-container">
        <!-- Progress Timeline -->
        <div class="progress-timeline fade-in">
            <div class="timeline-steps">
                <div class="timeline-line">
                    <div class="timeline-progress"></div>
                </div>
                <div class="timeline-step">
                    <div class="step-circle completed">
                        <i class="fas fa-shopping-cart"></i>
                    </div>
                    <div class="step-label">Cart</div>
                </div>
                <div class="timeline-step">
                    <div class="step-circle active">
                        <i class="fas fa-map-marker-alt"></i>
                    </div>
                    <div class="step-label active">Address</div>
                </div>
                <div class="timeline-step">
                    <div class="step-circle">
                        <i class="fas fa-credit-card"></i>
                    </div>
                    <div class="step-label">Payment</div>
                </div>
                <div class="timeline-step">
                    <div class="step-circle">
                        <i class="fas fa-check"></i>
                    </div>
                    <div class="step-label">Confirmation</div>
                </div>
            </div>
        </div>

        <div class="checkout-content">
            <div class="checkout-main">
                <!-- Address Selection -->
                <div class="address-section fade-in">
                    <div class="section-header">
                        <h3 class="section-title">
                            <i class="fas fa-map-marker-alt"></i>
                            Delivery Address
                        </h3>
                        <a href="/address/add?returnTo=checkout" class="btn-add-address">
                            <i class="fas fa-plus"></i>
                            Add New Address
                        </a>
                    </div>

                    <% if (addresses && addresses.length > 0) { %>
                        <div class="addresses-grid">
                            <% addresses.forEach((address, index) => { %>
                                <div class="address-card <%= index === 0 ? 'selected' : '' %>" 
                                     data-address-id="<%= address._id %>"
                                     onclick="selectAddress(this)">
                                    <% if (address.isDefault) { %>
                                        <div class="default-star">
                                            <i class="fas fa-star"></i>
                                        </div>
                                    <% } %>
                                    <div class="address-type"><%= address.addressType %></div>
                                    <div class="address-name"><%= address.name %></div>
                                    <div class="address-details">
                                        <%= address.landMark %>, <%= address.city %><br>
                                        <%= address.state %> - <%= address.pincode %>
                                    </div>
                                    <div class="address-phone">
                                        <i class="fas fa-phone"></i> <%= address.phone %>
                                    </div>
                                    <div class="address-actions">
                                        <a href="/address/edit/<%= address._id %>?returnTo=checkout" class="btn-edit">
                                            <i class="fas fa-edit"></i> Edit
                                        </a>
                                    </div>
                                </div>
                            <% }); %>
                        </div>
                    <% } else { %>
                        <div class="text-center py-4">
                            <i class="fas fa-map-marker-alt fa-3x text-muted mb-3"></i>
                            <h5>No addresses found</h5>
                            <p class="text-muted">Please add a delivery address to continue</p>
                            <a href="/address/add?returnTo=checkout" class="btn-add-address">
                                <i class="fas fa-plus"></i>
                                Add Address
                            </a>
                        </div>
                    <% } %>
                </div>

                <!-- Products Section -->
                <div class="products-section fade-in">
                    <div class="section-header">
                        <h3 class="section-title">
                            <i class="fas fa-shopping-bag"></i>
                            Order Items (<%= cartItems.length %> items)
                        </h3>
                    </div>

                    <% cartItems.forEach(item => { %>
                        <%
                            const regularPrice = item.productId.regularPrice;
                            const salePrice = item.productId.salePrice;
                            const quantity = item.quantity;
                            
                            // Calculate totals based on sale price (final price customer pays)
                            const itemTotal = salePrice * quantity;
                            const discountPerItem = regularPrice - salePrice;
                            const totalDiscountForItem = discountPerItem * quantity;
                            const discountPercentage = regularPrice > 0 ? Math.round((discountPerItem / regularPrice) * 100) : 0;
                        %>
                        <div class="product-item">
                            <img src="/uploads/products/<%= item.productId.mainImage %>"
                                 alt="<%= item.productId.productName %>"
                                 class="product-image">
                            <div class="product-details">
                                <div class="product-name"><%= item.productId.productName %></div>
                                <div class="product-brand">Brand: <%= item.productId.brand %></div>
                                <div class="product-price">
                                    <span class="current-price">₹<%= salePrice.toFixed(2) %></span>
                                    <% if (discountPerItem > 0) { %>
                                        <span class="original-price">₹<%= regularPrice.toFixed(2) %></span>
                                        <span class="discount-badge"><%= discountPercentage %>% OFF</span>
                                    <% } %>
                                </div>
                                <div class="quantity-info">
                                    Quantity: <%= quantity %> | Total: ₹<%= itemTotal.toFixed(2) %>
                                    <% if (totalDiscountForItem > 0) { %>
                                        <br><small style="color: var(--success-color);">You save: ₹<%= totalDiscountForItem.toFixed(2) %> on this item</small>
                                    <% } %>
                                </div>
                            </div>
                        </div>
                    <% }); %>
                </div>
            </div>

            <!-- Sidebar -->
            <div class="sidebar">
                <!-- Coupon Section -->
                <div class="coupon-section fade-in">
                    <div class="coupon-header">
                        <i class="fas fa-tag"></i>
                        <h4 class="coupon-title">Apply Coupon</h4>
                    </div>
                    
                    <div class="coupon-form">
                        <button class="btn-apply-coupon" id="applyCouponBtn" onclick="applyCoupon()">
                            Apply Coupon
                        </button>
                        <div class="coupon-input-group">
                            <input type="text" 
                                   class="coupon-input" 
                                   id="couponInput" 
                                   placeholder="Enter coupon code"
                                   maxlength="20"
                                   pattern="[A-Z0-9]+"
                                   title="Coupon code should contain only letters and numbers">
                        </div>
                    </div>

                    <!-- Coupon Status Messages -->
                    <div id="couponSuccess" class="coupon-success" style="display: none;">
                        <i class="fas fa-check-circle"></i>
                        <span id="couponSuccessText"></span>
                    </div>
                    
                    <div id="couponError" class="coupon-error" style="display: none;">
                        <i class="fas fa-exclamation-circle"></i>
                        <span id="couponErrorText"></span>
                    </div>
                </div>

                <!-- Order Summary -->
                <div class="order-summary fade-in">
                <h3 class="section-title mb-3">
                    <i class="fas fa-receipt"></i>
                    Order Summary
                </h3>

                <div class="summary-row">
                    <span class="summary-label">Subtotal</span>
                    <span class="summary-value">₹<%= orderSummary.subtotal.toFixed(2) %></span>
                </div>

                <% if (orderSummary.totalDiscount > 0) { %>
                <div class="summary-row">
                    <span class="summary-label">Discount</span>
                    <span class="summary-value" style="color: var(--success-color);">-₹<%= orderSummary.totalDiscount.toFixed(2) %></span>
                </div>
                <% } %>

                <div class="summary-row">
                    <span class="summary-label">Shipping</span>
                    <span class="summary-value">
                        <% if (orderSummary.shippingCharges === 0) { %>
                            <span style="color: var(--success-color);">FREE</span>
                        <% } else { %>
                            ₹<%= orderSummary.shippingCharges.toFixed(2) %>
                        <% } %>
                    </span>
                </div>

                <div id="couponDiscountRow" class="summary-row" style="display: none;">
                    <span class="summary-label">Coupon Discount</span>
                    <span class="summary-value" style="color: var(--success-color);" id="couponDiscountAmount">-₹0.00</span>
                </div>

                <div class="summary-row">
                    <span class="summary-label">Total</span>
                    <span class="summary-value" id="finalTotal">₹<%= orderSummary.finalAmount.toFixed(2) %></span>
                </div>

                <!-- Payment Method Section -->
                <div class="mt-3 pt-3" style="border-top: 2px solid var(--border-color);">
                    <h5 class="mb-3" style="font-size: 1rem; font-weight: 600; color: var(--text-primary); display: flex; align-items: center; gap: 0.5rem;">
                        <i class="fas fa-credit-card"></i>
                        Payment Method
                    </h5>
                    
                    <div class="payment-methods">
                        <!-- Wallet Payment -->
                        <div class="payment-option <%= (user.walletBalance && user.walletBalance >= orderSummary.finalAmount) ? '' : 'disabled' %>" 
                             data-payment="Wallet" onclick="selectPaymentMethod(this)">
                            <div class="payment-header">
                                <div class="payment-icon">
                                    <i class="fas fa-wallet"></i>
                                </div>
                                <div class="payment-title">Wallet Payment</div>
                            </div>
                            <div class="payment-description">Pay using your wallet balance</div>
                            <div class="payment-balance">Balance: ₹<%= (user.walletBalance || 0).toFixed(2) %></div>
                            <% if (!user.walletBalance || user.walletBalance < orderSummary.finalAmount) { %>
                                <div class="payment-insufficient">Insufficient balance</div>
                            <% } %>
                            <div class="payment-selected-indicator">
                                <i class="fas fa-check"></i>
                            </div>
                        </div>

                        <!-- Online Payment -->
                        <div class="payment-option" data-payment="Online Payment" onclick="selectPaymentMethod(this)">
                            <div class="payment-header">
                                <div class="payment-icon">
                                    <i class="fas fa-credit-card"></i>
                                </div>
                                <div class="payment-title">Online Payment</div>
                            </div>
                            <div class="payment-description">UPI, Cards, Net Banking & More</div>
                            <div class="payment-selected-indicator">
                                <i class="fas fa-check"></i>
                            </div>
                        </div>

                        <!-- Cash on Delivery -->
                        <div class="payment-option selected" data-payment="Cash on Delivery" onclick="selectPaymentMethod(this)">
                            <div class="payment-header">
                                <div class="payment-icon">
                                    <i class="fas fa-money-bill-wave"></i>
                                </div>
                                <div class="payment-title">Cash on Delivery</div>
                            </div>
                            <div class="payment-description">Pay when your order is delivered</div>
                            <div class="payment-selected-indicator">
                                <i class="fas fa-check"></i>
                            </div>
                        </div>
                    </div>
                </div>

                <button class="btn-place-order" onclick="placeOrder()"
                        <%= addresses.length === 0 ? 'disabled' : '' %>>
                    <i class="fas fa-check-circle"></i>
                    Place Order
                </button>
                </div>
            </div>
        </div>
    </div>

    <!-- Coupon Modal -->
    <div class="coupon-modal-overlay" id="couponModalOverlay" onclick="closeCouponModal()">
        <div class="coupon-modal" id="couponModal" onclick="event.stopPropagation()">
            <div class="coupon-modal-header">
                <h3 class="coupon-modal-title">
                    <i class="fas fa-tags"></i>
                    Available Coupons
                </h3>
                <button class="coupon-modal-close" onclick="closeCouponModal()">
                    <i class="fas fa-times"></i>
                </button>
            </div>
            <div class="coupon-modal-body">
                <div class="coupon-list" id="couponList">
                    <% if (coupons && coupons.length > 0) { %>
                        <% coupons.forEach((coupon, index) => { %>
                            <%
                                // Determine coupon status
                                let couponStatus = 'active';
                                let statusColor = '#10b981'; // green for active
                                let statusIcon = 'fas fa-check-circle';
                                
                                const currentDate = new Date();
                                const expiryDate = coupon.expiry ? new Date(coupon.expiry) : null;
                                
                                if (expiryDate && currentDate > expiryDate) {
                                    couponStatus = 'expired';
                                    statusColor = '#ef4444'; // red for expired
                                    statusIcon = 'fas fa-times-circle';
                                } else if (coupon.usedCount >= coupon.usageLimit) {
                                    couponStatus = 'used';
                                    statusColor = '#f59e0b'; // orange for used up
                                    statusIcon = 'fas fa-exclamation-circle';
                                }
                            %>
                            <div class="coupon-item <%= couponStatus === 'active' ? '' : 'coupon-disabled' %>" 
                                 onclick="<%= couponStatus === 'active' ? `selectCouponFromModal('${coupon.code}')` : '' %>">
                                
                                <!-- Coupon Header with Code and Status -->
                                <div class="coupon-header-section">
                                    <div class="coupon-code"><%= coupon.code %></div>
                                    <div class="coupon-status" style="background-color: <%= statusColor %>;">
                                        <i class="<%= statusIcon %>"></i>
                                        <span><%= couponStatus.toUpperCase() %></span>
                                    </div>
                                </div>
                                
                                <!-- Description -->
                                <div class="coupon-description"><%= coupon.description %></div>
                                
                                <!-- Discount Amount/Percentage -->
                                <div class="coupon-discount-info">
                                    <div class="coupon-discount">
                                        <% if (coupon.discountType === 'percentage') { %>
                                            <%= coupon.discount %>% OFF
                                        <% } else { %>
                                            ₹<%= coupon.discount %> OFF
                                        <% } %>
                                    </div>
                                </div>
                                
                                <!-- Coupon Details Grid -->
                                <div class="coupon-details-grid">
                                    <div class="coupon-detail-item">
                                        <div class="detail-label">
                                            <i class="fas fa-shopping-cart"></i>
                                            Min. Purchase
                                        </div>
                                        <div class="detail-value">₹<%= coupon.minPurchase || 0 %></div>
                                    </div>
                                    
                                    <div class="coupon-detail-item">
                                        <div class="detail-label">
                                            <i class="fas fa-calendar-alt"></i>
                                            Validity
                                        </div>
                                        <div class="detail-value">
                                            <% if (coupon.expiry) { %>
                                                <%= new Date(coupon.expiry).toLocaleDateString('en-IN', { 
                                                    day: '2-digit', 
                                                    month: 'short', 
                                                    year: 'numeric' 
                                                }) %>
                                            <% } else { %>
                                                No Expiry
                                            <% } %>
                                        </div>
                                    </div>
                                    
                                    <div class="coupon-detail-item">
                                        <div class="detail-label">
                                            <i class="fas fa-user"></i>
                                            Per User Limit
                                        </div>
                                        <div class="detail-value">
                                            <%= coupon.userUsageLimit || 'Unlimited' %>
                                        </div>
                                    </div>
                                </div>
                                
                                <!-- Select Button -->
                                <% if (couponStatus === 'active') { %>
                                    <button class="coupon-select-btn" onclick="event.stopPropagation(); selectCouponFromModal('<%= coupon.code %>')">
                                        Select This Coupon
                                    </button>
                                <% } else { %>
                                    <button class="coupon-select-btn coupon-disabled-btn" disabled>
                                        <% if (couponStatus === 'expired') { %>
                                            Coupon Expired
                                        <% } else { %>
                                            Usage Limit Reached
                                        <% } %>
                                    </button>
                                <% } %>
                            </div>
                        <% }); %>
                    <% } else { %>
                        <div class="no-coupons">
                            <i class="fas fa-tag"></i>
                            <h4>No Coupons Available</h4>
                            <p>There are no active coupons at the moment. Check back later for exciting offers!</p>
                        </div>
                    <% } %>
                </div>
            </div>
        </div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap/5.3.0/js/bootstrap.bundle.min.js"></script>
    <script src="https://checkout.razorpay.com/v1/checkout.js"></script>
    <script>
        let selectedAddressId = null;
        let selectedPaymentMethod = 'Cash on Delivery';
        let appliedCoupon = <% if (appliedCoupon) { %>{ code: '<%= appliedCoupon.code %>', discount: <%= appliedCoupon.discount %> }<% } else { %>null<% } %>;
        let originalTotal = <%= orderSummary.finalAmount + (appliedCoupon ? appliedCoupon.discount : 0) %>;
        let currentTotal = <%= orderSummary.finalAmount %>;

        // Initialize page
        document.addEventListener('DOMContentLoaded', function() {
            // Set first address as selected if available
            const firstAddress = document.querySelector('.address-card');
            if (firstAddress) {
                selectedAddressId = firstAddress.dataset.addressId;
            }

            // Show toast notification if address operation was successful
            <% if (addressSuccess) { %>
                const Toast = Swal.mixin({
                    toast: true,
                    position: 'bottom-end',
                    showConfirmButton: false,
                    timer: 3000,
                    timerProgressBar: true,
                    background: '#ffffff',
                    color: '#000000',
                    iconColor: '#28a745'
                });

                Toast.fire({
                    icon: 'success',
                    title: '<%= addressSuccess %>'
                });
            <% } %>

            // Show coupon removed message if applicable
            <% if (couponRemovedMessage) { %>
                const CouponToast = Swal.mixin({
                    toast: true,
                    position: 'bottom-end',
                    showConfirmButton: false,
                    timer: 5000,
                    timerProgressBar: true,
                    background: '#ffffff',
                    color: '#000000',
                    iconColor: '#ffc107'
                });

                CouponToast.fire({
                    icon: 'warning',
                    title: '<%= couponRemovedMessage %>'
                });
            <% } %>
            
            // Initialize coupon state if one is already applied
            if (appliedCoupon) {
                const couponInput = document.getElementById('couponInput');
                couponInput.value = appliedCoupon.code;
                
                const applyBtn = document.getElementById('applyCouponBtn');
                applyBtn.textContent = 'Remove Coupon';
                applyBtn.className = 'btn-remove-coupon';
                applyBtn.onclick = removeCoupon;
                
                showCouponSuccess(`Coupon applied! You saved ₹${appliedCoupon.discount.toFixed(2)}`);
            }

            // Add Enter key support for coupon input
            const couponInput = document.getElementById('couponInput');
            couponInput.addEventListener('keypress', function(e) {
                if (e.key === 'Enter') {
                    e.preventDefault();
                    const applyBtn = document.getElementById('applyCouponBtn');
                    if (!applyBtn.disabled) {
                        const manualCoupon = couponInput.value.trim();
                        if (manualCoupon) {
                            applyCouponDirectly(manualCoupon);
                        } else {
                            openCouponModal();
                        }
                    }
                }
            });

            // Add input validation
            couponInput.addEventListener('input', function(e) {
                // Convert to uppercase and remove spaces
                e.target.value = e.target.value.toUpperCase().replace(/\s/g, '');
                
                // Clear any previous error messages when user starts typing
                hideCouponMessages();
            });
        });

        // Address selection
        function selectAddress(element) {
            // Remove selected class from all cards
            document.querySelectorAll('.address-card').forEach(card => {
                card.classList.remove('selected');
            });

            // Add selected class to clicked card
            element.classList.add('selected');
            selectedAddressId = element.dataset.addressId;

            // Enable place order button
            const placeOrderBtn = document.querySelector('.btn-place-order');
            placeOrderBtn.disabled = false;
        }

        // Payment method selection
        function selectPaymentMethod(element) {
            // Check if payment option is disabled
            if (element.classList.contains('disabled')) {
                return;
            }

            // Remove selected class from all payment options
            document.querySelectorAll('.payment-option').forEach(option => {
                option.classList.remove('selected');
            });

            // Add selected class to clicked option
            element.classList.add('selected');
            selectedPaymentMethod = element.dataset.payment;
        }

        // Coupon functionality - Open modal or remove coupon
        function applyCoupon() {
            const applyBtn = document.getElementById('applyCouponBtn');
            
            // If coupon is already applied, remove it
            if (appliedCoupon) {
                removeCoupon();
                return;
            }
            
            // Check if user entered a coupon code manually
            const couponInput = document.getElementById('couponInput');
            const manualCoupon = couponInput.value.trim();
            
            if (manualCoupon) {
                // Apply the manually entered coupon
                applyCouponDirectly(manualCoupon);
            } else {
                // Open the coupon modal
                openCouponModal();
            }
        }

        // Apply coupon directly (for manual entry)
        async function applyCouponDirectly(couponCode) {
            const applyBtn = document.getElementById('applyCouponBtn');
            applyBtn.disabled = true;
            applyBtn.textContent = 'Applying...';
            
            try {
                const response = await fetch('/checkout/apply-coupon', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({
                        couponCode: couponCode,
                        orderAmount: originalTotal
                    })
                });
                
                const result = await response.json();
                
                if (result.success) {
                    // Apply discount
                    appliedCoupon = {
                        code: result.couponCode,
                        discount: result.discount
                    };
                    
                    currentTotal = originalTotal - result.discount;
                    updateOrderSummary();
                    showCouponSuccess(result.message);
                    
                    // Change button to remove coupon
                    applyBtn.textContent = 'Remove Coupon';
                    applyBtn.className = 'btn-remove-coupon';
                } else {
                    showCouponError(result.message);
                    // Reset button
                    applyBtn.textContent = 'Apply Coupon';
                    applyBtn.className = 'btn-apply-coupon';
                }
            } catch (error) {
                console.error('Error applying coupon:', error);
                showCouponError('Error applying coupon. Please try again.');
                // Reset button
                applyBtn.textContent = 'Apply Coupon';
                applyBtn.className = 'btn-apply-coupon';
            } finally {
                applyBtn.disabled = false;
            }
        }

        // Open coupon modal
        function openCouponModal() {
            const overlay = document.getElementById('couponModalOverlay');
            const modal = document.getElementById('couponModal');
            
            // Show overlay first
            overlay.classList.add('active');
            
            // Add a small delay for smooth animation
            setTimeout(() => {
                modal.classList.add('active');
            }, 50);
            
            // Prevent body scroll
            document.body.style.overflow = 'hidden';
        }

        // Close coupon modal
        function closeCouponModal() {
            const overlay = document.getElementById('couponModalOverlay');
            const modal = document.getElementById('couponModal');
            
            // Hide modal first
            modal.classList.remove('active');
            
            // Hide overlay after modal animation
            setTimeout(() => {
                overlay.classList.remove('active');
                // Restore body scroll
                document.body.style.overflow = 'auto';
            }, 500);
        }

        // Select coupon from modal
        function selectCouponFromModal(couponCode) {
            // Close modal first
            closeCouponModal();
            
            // Set the coupon code in input
            const couponInput = document.getElementById('couponInput');
            couponInput.value = couponCode;
            
            // Apply the selected coupon after modal closes
            setTimeout(() => {
                applyCouponDirectly(couponCode);
            }, 600);
        }

        // Add escape key support for modal
        document.addEventListener('keydown', function(e) {
            if (e.key === 'Escape') {
                const overlay = document.getElementById('couponModalOverlay');
                if (overlay.classList.contains('active')) {
                    closeCouponModal();
                }
            }
        });

        async function removeCoupon() {
            const applyBtn = document.getElementById('applyCouponBtn');
            applyBtn.disabled = true;
            applyBtn.textContent = 'Removing...';

            try {
                const response = await fetch('/checkout/remove-coupon', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    }
                });

                const result = await response.json();

                if (result.success) {
                    appliedCoupon = null;
                    currentTotal = originalTotal;
                    updateOrderSummary();
                    hideCouponMessages();

                    // Reset coupon input
                    document.getElementById('couponInput').value = '';

                    // Change button back to apply
                    applyBtn.textContent = 'Apply Coupon';
                    applyBtn.className = 'btn-apply-coupon';
                    applyBtn.onclick = applyCoupon;
                } else {
                    showCouponError(result.message || 'Error removing coupon');
                }
            } catch (error) {
                console.error('Error removing coupon:', error);
                showCouponError('Error removing coupon. Please try again.');
            } finally {
                applyBtn.disabled = false;
            }
        }

        

        function updateOrderSummary() {
            const couponRow = document.getElementById('couponDiscountRow');
            const couponAmount = document.getElementById('couponDiscountAmount');
            const finalTotal = document.getElementById('finalTotal');
            
            if (appliedCoupon && appliedCoupon.discount > 0) {
                couponRow.style.display = 'flex';
                couponAmount.textContent = `-₹${appliedCoupon.discount.toFixed(2)}`;
            } else {
                couponRow.style.display = 'none';
            }
            
            finalTotal.textContent = `₹${currentTotal.toFixed(2)}`;
        }

        function showCouponSuccess(message) {
            hideCouponMessages();
            const successDiv = document.getElementById('couponSuccess');
            const successText = document.getElementById('couponSuccessText');
            successText.textContent = message;
            successDiv.style.display = 'flex';
        }

        function showCouponError(message) {
            hideCouponMessages();
            const errorDiv = document.getElementById('couponError');
            const errorText = document.getElementById('couponErrorText');
            errorText.textContent = message;
            errorDiv.style.display = 'flex';
        }

        function hideCouponMessages() {
            document.getElementById('couponSuccess').style.display = 'none';
            document.getElementById('couponError').style.display = 'none';
        }



        // Place order
        async function placeOrder() {
            if (!selectedAddressId) {
                Swal.fire({
                    icon: 'warning',
                    title: 'Address Required',
                    text: 'Please select a delivery address',
                    position: 'bottom-end',
                    background: '#ffffff',
                    color: '#000000',
                    confirmButtonColor: '#000000',
                    iconColor: '#ffc107'
                });
                return;
            }
            
            const placeOrderBtn = document.querySelector('.btn-place-order');
            const originalText = placeOrderBtn.innerHTML;

            // Show loading state
            placeOrderBtn.disabled = true;
            placeOrderBtn.innerHTML = '<i class="fas fa-spinner fa-spin"></i> Placing Order...';

            try {
                if (selectedPaymentMethod === 'Online Payment') {
                    // Handle Razorpay payment
                    await handleOnlinePayment();
                } else {
                    // Handle COD and Wallet payments
                    const response = await fetch('/checkout/place-order', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json'
                        },
                        body: JSON.stringify({
                            selectedAddressId: selectedAddressId,
                            paymentMethod: selectedPaymentMethod,
                            appliedCoupon: appliedCoupon,
                            finalAmount: currentTotal
                        })
                    });

                    const result = await response.json();

                    if (result.success) {
                        // Redirect to order success page
                        window.location.href = `/order-success/${result.orderId}`;
                    } else {
                        throw new Error(result.message || 'Failed to place order');
                    }
                }
            } catch (error) {
                console.error('Error placing order:', error);
                Swal.fire({
                    icon: 'error',
                    title: 'Order Failed',
                    text: error.message || 'Failed to place order. Please try again.',
                    position: 'bottom-end',
                    background: '#ffffff',
                    color: '#000000',
                    confirmButtonColor: '#000000',
                    iconColor: '#dc3545'
                });

                // Reset button
                placeOrderBtn.disabled = false;
                placeOrderBtn.innerHTML = originalText;
            }
        }

        // Handle online payment with Razorpay
        async function handleOnlinePayment() {
            try {
                // Create Razorpay order
                const response = await fetch('/checkout/create-razorpay-order', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({
                        selectedAddressId: selectedAddressId,
                        paymentMethod: 'Online Payment',
                        appliedCoupon: appliedCoupon,
                        finalAmount: currentTotal
                    })
                });

                const result = await response.json();

                if (!result.success) {
                    throw new Error(result.message || 'Failed to create payment order');
                }

                // Initialize Razorpay
                const options = {
                    key: result.razorpayKeyId,
                    amount: result.amount,
                    currency: result.currency,
                    name: 'ARVENCLAIRE',
                    description: 'Order Payment',
                    order_id: result.razorpayOrderId,
                    prefill: {
                        name: result.prefill.name,
                        email: result.prefill.email,
                        contact: result.prefill.contact
                    },
                    theme: {
                        color: '#000000'
                    },
                    handler: async function (response) {
                        // Payment successful - verify payment
                        try {
                            const verifyResponse = await fetch('/checkout/verify-payment', {
                                method: 'POST',
                                headers: {
                                    'Content-Type': 'application/json'
                                },
                                body: JSON.stringify({
                                    razorpay_order_id: response.razorpay_order_id,
                                    razorpay_payment_id: response.razorpay_payment_id,
                                    razorpay_signature: response.razorpay_signature,
                                    orderId: result.orderId
                                })
                            });

                            const verifyResult = await verifyResponse.json();

                            if (verifyResult.success) {
                                // Payment verified successfully
                                Swal.fire({
                                    icon: 'success',
                                    title: 'Payment Successful!',
                                    text: 'Your payment has been processed successfully.',
                                    position: 'bottom-end',
                                    showConfirmButton: false,
                                    timer: 2000,
                                    timerProgressBar: true
                                }).then(() => {
                                    window.location.href = `/order-success/${result.orderId}`;
                                });
                            } else {
                                throw new Error(verifyResult.message || 'Payment verification failed');
                            }
                        } catch (error) {
                            console.error('Payment verification error:', error);
                            
                            // Mark payment as failed and redirect to failure page
                            try {
                                await fetch('/checkout/payment-failed', {
                                    method: 'POST',
                                    headers: {
                                        'Content-Type': 'application/json'
                                    },
                                    body: JSON.stringify({
                                        orderId: result.orderId,
                                        error: { description: 'Payment verification failed' }
                                    })
                                });
                                
                                // Redirect to failure page
                                window.location.href = `/order-failure/${result.orderId}`;
                            } catch (failureError) {
                                // Fallback: show alert if redirect fails
                                Swal.fire({
                                    icon: 'error',
                                    title: 'Payment Verification Failed',
                                    text: 'There was an issue verifying your payment. Please contact support.',
                                    confirmButtonColor: '#ef4444'
                                });
                            }
                        }
                    },
                    modal: {
                        ondismiss: function() {
                            // Payment modal closed - reset button
                            const placeOrderBtn = document.querySelector('.btn-place-order');
                            placeOrderBtn.disabled = false;
                            placeOrderBtn.innerHTML = '<i class="fas fa-check-circle"></i> Place Order';
                        }
                    }
                };

                // Create Razorpay instance and open payment modal
                const rzp = new Razorpay(options);
                
                rzp.on('payment.failed', async function (response) {
                    // Payment failed
                    try {
                        await fetch('/checkout/payment-failed', {
                            method: 'POST',
                            headers: {
                                'Content-Type': 'application/json'
                            },
                            body: JSON.stringify({
                                orderId: result.orderId,
                                error: response.error
                            })
                        });

                        // Redirect to failure page instead of showing alert
                        window.location.href = `/order-failure/${result.orderId}`;

                    } catch (error) {
                        console.error('Error handling payment failure:', error);
                        
                        // Fallback: show alert if redirect fails
                        Swal.fire({
                            icon: 'error',
                            title: 'Payment Failed',
                            text: response.error.description || 'Payment was not successful',
                            confirmButtonColor: '#ef4444'
                        });

                        // Reset button
                        const placeOrderBtn = document.querySelector('.btn-place-order');
                        placeOrderBtn.disabled = false;
                        placeOrderBtn.innerHTML = '<i class="fas fa-check-circle"></i> Place Order';
                    }
                });

                rzp.open();

            } catch (error) {
                console.error('Error creating Razorpay order:', error);
                throw error;
            }
        }

            </script>

    <%- include("../partials/user/footer") %>
