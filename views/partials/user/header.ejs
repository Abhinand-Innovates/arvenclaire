<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>ArvanClaire - Luxury Watches</title>
    <!-- Bootstrap Icons -->
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.3/font/bootstrap-icons.css">
    <!-- Bootstrap CSS -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <!-- SweetAlert2 CSS -->
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.min.css">
    <link rel="stylesheet" href="../../../styles/user/header.css">

    <!-- SweetAlert2 Custom Styles -->
    <style>
        /* Custom SweetAlert2 styling for consistency */
        .swal2-popup {
            font-family: 'Inter', sans-serif !important;
        }

        .swal2-title {
            color: #111827 !important;
            font-weight: 600 !important;
        }

        .swal2-content {
            color: #374151 !important;
        }

        .swal2-confirm {
            background-color: #111827 !important;
            border: none !important;
            font-weight: 500 !important;
        }

        .swal2-confirm:hover {
            background-color: #1f2937 !important;
        }


    </style>

    <style>
        /* Navbar Link Styling with Shaking Hover Effect */
        .navbar-nav {
            gap: 2rem; /* Add gap between nav items */
        }

        .navbar-nav .nav-item {
            position: relative;
        }

        /* Navbar links with fast underline animation */
        .navbar-nav .nav-link {
            color: #000000 !important;
            font-weight: 600;
            font-size: 16px;
            padding: 0.75rem 1rem !important;
            margin: 0 0.5rem;
            position: relative;
            background: transparent;
            border: none;
            text-decoration: none;
            transition: all 0.2s ease;
        }

        /* Fast underline animation */
        .navbar-nav .nav-link::after {
            content: '';
            position: absolute;
            bottom: 0;
            left: 0;
            width: 0;
            height: 2px;
            background-color: #000000;
            transition: width 0.15s ease-in-out; /* Fast movement */
        }

        /* Hover effect with text shadow and fast underline */
        .navbar-nav .nav-link:hover {
            color: #000000 !important;
            text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.3);
        }

        .navbar-nav .nav-link:hover::after {
            width: 100%; /* Fast underline appears */
        }

        /* Active link styling */
        .navbar-nav .nav-link.active {
            color: #000000 !important;
            background: transparent;
        }

        /* Navbar brand styling - no hover effects */
        .navbar-brand {
            font-weight: 700 !important;
            font-size: 1.75rem !important;
            color: #000000 !important;
            letter-spacing: 1.5px;
            text-decoration: none !important;
        }

        /* Search box styling with smart hover */
        .search-box {
            border: 2px solid #e9ecef;
            border-radius: 25px 0 0 25px;
            padding: 0.5rem 1rem;
            transition: all 0.2s ease;
        }

        .search-box:focus {
            border-color: #000000;
            box-shadow: 0 0 0 0.2rem rgba(0, 0, 0, 0.1);
        }

        .search-box:hover {
            border-color: #000000;
        }

        .search-btn {
            background: #000000;
            border: 2px solid #000000;
            border-radius: 0 25px 25px 0;
            color: white;
            padding: 0.5rem 1rem;
            transition: all 0.2s ease;
        }

        .search-btn:hover {
            background: #333333;
        }

        /* Cart and wishlist icons styling with shaking hover effect */
        .cart-icon, .cart-icon + a {
            font-size: 1.5rem;
            color: #000000 !important;
            padding: 0.5rem;
            border-radius: 50%;
            transition: all 0.2s ease;
            position: relative;
            display: inline-flex;
            align-items: center;
            justify-content: center;
            width: 45px;
            height: 45px;
        }

        /* Shaking animation */
        @keyframes shake {
            0%, 100% { transform: translateX(0); }
            10%, 30%, 50%, 70%, 90% { transform: translateX(-2px); }
            20%, 40%, 60%, 80% { transform: translateX(2px); }
        }

        .cart-icon:hover, .cart-icon + a:hover {
            color: #000000 !important;
            background: rgba(0, 0, 0, 0.05);
            animation: shake 0.5s ease-in-out;
        }

        /* Account icon styling with smart hover */
        .account-icon {
            color: #000000;
            font-size: 2rem;
            cursor: pointer;
            display: flex;
            align-items: center;
            justify-content: center;
            width: 45px;
            height: 45px;
            border-radius: 50%;
            background: rgba(0, 0, 0, 0.05);
            border: 2px solid transparent;
            transition: all 0.2s ease;
            position: relative;
        }

        .account-icon::after {
            content: '';
            position: absolute;
            bottom: 0;
            left: 50%;
            width: 0;
            height: 3px;
            background-color: #000000;
            transition: width 0.25s ease-in-out;
            transform: translateX(-50%);
            border-radius: 2px;
        }

        .account-icon:hover {
            background: rgba(0, 0, 0, 0.1);
            border-color: rgba(0, 0, 0, 0.1);
        }

        .account-icon:hover::after {
            width: 70%;
        }

        /* Login/Signup button styling with smart hover */
        .btn-custom {
            background: #000000;
            border: 2px solid #000000;
            color: white;
            font-weight: 600;
            padding: 0.5rem 1.5rem;
            border-radius: 25px;
            text-decoration: none;
            transition: all 0.2s ease;
            position: relative;
            overflow: hidden;
        }

        .btn-custom::after {
            content: '';
            position: absolute;
            bottom: 0;
            left: 0;
            width: 0;
            height: 3px;
            background-color: #ffffff;
            transition: width 0.25s ease-in-out;
        }

        .btn-custom:hover {
            background: #333333;
            color: white;
            border-color: #333333;
        }

        .btn-custom:hover::after {
            width: 100%;
        }

        /* Mobile Navigation Sidebar */
        .mobile-nav-overlay {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: rgba(0, 0, 0, 0.5);
            z-index: 9998;
            opacity: 0;
            visibility: hidden;
            transition: all 0.3s ease;
        }

        .mobile-nav-overlay.show {
            opacity: 1;
            visibility: visible;
        }

        .mobile-nav-sidebar {
            position: fixed;
            top: 0;
            left: -300px;
            width: 300px;
            height: 100%;
            background: #ffffff;
            z-index: 9999;
            transition: left 0.3s ease;
            box-shadow: 2px 0 10px rgba(0, 0, 0, 0.1);
            overflow-y: auto;
        }

        .mobile-nav-sidebar.show {
            left: 0;
        }

        .mobile-nav-header {
            padding: 1.5rem;
            border-bottom: 1px solid #e5e7eb;
            background: linear-gradient(135deg, #f8f9fa 0%, #e9ecef 100%);
            position: relative;
        }

        .mobile-nav-brand {
            font-family: 'Times New Roman', Times, serif;
            font-size: 1.5rem;
            font-weight: 700;
            color: #000000;
            text-decoration: none;
            letter-spacing: 1.5px;
        }

        .mobile-nav-close {
            position: absolute;
            top: 1rem;
            right: 1rem;
            background: none;
            border: none;
            font-size: 1.5rem;
            color: #6b7280;
            cursor: pointer;
            padding: 0.5rem;
            border-radius: 50%;
            transition: all 0.2s ease;
        }

        .mobile-nav-close:hover {
            background: rgba(0, 0, 0, 0.1);
            color: #000000;
        }

        .mobile-nav-menu {
            padding: 1rem 0;
        }

        .mobile-nav-item {
            display: block;
            padding: 1rem 1.5rem;
            color: #374151;
            text-decoration: none;
            font-weight: 500;
            font-size: 1rem;
            border-bottom: 1px solid #f3f4f6;
            transition: all 0.2s ease;
            position: relative;
        }

        .mobile-nav-item:hover {
            background: #f8f9fa;
            color: #000000;
            padding-left: 2rem;
        }

        .mobile-nav-item i {
            width: 20px;
            margin-right: 0.75rem;
            font-size: 1.1rem;
        }

        .mobile-nav-item.active {
            background: #f8f9fa;
            color: #000000;
            border-left: 4px solid #000000;
        }

        /* User section in mobile nav */
        .mobile-nav-user {
            padding: 1.5rem;
            border-top: 1px solid #e5e7eb;
            background: #f8f9fa;
        }

        .mobile-user-info {
            display: flex;
            align-items: center;
            margin-bottom: 1rem;
        }

        .mobile-user-avatar {
            width: 50px;
            height: 50px;
            background: linear-gradient(135deg, #000000 0%, #333333 100%);
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            color: white;
            font-weight: 700;
            font-size: 1.2rem;
            margin-right: 1rem;
            border: 2px solid #ffffff;
            box-shadow: 0 2px 8px rgba(0, 0, 0, 0.15);
        }

        .mobile-user-details h4 {
            margin: 0;
            font-size: 1rem;
            font-weight: 600;
            color: #111827;
        }

        .mobile-user-details p {
            margin: 0;
            font-size: 0.875rem;
            color: #6b7280;
        }

        .mobile-nav-logout {
            display: block;
            width: 100%;
            padding: 0.75rem 1rem;
            background: #dc3545;
            color: white;
            border: none;
            border-radius: 8px;
            font-weight: 600;
            text-decoration: none;
            text-align: center;
            transition: all 0.2s ease;
        }

        .mobile-nav-logout:hover {
            background: #c82333;
            color: white;
            transform: translateY(-1px);
        }

        .mobile-nav-auth {
            padding: 1.5rem;
            border-top: 1px solid #e5e7eb;
        }

        .mobile-auth-btn {
            display: block;
            width: 100%;
            padding: 0.75rem 1rem;
            margin-bottom: 0.75rem;
            text-align: center;
            text-decoration: none;
            border-radius: 8px;
            font-weight: 600;
            transition: all 0.2s ease;
        }

        .mobile-auth-btn.login {
            background: #000000;
            color: white;
            border: 2px solid #000000;
        }

        .mobile-auth-btn.login:hover {
            background: #333333;
            color: white;
        }

        .mobile-auth-btn.signup {
            background: white;
            color: #000000;
            border: 2px solid #000000;
        }

        .mobile-auth-btn.signup:hover {
            background: #f8f9fa;
            color: #000000;
        }

        /* Mobile Navbar Styles */
        @media (max-width: 991px) {
            /* Hide search bar completely on mobile */
            .navbar .d-flex.me-3 {
                display: none !important;
            }

            /* Mobile navbar layout - single row */
            .navbar .container {
                display: flex !important;
                align-items: center !important;
                justify-content: space-between !important;
                flex-wrap: nowrap !important;
                padding: 0 1rem !important;
            }

            /* Left side container: Burger + Brand */
            .navbar-left-container {
                display: flex !important;
                align-items: center !important;
                gap: 0.75rem !important;
                order: 1;
            }

            .navbar-toggler {
                border: none !important;
                padding: 0.25rem 0.5rem !important;
                font-size: 1rem !important;
                background: none !important;
                margin: 0 !important;
            }

            .navbar-toggler:focus {
                box-shadow: none !important;
            }

            .navbar-toggler-icon {
                background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 30 30'%3e%3cpath stroke='rgba%2833, 37, 41, 0.75%29' stroke-linecap='round' stroke-miterlimit='10' stroke-width='2' d='M4 7h22M4 15h22M4 23h22'/%3e%3c/svg%3e") !important;
            }

            .navbar-brand {
                font-size: 1.2rem !important;
                margin: 0 !important;
                order: 2;
            }

            /* Right side: Icons container */
            .mobile-icons-container {
                display: flex !important;
                align-items: center !important;
                gap: 0.75rem !important;
                order: 3;
            }

            /* Hide desktop navigation menu */
            .navbar-collapse {
                display: none !important;
            }

            /* Icon sizing for mobile */
            .account-icon {
                width: 35px !important;
                height: 35px !important;
                font-size: 1.4rem !important;
            }

            .cart-icon {
                font-size: 1.3rem !important;
                width: 35px !important;
                height: 35px !important;
                display: flex !important;
                align-items: center !important;
                justify-content: center !important;
            }

            /* Consistent icon styling */
            .cart-icon, .cart-icon + a {
                width: 35px !important;
                height: 35px !important;
                border-radius: 50% !important;
                transition: all 0.2s ease !important;
            }

            .cart-icon:hover, .cart-icon + a:hover {
                background: rgba(0, 0, 0, 0.05) !important;
            }

            /* Mobile dropdown positioning */
            .account-dropdown {
                min-width: 220px !important;
                right: 0 !important;
                left: auto !important;
            }

            /* Faster animations on mobile */
            .navbar-nav .nav-link::after,
            .account-icon::after,
            .btn-custom::after {
                transition: width 0.12s ease-in-out;
            }
        }

        @media (max-width: 768px) {
            .navbar-brand {
                font-size: 1.1rem !important;
            }

            .mobile-icons-container {
                gap: 0.5rem !important;
            }

            .account-icon {
                width: 32px !important;
                height: 32px !important;
                font-size: 1.3rem !important;
            }

            .cart-icon {
                font-size: 1.2rem !important;
                width: 32px !important;
                height: 32px !important;
            }

            .cart-icon, .cart-icon + a {
                width: 32px !important;
                height: 32px !important;
            }

            .wishlist-count, .cart-count {
                width: 16px !important;
                height: 16px !important;
                font-size: 10px !important;
                top: -4px !important;
                right: -4px !important;
            }

            /* Even faster animations on small screens */
            .navbar-nav .nav-link::after,
            .account-icon::after,
            .btn-custom::after {
                transition: width 0.1s ease-in-out;
            }
        }

        /* Solid white navbar background */
        .navbar {
            background-color: #ffffff !important;
            opacity: 1 !important;
            position: fixed !important;
            top: 0 !important;
            width: 100% !important;
            z-index: 1050 !important;
        }

        /* Custom SweetAlert2 Styling for Logout */
        .logout-swal-popup {
            border-radius: 16px !important;
            box-shadow: 0 20px 25px -5px rgba(0, 0, 0, 0.1), 0 10px 10px -5px rgba(0, 0, 0, 0.04) !important;
        }

        .logout-swal-title {
            color: #111827 !important;
            font-weight: 600 !important;
            font-size: 1.5rem !important;
        }

        .logout-swal-content {
            color: #6b7280 !important;
            font-size: 1rem !important;
        }

        .logout-swal-confirm {
            background-color: #dc3545 !important;
            border: none !important;
            border-radius: 8px !important;
            font-weight: 600 !important;
            padding: 12px 24px !important;
            font-size: 14px !important;
        }

        .logout-swal-confirm:hover {
            background-color: #c82333 !important;
            transform: translateY(-1px) !important;
            box-shadow: 0 4px 12px rgba(220, 53, 69, 0.4) !important;
        }

        .logout-swal-cancel {
            background-color: #6c757d !important;
            border: none !important;
            border-radius: 8px !important;
            font-weight: 600 !important;
            padding: 12px 24px !important;
            font-size: 14px !important;
        }

        .logout-swal-cancel:hover {
            background-color: #5a6268 !important;
            transform: translateY(-1px) !important;
            box-shadow: 0 4px 12px rgba(108, 117, 125, 0.4) !important;
        }

        /* SweetAlert2 Loading Animation */
        .swal2-loading .swal2-styled.swal2-confirm {
            background-color: #17a2b8 !important;
        }

        /* Custom animation for SweetAlert2 */
        .swal2-popup.swal2-show {
            animation: swal2-show 0.3s ease-out !important;
        }

        @keyframes swal2-show {
            0% {
                transform: scale(0.7);
                opacity: 0;
            }
            45% {
                transform: scale(1.05);
                opacity: 1;
            }
            80% {
                transform: scale(0.95);
            }
            100% {
                transform: scale(1);
            }
        }

        /* User Information Header Styling */
        .user-info-header {
            background: linear-gradient(135deg, #f8f9fa 0%, #e9ecef 100%);
            border-radius: 12px 12px 0 0;
            margin: 0;
            padding: 0 !important;
        }

        .user-info-header .d-flex {
            padding: 1rem !important;
        }

        .user-avatar {
            width: 45px;
            height: 45px;
            background: linear-gradient(135deg, #000000 0%, #333333 100%);
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            color: white;
            font-weight: 700;
            font-size: 18px;
            box-shadow: 0 2px 8px rgba(0, 0, 0, 0.15);
            border: 2px solid #ffffff;
        }

        .user-details {
            flex: 1;
            min-width: 0;
        }

        .user-name {
            font-weight: 600;
            font-size: 16px;
            color: #2c3e50;
            margin-bottom: 2px;
            white-space: nowrap;
            overflow: hidden;
            text-overflow: ellipsis;
        }

        .user-email {
            font-size: 13px;
            color: #6c757d;
            white-space: nowrap;
            overflow: hidden;
            text-overflow: ellipsis;
            font-style: italic;
        }

        /* Dropdown functionality */
        .dropdown {
            position: relative;
        }

        .dropdown-menu {
            display: none;
            position: absolute;
            top: 100%;
            right: 0;
            z-index: 1000;
            min-width: 10rem;
            padding: 0.5rem 0;
            margin: 0;
            font-size: 0.875rem;
            color: #212529;
            text-align: left;
            list-style: none;
            background-color: #fff;
            background-clip: padding-box;
            border: 1px solid rgba(0,0,0,.15);
            border-radius: 0.375rem;
            box-shadow: 0 0.5rem 1rem rgba(0,0,0,.175);
        }

        .dropdown-menu.show {
            display: block !important;
        }

        /* Adjust dropdown menu styling for user info */
        .account-dropdown {
            min-width: 280px !important;
            padding: 0 !important;
        }

        .account-dropdown .dropdown-divider {
            margin: 0.5rem 1rem;
            border-color: rgba(0, 0, 0, 0.1);
        }

        .account-dropdown .dropdown-item {
            padding: 0.75rem 1.25rem;
            font-size: 14px;
            font-weight: 500;
            color: #374151;
            border: none;
            background: transparent;
            margin: 0 0.5rem;
            border-radius: 6px;
        }

        .account-dropdown .dropdown-item:hover {
            background: rgba(0, 0, 0, 0.05);
            color: #000000;
        }

        .account-dropdown .dropdown-item i {
            font-size: 16px;
            width: 20px;
        }

        .account-dropdown .logout-btn {
            color: #dc3545;
        }

        .account-dropdown .logout-btn:hover {
            background: rgba(220, 53, 69, 0.1);
            color: #dc3545;
        }

        /* Cart and Wishlist Icons */
        .cart-icon {
            position: relative;
            font-size: 1.5rem;
            text-decoration: none;
            transition: color 0.3s ease;
        }

        .cart-icon:hover {
            color: #000000 !important;
            text-decoration: none;
        }

        .wishlist-count, .cart-count {
            position: absolute;
            top: -8px;
            right: -8px;
            background: #e74c3c;
            color: white;
            border-radius: 50%;
            width: 20px;
            height: 20px;
            font-size: 12px;
            font-weight: 700;
            display: flex;
            align-items: center;
            justify-content: center;
            line-height: 1;
            min-width: 20px;
            z-index: 1000;
            border: 2px solid white;
            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);
        }

        .cart-count {
            background: #000000;
        }

        /* Responsive adjustments */
        @media (max-width: 768px) {
            .account-dropdown {
                min-width: 250px !important;
            }

            .user-name {
                font-size: 15px;
            }

            .user-email {
                font-size: 12px;
            }

            .user-avatar {
                width: 40px;
                height: 40px;
                font-size: 16px;
            }

            .cart-icon {
                font-size: 1.3rem;
            }

            .wishlist-count, .cart-count {
                width: 18px;
                height: 18px;
                font-size: 11px;
                top: -6px;
                right: -6px;
                border: 1px solid white;
            }
        }
    </style>

</head>

<body>
    <!-- Mobile Navigation Sidebar -->
    <div class="mobile-nav-overlay" id="mobileNavOverlay"></div>
    <div class="mobile-nav-sidebar" id="mobileNavSidebar">
        <!-- Header -->
        <div class="mobile-nav-header">
            <% if (typeof user !== 'undefined' && user) { %>
                <a href="/dashboard" class="mobile-nav-brand">ARVENCLAIRE</a>
            <% } else { %>
                <a href="/" class="mobile-nav-brand">ARVENCLAIRE</a>
            <% } %>
            <button class="mobile-nav-close" id="mobileNavClose">
                <i class="bi bi-x"></i>
            </button>
        </div>

        <!-- Navigation Menu -->
        <div class="mobile-nav-menu">
            <% if (typeof user !== 'undefined' && user) { %>
                <a href="/dashboard" class="mobile-nav-item">
                    <i class="bi bi-house"></i>Home
                </a>
            <% } else { %>
                <a href="/" class="mobile-nav-item">
                    <i class="bi bi-house"></i>Home
                </a>
            <% } %>
            <a href="/shop" class="mobile-nav-item">
                <i class="bi bi-shop"></i>Shop
            </a>
            <a href="/about" class="mobile-nav-item">
                <i class="bi bi-info-circle"></i>About
            </a>
            <a href="/contact" class="mobile-nav-item">
                <i class="bi bi-envelope"></i>Contact
            </a>
        </div>

        <!-- User Section -->
        <% if (typeof user !== 'undefined' && user) { %>
            <div class="mobile-nav-user">
                <div class="mobile-user-info">
                    <div class="mobile-user-avatar">
                        <%= (user.fullname || user.name || user.displayName || user.googleName || 'User').charAt(0).toUpperCase() %>
                    </div>
                    <div class="mobile-user-details">
                        <h4><%= user.fullname || user.name || user.displayName || user.googleName || 'User' %></h4>
                        <p><%= user.email || 'No email provided' %></p>
                    </div>
                </div>
                <a href="/profile" class="mobile-nav-item">
                    <i class="bi bi-person"></i>My Account
                </a>
                <button class="mobile-nav-logout mobile-logout-btn">
                    <i class="bi bi-box-arrow-right me-2"></i>Logout
                </button>
            </div>
        <% } else { %>
            <!-- Auth Section for Guests -->
            <div class="mobile-nav-auth">
                <a href="/login" class="mobile-auth-btn login">
                    <i class="bi bi-box-arrow-in-right me-2"></i>Login
                </a>
                <a href="/signup" class="mobile-auth-btn signup">
                    <i class="bi bi-person-plus me-2"></i>Sign Up
                </a>
            </div>
        <% } %>
    </div>

    <!-- Navigation -->
    <nav class="navbar navbar-expand-lg navbar-light py-3 shadow-sm fixed-top" style="background-color: #ffffff !important;">
        <div class="container">
            <!-- Left side container: Burger + Brand (Mobile Only) -->
            <div class="navbar-left-container d-lg-none">
                <!-- Burger Button -->
                <button class="navbar-toggler" type="button" id="mobileNavToggle">
                    <span class="navbar-toggler-icon"></span>
                </button>

                <!-- Website Name/Brand -->
                <% if (typeof user !== 'undefined' && user) { %>
                    <a class="navbar-brand" href="/dashboard"
                        style="font-family: 'Times New Roman', Times, serif;">ARVENCLAIRE</a>
                <% } else { %>
                    <a class="navbar-brand" href="/"
                        style="font-family: 'Times New Roman', Times, serif;">ARVENCLAIRE</a>
                <% } %>
            </div>

            <!-- Desktop Brand (Desktop Only) -->
            <% if (typeof user !== 'undefined' && user) { %>
                <a class="navbar-brand d-none d-lg-block" href="/dashboard"
                    style="font-family: 'Times New Roman', Times, serif;">ARVENCLAIRE</a>
            <% } else { %>
                <a class="navbar-brand d-none d-lg-block" href="/"
                    style="font-family: 'Times New Roman', Times, serif;">ARVENCLAIRE</a>
            <% } %>

            <!-- Mobile Icons Container (Mobile Only) -->
            <div class="mobile-icons-container d-lg-none">
                <!-- Wishlist Icon -->
                <a href="/wishlist" class="text-dark cart-icon" id="wishlistIconMobile">
                    <i class="bi bi-heart"></i>
                    <span class="wishlist-count" id="wishlistCountMobile" style="display: none;">0</span>
                </a>

                <!-- Cart Icon -->
                <a href="/cart" class="text-dark cart-icon" id="cartIconMobile">
                    <i class="bi bi-cart"></i>
                    <span class="cart-count" id="cartCountMobile" style="display: none;">0</span>
                </a>

                <!-- Account Icon Dropdown -->
                <div class="dropdown">
                    <button class="account-icon btn p-0" type="button" id="accountDropdownMobile"
                        style="border: none; background: none;">
                        <i class="bi bi-person-circle"></i>
                    </button>
                    
                    <% if (typeof user !=='undefined' && user) { %>
                        <!-- Logged In User Dropdown -->
                        <ul class="dropdown-menu account-dropdown">
                            <!-- User Information Header -->
                            <li class="user-info-header">
                                <div class="d-flex align-items-center p-3">
                                    <div class="user-avatar me-3">
                                        <%= (user.fullname || user.name || user.displayName || user.googleName || 'User').charAt(0).toUpperCase() %>
                                    </div>
                                    <div class="user-details">
                                        <div class="user-name"><%= user.fullname || user.name || user.displayName || user.googleName || 'User' %></div>
                                        <div class="user-email"><%= user.email || 'No email provided' %></div>
                                    </div>
                                </div>
                            </li>
                            <li><hr class="dropdown-divider"></li>
                            <!-- Menu Items -->
                            <li><a class="dropdown-item" href="/profile"><i class="bi bi-person me-2"></i>My Account</a>
                            </li>
                            <li>
                                <hr class="dropdown-divider">
                            </li>
                            <li><a class="dropdown-item logout-btn" href="/logout"><i
                                        class="bi bi-box-arrow-right me-2"></i>Logout</a></li>
                        </ul>
                    <% } else { %>
                        <!-- Guest User Dropdown -->
                        <ul class="dropdown-menu account-dropdown">
                            <li><a class="dropdown-item" href="/login"><i class="bi bi-box-arrow-in-right me-2"></i>Login</a></li>
                            <li><a class="dropdown-item" href="/signup"><i class="bi bi-person-plus me-2"></i>Sign Up</a></li>
                        </ul>
                    <% } %>
                </div>
            </div>

            <!-- Desktop Navigation (Hidden on Mobile) -->
            <div class="collapse navbar-collapse" id="navbarNav">
                <ul class="navbar-nav me-auto">
                    <li class="nav-item">
                        <% if (typeof user !== 'undefined' && user) { %>
                            <a class="nav-link active" href="/dashboard">Home</a>
                        <% } else { %>
                            <a class="nav-link active" href="/">Home</a>
                        <% } %>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="/shop">Shop</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="/about">About</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="/contact">Contact</a>
                    </li>
                </ul>

                <!-- Desktop Search Bar -->
                <form class="d-flex me-3 mb-2 mb-lg-0" id="navbarSearchForm">
                    <div class="input-group">
                        <input class="form-control search-box"
                               type="search"
                               id="navbarSearchInput"
                               name="search"
                               placeholder="Search products or brands..."
                               autocomplete="off">
                        <button class="search-btn" type="submit">
                            <i class="bi bi-search"></i>
                        </button>
                    </div>
                </form>

                <!-- Desktop Icons -->
                <div class="d-flex align-items-center">
                    <!-- Wishlist Icon -->
                    <a href="/wishlist" class="me-3 text-dark cart-icon" id="wishlistIcon">
                        <i class="bi bi-heart"></i>
                        <span class="wishlist-count" id="wishlistCount" style="display: none;">0</span>
                    </a>

                    <!-- Cart Icon -->
                    <a href="/cart" class="me-3 text-dark cart-icon" id="cartIcon">
                        <i class="bi bi-cart"></i>
                        <span class="cart-count" id="cartCount" style="display: none;">0</span>
                    </a>

                    <!-- Account Icon Dropdown -->
                    <div class="dropdown">
                        <button class="account-icon btn p-0" type="button" id="accountDropdown"
                            style="border: none; background: none;">
                            <i class="bi bi-person-circle"></i>
                        </button>
                        
                        <% if (typeof user !=='undefined' && user) { %>
                            <!-- Logged In User Dropdown -->
                            <ul class="dropdown-menu account-dropdown">
                                <!-- User Information Header -->
                                <li class="user-info-header">
                                    <div class="d-flex align-items-center p-3">
                                        <div class="user-avatar me-3">
                                            <%= (user.fullname || user.name || user.displayName || user.googleName || 'User').charAt(0).toUpperCase() %>
                                        </div>
                                        <div class="user-details">
                                            <div class="user-name"><%= user.fullname || user.name || user.displayName || user.googleName || 'User' %></div>
                                            <div class="user-email"><%= user.email || 'No email provided' %></div>
                                        </div>
                                    </div>
                                </li>
                                <li><hr class="dropdown-divider"></li>
                                <!-- Menu Items -->
                                <li><a class="dropdown-item" href="/profile"><i class="bi bi-person me-2"></i>My Account</a>
                                </li>
                                <li>
                                    <hr class="dropdown-divider">
                                </li>
                                <li><a class="dropdown-item logout-btn" href="/logout"><i
                                            class="bi bi-box-arrow-right me-2"></i>Logout</a></li>
                            </ul>
                        <% } else { %>
                            <!-- Guest User Dropdown -->
                            <ul class="dropdown-menu account-dropdown">
                                <li><a class="dropdown-item" href="/login"><i class="bi bi-box-arrow-in-right me-2"></i>Login</a></li>
                                <li><a class="dropdown-item" href="/signup"><i class="bi bi-person-plus me-2"></i>Sign Up</a></li>
                            </ul>
                        <% } %>
                    </div>
                </div>
            </div>
        </div>
    </nav>



    <!-- SweetAlert2 JavaScript -->
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.6/dist/js/bootstrap.bundle.min.js" integrity="sha384-j1CDi7MgGQ12Z7Qab0qlWQ/Qqz24Gc6BM0thvEMVjHnfYGF0rmFCozFSxQBxwHKO" crossorigin="anonymous"></script>

    <script>
        // SweetAlert2 Notification System
        function showSweetAlert(message, type = 'success', duration = 3000) {
            let icon, title;

            switch(type) {
                case 'success':
                    icon = 'success';
                    title = 'Success!';
                    break;
                case 'error':
                    icon = 'error';
                    title = 'Error!';
                    break;
                case 'info':
                    icon = 'info';
                    title = 'Information';
                    break;
                default:
                    icon = 'success';
                    title = 'Success!';
            }

            Swal.fire({
                icon: icon,
                title: title,
                text: message,
                position: 'bottom-end',
                showConfirmButton: false,
                timer: duration,
                timerProgressBar: true,
                toast: true,
                background: '#ffffff',
                color: '#111827',
                iconColor: type === 'success' ? '#059669' : type === 'error' ? '#dc2626' : '#2563eb',
                customClass: {
                    popup: 'swal2-toast-custom'
                },
                didOpen: (toast) => {
                    toast.addEventListener('mouseenter', Swal.stopTimer);
                    toast.addEventListener('mouseleave', Swal.resumeTimer);
                }
            });
        }

        // Backward compatibility - keep showToast function name
        function showToast(message, type = 'success', duration = 3000) {
            showSweetAlert(message, type, duration);
        }

        document.addEventListener('DOMContentLoaded', function () {
            // Mobile Navigation Functionality
            const mobileNavToggle = document.getElementById('mobileNavToggle');
            const mobileNavOverlay = document.getElementById('mobileNavOverlay');
            const mobileNavSidebar = document.getElementById('mobileNavSidebar');
            const mobileNavClose = document.getElementById('mobileNavClose');

            // Open mobile navigation
            if (mobileNavToggle) {
                mobileNavToggle.addEventListener('click', function() {
                    mobileNavOverlay.classList.add('show');
                    mobileNavSidebar.classList.add('show');
                    document.body.style.overflow = 'hidden';
                });
            }

            // Close mobile navigation
            function closeMobileNav() {
                mobileNavOverlay.classList.remove('show');
                mobileNavSidebar.classList.remove('show');
                document.body.style.overflow = '';
            }

            if (mobileNavClose) {
                mobileNavClose.addEventListener('click', closeMobileNav);
            }

            if (mobileNavOverlay) {
                mobileNavOverlay.addEventListener('click', closeMobileNav);
            }

            // Close on escape key
            document.addEventListener('keydown', function(e) {
                if (e.key === 'Escape' && mobileNavSidebar.classList.contains('show')) {
                    closeMobileNav();
                }
            });

            // Set active nav item in mobile menu
            const currentPath = window.location.pathname;
            const mobileNavItems = document.querySelectorAll('.mobile-nav-item');
            mobileNavItems.forEach(item => {
                const itemPath = new URL(item.href).pathname;
                if (itemPath === currentPath ||
                    (currentPath === '/dashboard' && itemPath === '/dashboard') ||
                    (currentPath === '/' && itemPath === '/') ||
                    (currentPath === '/shop' && itemPath === '/shop') ||
                    (currentPath === '/about' && itemPath === '/about') ||
                    (currentPath === '/contact' && itemPath === '/contact')) {
                    item.classList.add('active');
                }
            });

            // Simple navbar active link management
            const navLinks = document.querySelectorAll('.navbar-nav .nav-link');

            // Remove active class from all links
            navLinks.forEach(link => {
                link.classList.remove('active');

                // Add active class to current page link
                const linkPath = new URL(link.href).pathname;
                if (linkPath === currentPath ||
                    (currentPath === '/dashboard' && linkPath === '/dashboard') ||
                    (currentPath === '/' && linkPath === '/') ||
                    (currentPath === '/shop' && linkPath === '/shop') ||
                    (currentPath === '/about' && linkPath === '/about') ||
                    (currentPath === '/contact' && linkPath === '/contact') ||
                    (currentPath === '/' && linkPath === '/dashboard')) {
                    link.classList.add('active');
                }
            });

            // Simple click effect for nav links
            navLinks.forEach(link => {
                link.addEventListener('click', function(e) {
                    // Remove active from all links
                    navLinks.forEach(l => l.classList.remove('active'));
                    // Add active to clicked link
                    this.classList.add('active');
                });
            });

            // Account dropdown functionality - Fixed version
            function initializeDropdown(dropdownButtonId) {
                const accountDropdown = document.getElementById(dropdownButtonId);
                if (!accountDropdown) {
                    console.log(`${dropdownButtonId} not found`);
                    return;
                }

                const dropdownContainer = accountDropdown.closest('.dropdown');
                const dropdownMenu = dropdownContainer ? dropdownContainer.querySelector('.dropdown-menu') : null;

                if (accountDropdown && dropdownMenu) {
                    console.log(`${dropdownButtonId} dropdown elements found`);

                    // Manual dropdown toggle
                    accountDropdown.addEventListener('click', function (e) {
                        e.preventDefault();
                        e.stopPropagation();

                        console.log(`${dropdownButtonId} dropdown clicked`);

                        const isOpen = dropdownMenu.classList.contains('show');

                        // Close all other dropdowns first
                        document.querySelectorAll('.dropdown-menu.show').forEach(menu => {
                            menu.classList.remove('show');
                        });

                        // Toggle current dropdown
                        if (!isOpen) {
                            dropdownMenu.classList.add('show');
                            accountDropdown.setAttribute('aria-expanded', 'true');
                            console.log(`${dropdownButtonId} dropdown opened`);
                        } else {
                            dropdownMenu.classList.remove('show');
                            accountDropdown.setAttribute('aria-expanded', 'false');
                            console.log(`${dropdownButtonId} dropdown closed`);
                        }
                    });

                    // Close dropdown when clicking outside
                    document.addEventListener('click', function (e) {
                        if (!dropdownContainer.contains(e.target)) {
                            dropdownMenu.classList.remove('show');
                            accountDropdown.setAttribute('aria-expanded', 'false');
                        }
                    });

                    // Close dropdown when pressing Escape
                    document.addEventListener('keydown', function (e) {
                        if (e.key === 'Escape') {
                            dropdownMenu.classList.remove('show');
                            accountDropdown.setAttribute('aria-expanded', 'false');
                        }
                    });
                } else {
                    console.log(`${dropdownButtonId} dropdown menu not found`);
                }
            }

            // Initialize both desktop and mobile dropdowns
            initializeDropdown('accountDropdown');
            initializeDropdown('accountDropdownMobile');

            // Logout functionality with SweetAlert2
            const logoutBtns = document.querySelectorAll('.logout-btn, .mobile-logout-btn');
            logoutBtns.forEach(logoutBtn => {
                logoutBtn.addEventListener('click', function (e) {
                    e.preventDefault();

                    // Show SweetAlert2 confirmation dialog
                    Swal.fire({
                        title: 'Are you sure?',
                        text: 'You will be logged out of your account.',
                        icon: 'warning',
                        showCancelButton: true,
                        confirmButtonColor: '#dc3545',
                        cancelButtonColor: '#6c757d',
                        confirmButtonText: 'Yes, logout!',
                        cancelButtonText: 'Cancel',
                        reverseButtons: true,
                        customClass: {
                            popup: 'logout-swal-popup',
                            title: 'logout-swal-title',
                            content: 'logout-swal-content',
                            confirmButton: 'logout-swal-confirm',
                            cancelButton: 'logout-swal-cancel'
                        }
                    }).then((result) => {
                        if (result.isConfirmed) {
                            // Show loading state
                            Swal.fire({
                                title: 'Logging out...',
                                text: 'Please wait while we log you out.',
                                icon: 'info',
                                allowOutsideClick: false,
                                allowEscapeKey: false,
                                showConfirmButton: false,
                                didOpen: () => {
                                    Swal.showLoading();
                                }
                            });

                            // Redirect to logout route
                            window.location.href = '/logout';
                        }
                    });
                });
            });

            // Global AJAX error handler for blocked users
            // Override fetch to handle blocked user responses
            const originalFetch = window.fetch;
            window.fetch = function(...args) {
                return originalFetch.apply(this, args)
                    .then(response => {
                        // Check if response indicates user is blocked
                        if (response.status === 401) {
                            return response.json().then(data => {
                                if (data.blocked) {
                                    Swal.fire({
                                        icon: 'warning',
                                        title: 'Account Blocked',
                                        text: data.message || 'Your account has been blocked. Please contact support.',
                                        confirmButtonColor: '#dc3545',
                                        confirmButtonText: 'Go to Login'
                                    }).then(() => {
                                        window.location.href = data.redirect || '/login?blocked=true';
                                    });
                                    throw new Error('User blocked');
                                }
                                throw new Error(data.message || 'Authentication failed');
                            });
                        }
                        return response;
                    });
            };

            // Handle XMLHttpRequest for older AJAX calls
            const originalOpen = XMLHttpRequest.prototype.open;
            XMLHttpRequest.prototype.open = function(...args) {
                this.addEventListener('load', function() {
                    if (this.status === 401) {
                        try {
                            const data = JSON.parse(this.responseText);
                            if (data.blocked) {
                                Swal.fire({
                                    icon: 'warning',
                                    title: 'Account Blocked',
                                    text: data.message || 'Your account has been blocked. Please contact support.',
                                    confirmButtonColor: '#dc3545',
                                    confirmButtonText: 'Go to Login'
                                }).then(() => {
                                    window.location.href = data.redirect || '/login?blocked=true';
                                });
                            }
                        } catch (e) {
                            // Not JSON response, ignore
                        }
                    }
                });
                return originalOpen.apply(this, args);
            };

            // Navbar Search Functionality
            initializeNavbarSearch();

            // Load wishlist and cart counts for logged-in users only
            <% if (typeof user !== 'undefined' && user) { %>
                loadWishlistCount();
                loadCartCount();
            <% } %>
        });

        // Navbar Search Implementation
        function initializeNavbarSearch() {
            const searchForm = document.getElementById('navbarSearchForm');
            const searchInput = document.getElementById('navbarSearchInput');

            if (!searchForm || !searchInput) return;

            // Form submission handler
            searchForm.addEventListener('submit', function(e) {
                e.preventDefault();
                performSearch();
            });

            // Perform search using existing shop route
            function performSearch() {
                const query = searchInput.value.trim();

                if (!query) {
                    // If no search query, just go to shop page
                    window.location.href = '/shop';
                    return;
                }

                // Send the query to existing shop route
                window.location.href = `/shop?search=${encodeURIComponent(query)}`;
            }
        }

        // Wishlist functionality
        async function loadWishlistCount() {
            try {
                const response = await fetch('/wishlist/count');
                if (response.ok) {
                    const data = await response.json();
                    updateWishlistCounter(data.count);
                } else if (response.status === 401) {
                    // User not authenticated, hide counter
                    updateWishlistCounter(0);
                }
            } catch (error) {
                // Silently handle error for guests
                updateWishlistCounter(0);
            }
        }

        function updateWishlistCounter(count) {
            // Update desktop counter
            const wishlistCountElement = document.getElementById('wishlistCount');
            if (wishlistCountElement) {
                if (count > 0) {
                    wishlistCountElement.textContent = count;
                    wishlistCountElement.style.display = 'flex';
                } else {
                    wishlistCountElement.style.display = 'none';
                }
            }

            // Update mobile counter
            const wishlistCountMobile = document.getElementById('wishlistCountMobile');
            if (wishlistCountMobile) {
                if (count > 0) {
                    wishlistCountMobile.textContent = count;
                    wishlistCountMobile.style.display = 'flex';
                } else {
                    wishlistCountMobile.style.display = 'none';
                }
            }
        }

        // Cart functionality
        async function loadCartCount() {
            try {
                const response = await fetch('/cart/count');
                if (response.ok) {
                    const data = await response.json();
                    updateCartCounter(data.count);
                } else if (response.status === 401) {
                    // User not authenticated, hide counter
                    updateCartCounter(0);
                }
            } catch (error) {
                // Silently handle error for guests
                updateCartCounter(0);
            }
        }

        function updateCartCounter(count) {
            // Update desktop counter
            const cartCountElement = document.getElementById('cartCount');
            if (cartCountElement) {
                if (count > 0) {
                    cartCountElement.textContent = count;
                    cartCountElement.style.display = 'flex';
                } else {
                    cartCountElement.style.display = 'none';
                }
            }

            // Update mobile counter
            const cartCountMobile = document.getElementById('cartCountMobile');
            if (cartCountMobile) {
                if (count > 0) {
                    cartCountMobile.textContent = count;
                    cartCountMobile.style.display = 'flex';
                } else {
                    cartCountMobile.style.display = 'none';
                }
            }
        }

        // Global function to toggle wishlist (called from product pages)
        async function toggleWishlist(productId, buttonElement) {
            try {
                const isInWishlist = buttonElement.classList.contains('in-wishlist');
                const endpoint = isInWishlist ? '/wishlist/remove' : '/wishlist/add';
                
                const response = await fetch(endpoint, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({ productId })
                });

                const result = await response.json();

                if (result.success) {
                    // Update wishlist counter
                    updateWishlistCounter(result.wishlistCount);

                    // Toggle button appearance
                    const heartIcon = buttonElement.querySelector('i');
                    if (heartIcon) {
                        if (isInWishlist) {
                            // Remove from wishlist
                            heartIcon.classList.remove('bi-heart-fill');
                            heartIcon.classList.add('bi-heart');
                            buttonElement.classList.remove('in-wishlist');
                            buttonElement.innerHTML = buttonElement.innerHTML.replace('Remove from Wishlist', 'Add to Wishlist');
                            showSweetAlert('Removed from wishlist!', 'success');
                        } else {
                            // Add to wishlist
                            heartIcon.classList.remove('bi-heart');
                            heartIcon.classList.add('bi-heart-fill');
                            buttonElement.classList.add('in-wishlist');
                            buttonElement.innerHTML = buttonElement.innerHTML.replace('Add to Wishlist', 'Remove from Wishlist');
                            showSweetAlert('Added to wishlist!', 'success');
                        }
                    }
                } else {
                    showSweetAlert(result.message || 'Failed to update wishlist.', 'error');
                }
            } catch (error) {
                console.error('Wishlist error:', error);
                showSweetAlert('Please login to manage wishlist.', 'error');
            }
        }

        // Backward compatibility - keep addToWishlist function name
        async function addToWishlist(productId, buttonElement) {
            return toggleWishlist(productId, buttonElement);
        }

        // Function to update wishlist button state across the page
        function updateWishlistButtonState(productId, isInWishlist) {
            // Find all wishlist buttons for this product
            const wishlistButtons = document.querySelectorAll(`[onclick*="${productId}"]`);

            wishlistButtons.forEach(button => {
                const heartIcon = button.querySelector('i');
                if (heartIcon && heartIcon.classList.contains('bi-heart')) {
                    if (isInWishlist) {
                        heartIcon.style.color = '#e74c3c';
                        heartIcon.classList.remove('bi-heart');
                        heartIcon.classList.add('bi-heart-fill');
                        button.disabled = true;
                        button.title = 'Already in wishlist';
                    } else {
                        heartIcon.style.color = '';
                        heartIcon.classList.remove('bi-heart-fill');
                        heartIcon.classList.add('bi-heart');
                        button.disabled = false;
                        button.title = 'Add to wishlist';
                    }
                }
            });
        }

        // Global function to remove from wishlist
        async function removeFromWishlist(productId) {
            try {
                const response = await fetch('/wishlist/remove', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({ productId })
                });

                const result = await response.json();

                if (result.success) {
                    // Update wishlist counter
                    updateWishlistCounter(result.wishlistCount);

                    // Update button states
                    updateWishlistButtonState(productId, false);

                    // Show success message
                    showSweetAlert('Removed from wishlist!', 'success');

                    // Reload page if on wishlist page
                    if (window.location.pathname === '/wishlist') {
                        setTimeout(() => {
                            window.location.reload();
                        }, 1000);
                    }
                } else {
                    showSweetAlert(result.message, 'error');
                }
            } catch (error) {
                console.error('Error removing from wishlist:', error);
                showSweetAlert('Failed to remove item from wishlist.', 'error');
            }
        }
    </script>
    </body>
    </html>