<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Sales Report</title>
    <link href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap/5.3.0/css/bootstrap.min.css" rel="stylesheet">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" rel="stylesheet">
    <link rel="stylesheet" href="/styles/admin/sales-report-style.css">
</head>
<body>
    <div class="main-wrapper">
        
        <%- include("../partials/admin/sidebar") %>
        
        <!-- Main Content -->
        <div class="main-content">


            <!-- Content Area -->
            <div class="content-area">
                <!-- Breadcrumb -->
                <nav aria-label="breadcrumb">
                    <ol class="breadcrumb breadcrumb-custom">
                        <li class="breadcrumb-item"><a href="/admin-dashboard" style="color: #6c757d; text-decoration: none;">Dashboard</a></li>
                        <li class="breadcrumb-item active" aria-current="page" style="color: #6c757d;">Sales Report</li>
                    </ol>
                </nav>

                <!-- Page Header Card -->
                <div class="page-header-card">
                    <!-- Page Title -->
                    <h1 class="page-title">Sales Report</h1>
                </div>

                <!-- Filters Section -->
                <form id="filterForm" method="GET" action="/sales-report">
                    <div class="filters-section">
                        <div class="filter-row">
                            <div class="filter-group">
                                <label class="filter-label">Time Period</label>
                                <select class="form-select" name="timePeriod" id="timePeriod">
                                    <option value="monthly" <%= filters.timePeriod === 'monthly' ? 'selected' : '' %>>Monthly (Last 30 Days)</option>
                                    <option value="weekly" <%= filters.timePeriod === 'weekly' ? 'selected' : '' %>>Weekly (Last 7 Days)</option>
                                    <option value="yearly" <%= filters.timePeriod === 'yearly' ? 'selected' : '' %>>Yearly (Last 365 Days)</option>
                                    <option value="custom" <%= filters.timePeriod === 'custom' ? 'selected' : '' %>>Custom Date Range</option>
                                </select>
                            </div>
                            
                            <!-- Custom Date Range Fields -->
                            <div class="filter-group custom-date-group" id="customDateGroup" style="display: <%= filters.timePeriod === 'custom' ? 'block' : 'none' %>;">
                                <label class="filter-label">From Date</label>
                                <input type="date" class="form-control" name="startDate" id="startDate" 
                                       value="<%= filters.startDate || '' %>" 
                                       max="<%= new Date().toISOString().split('T')[0] %>">
                            </div>
                            
                            <div class="filter-group custom-date-group" id="customDateGroup2" style="display: <%= filters.timePeriod === 'custom' ? 'block' : 'none' %>;">
                                <label class="filter-label">To Date</label>
                                <input type="date" class="form-control" name="endDate" id="endDate" 
                                       value="<%= filters.endDate || '' %>" 
                                       max="<%= new Date().toISOString().split('T')[0] %>">
                            </div>
                            <div class="filter-group">
                                <label class="filter-label">Payment Method</label>
                                <select class="form-select" name="paymentMethod" id="paymentMethod">
                                    <option value="all" <%= filters.paymentMethod === 'all' ? 'selected' : '' %>>All Methods</option>
                                    <option value="online" <%= filters.paymentMethod === 'online' ? 'selected' : '' %>>Online</option>
                                    <option value="wallet" <%= filters.paymentMethod === 'wallet' ? 'selected' : '' %>>Wallet</option>
                                    <option value="cod" <%= filters.paymentMethod === 'cod' ? 'selected' : '' %>>Cash on Delivery</option>
                                </select>
                            </div>
                            <div class="filter-group">
                                <label class="filter-label">Order Status</label>
                                <select class="form-select" name="orderStatus" id="orderStatus">
                                    <option value="all" <%= filters.orderStatus === 'all' ? 'selected' : '' %>>All Statuses</option>
                                    <option value="delivered" <%= filters.orderStatus === 'delivered' ? 'selected' : '' %>>Delivered</option>
                                    <option value="cancelled" <%= filters.orderStatus === 'cancelled' ? 'selected' : '' %>>Cancelled</option>
                                    <option value="returned" <%= filters.orderStatus === 'returned' ? 'selected' : '' %>>Returned</option>
                                </select>
                            </div>
                            <div class="filter-group" style="flex: 0 0 auto;">
                                <button type="submit" class="btn-apply">
                                    <i class="fas fa-filter me-2"></i>Apply Filters
                                </button>
                            </div>
                            <div class="export-buttons" style="flex: 0 0 auto;">
                                <button type="button" class="btn-export btn-pdf" id="exportPDF">
                                    <i class="fas fa-file-pdf me-1"></i>Export PDF
                                </button>
                                <button type="button" class="btn-export btn-excel" id="exportExcel">
                                    <i class="fas fa-file-excel me-1"></i>Export Excel
                                </button>
                            </div>
                        </div>
                    </div>
                </form>

                <!-- Stats Cards -->
                <div class="stats-grid">
                    <div class="stat-card">
                        <div class="stat-icon revenue">
                            <i class="fas fa-rupee-sign"></i>
                        </div>
                        <div class="stat-value">₹<%= salesStats.totalRevenue ? salesStats.totalRevenue.toLocaleString('en-IN', {minimumFractionDigits: 2, maximumFractionDigits: 2}) : '0.00' %></div>
                        <div class="stat-label">Total Revenue</div>
                    </div>
                    <div class="stat-card">
                        <div class="stat-icon orders">
                            <i class="fas fa-shopping-bag"></i>
                        </div>
                        <div class="stat-value"><%= salesStats.totalOrders || 0 %></div>
                        <div class="stat-label">Total Orders</div>
                    </div>
                    <div class="stat-card">
                        <div class="stat-icon average">
                            <i class="fas fa-chart-line"></i>
                        </div>
                        <div class="stat-value">₹<%= salesStats.averageOrder ? salesStats.averageOrder.toLocaleString('en-IN', {minimumFractionDigits: 2, maximumFractionDigits: 2}) : '0.00' %></div>
                        <div class="stat-label">Average Revenue</div>
                    </div>
                    <div class="stat-card">
                        <div class="stat-icon discount">
                            <i class="fas fa-tags"></i>
                        </div>
                        <div class="stat-value">₹<%= salesStats.totalDiscount ? salesStats.totalDiscount.toLocaleString('en-IN', {minimumFractionDigits: 2, maximumFractionDigits: 2}) : '0.00' %></div>
                        <div class="stat-label">Total Discount</div>
                    </div>
                </div>

                <!-- Sales Analysis -->
                <div class="analysis-section">
                    <div class="section-header">
                        <h2 class="section-title">Sales Analysis</h2>
                    </div>
                    
                    <div class="table-container">
                        <table class="custom-table">
                            <thead>
                                <tr>
                                    <th>Date/Period</th>
                                    <th>Orders</th>
                                    <th>Revenue</th>
                                    <th>Total Discount</th>
                                    <th>Net Revenue</th>
                                </tr>
                            </thead>
                            <tbody>
                                <% if (dailyAnalysis && dailyAnalysis.length > 0) { %>
                                    <% dailyAnalysis.forEach(function(item) { %>
                                        <tr>
                                            <td><%= item.date %></td>
                                            <td><span class="badge bg-primary rounded-pill"><%= item.orders %></span></td>
                                            <td>₹<%= item.revenue.toLocaleString('en-IN', {minimumFractionDigits: 2, maximumFractionDigits: 2}) %></td>
                                            <td>₹<%= item.discount.toLocaleString('en-IN', {minimumFractionDigits: 2, maximumFractionDigits: 2}) %></td>
                                            <td>₹<%= item.netRevenue.toLocaleString('en-IN', {minimumFractionDigits: 2, maximumFractionDigits: 2}) %></td>
                                        </tr>
                                    <% }); %>
                                    <tr class="total-row">
                                        <td><strong>TOTAL</strong></td>
                                        <td><span class="badge bg-dark rounded-pill"><%= salesStats.totalOrders || 0 %></span></td>
                                        <td><strong>₹<%= salesStats.totalRevenue ? salesStats.totalRevenue.toLocaleString('en-IN', {minimumFractionDigits: 2, maximumFractionDigits: 2}) : '0.00' %></strong></td>
                                        <td><strong>₹<%= salesStats.totalDiscount ? salesStats.totalDiscount.toLocaleString('en-IN', {minimumFractionDigits: 2, maximumFractionDigits: 2}) : '0.00' %></strong></td>
                                        <td><strong>₹<%= (salesStats.totalRevenue - salesStats.totalDiscount) ? (salesStats.totalRevenue - salesStats.totalDiscount).toLocaleString('en-IN', {minimumFractionDigits: 2, maximumFractionDigits: 2}) : '0.00' %></strong></td>
                                    </tr>
                                <% } else { %>
                                    <tr>
                                        <td colspan="5" class="text-center">No data available for the selected period</td>
                                    </tr>
                                <% } %>
                            </tbody>
                        </table>
                    </div>
                </div>

                <!-- Order Details -->
                <div class="order-details-section">
                    <div class="section-header">
                        <h2 class="section-title">Order Details</h2>
                        <span class="records-badge"><%= pagination.totalOrders %> orders (Page <%= pagination.currentPage %> of <%= pagination.totalPages %>)</span>
                    </div>
                    
                    <div class="table-container">
                        <table class="custom-table">
                            <thead>
                                <tr>
                                    <th>Order ID</th>
                                    <th>Date</th>
                                    <th>Customer</th>
                                    <th>Payment Method</th>
                                    <th>Status</th>
                                    <th>Amount</th> 
                                    <th>Discount</th>
                                    <th>Final Amount</th>
                                </tr>
                            </thead>
                            <tbody>
                                <% if (orders && orders.length > 0) { %>
                                    <% orders.forEach(function(order) { %>
                                        <tr>
                                            <td><a href="/admin/get-orders/<%= order.orderId %>/details" style="color: #007bff; text-decoration: none;"><%= order.orderId %></a></td>
                                            <td><%= order.date %></td>
                                            <td><%= order.customer %></td>
                                            <td>
                                                <span class="status-badge status-<%= (order.paymentMethod || 'unknown').toLowerCase() %>">
                                                    <%= (order.paymentMethod || 'Unknown').charAt(0).toUpperCase() + (order.paymentMethod || 'Unknown').slice(1) %>
                                                </span>
                                            </td>
                                            <td>
                                                <span class="status-badge status-<%= (order.status || 'pending').toLowerCase() %>">
                                                    <%= (order.status || 'Pending').charAt(0).toUpperCase() + (order.status || 'Pending').slice(1) %>
                                                </span>
                                            </td>
                                            <td>₹<%= order.amount.toLocaleString('en-IN', {minimumFractionDigits: 2, maximumFractionDigits: 2}) %></td>
                                            <td>₹<%= order.discount.toLocaleString('en-IN', {minimumFractionDigits: 2, maximumFractionDigits: 2}) %></td>
                                            <td>₹<%= order.finalAmount.toLocaleString('en-IN', {minimumFractionDigits: 2, maximumFractionDigits: 2}) %></td>
                                        </tr>
                                    <% }); %>
                                <% } else { %>
                                    <tr>
                                        <td colspan="8" class="text-center">No orders found for the selected criteria</td>
                                    </tr>
                                <% } %>
                            </tbody>
                        </table>
                    </div>

                    <!-- Pagination -->
                    <% if (pagination.totalPages > 1) { %>
                        <div class="pagination-container">
                            <div class="pagination-custom">
                                <% 
                                    // Build query string for pagination
                                    let queryParams = `timePeriod=${filters.timePeriod}&paymentMethod=${filters.paymentMethod}&orderStatus=${filters.orderStatus}`;
                                    if (filters.timePeriod === 'custom' && filters.startDate && filters.endDate) {
                                        queryParams += `&startDate=${filters.startDate}&endDate=${filters.endDate}`;
                                    }
                                %>
                                
                                <% if (pagination.hasPrev) { %>
                                    <a href="?page=<%= pagination.currentPage - 1 %>&<%= queryParams %>" class="page-btn">
                                        <i class="fas fa-chevron-left me-1"></i>Prev
                                    </a>
                                <% } %>
                                
                                <% for (let i = Math.max(1, pagination.currentPage - 2); i <= Math.min(pagination.totalPages, pagination.currentPage + 2); i++) { %>
                                    <a href="?page=<%= i %>&<%= queryParams %>" 
                                       class="page-btn <%= i === pagination.currentPage ? 'active' : '' %>">
                                        <%= i %>
                                    </a>
                                <% } %>
                                
                                <% if (pagination.hasNext) { %>
                                    <a href="?page=<%= pagination.currentPage + 1 %>&<%= queryParams %>" class="page-btn">
                                        Next <i class="fas fa-chevron-right ms-1"></i>
                                    </a>
                                <% } %>
                            </div>
                        </div>
                    <% } %>
                </div>
            </div>
        </div>
    </div>

    <script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap/5.3.0/js/bootstrap.bundle.min.js"></script>
    
    <script>
        // Export functionality
        document.getElementById('exportPDF').addEventListener('click', function() {
            const currentParams = new URLSearchParams(window.location.search);
            const exportUrl = `/sales-report/export-pdf?${currentParams.toString()}`;
            
            // Show loading state
            this.innerHTML = '<i class="fas fa-spinner fa-spin me-1"></i>Generating PDF...';
            this.disabled = true;
            
            // Open in new window for download
            window.open(exportUrl, '_blank');
            
            // Reset button state
            setTimeout(() => {
                this.innerHTML = '<i class="fas fa-file-pdf me-1"></i>Export PDF';
                this.disabled = false;
            }, 2000);
        });

        document.getElementById('exportExcel').addEventListener('click', function() {
            const currentParams = new URLSearchParams(window.location.search);
            const exportUrl = `/sales-report/export-excel?${currentParams.toString()}`;
            
            // Show loading state
            this.innerHTML = '<i class="fas fa-spinner fa-spin me-1"></i>Generating Excel...';
            this.disabled = true;
            
            // Open in new window for download
            window.open(exportUrl, '_blank');
            
            // Reset button state
            setTimeout(() => {
                this.innerHTML = '<i class="fas fa-file-excel me-1"></i>Export Excel';
                this.disabled = false;
            }, 2000);
        });

        // Handle filter form submission with loading state and validation
        document.getElementById('filterForm').addEventListener('submit', function(e) {
            const timePeriod = document.getElementById('timePeriod').value;
            const startDate = document.getElementById('startDate').value;
            const endDate = document.getElementById('endDate').value;
            const applyBtn = document.querySelector('.btn-apply');
            
            // Validate custom date range
            if (timePeriod === 'custom') {
                if (!startDate || !endDate) {
                    e.preventDefault();
                    alert('Please select both start and end dates for custom date range.');
                    return false;
                }
                
                if (new Date(startDate) > new Date(endDate)) {
                    e.preventDefault();
                    alert('Start date cannot be later than end date.');
                    return false;
                }
                
                // Check if date range is not too large (optional - max 1 year)
                const daysDiff = (new Date(endDate) - new Date(startDate)) / (1000 * 60 * 60 * 24);
                if (daysDiff > 365) {
                    const confirmLargeRange = window.confirm('You have selected a date range longer than 1 year. This may take longer to process. Continue?');
                    if (!confirmLargeRange) {
                        e.preventDefault();
                        return false;
                    }
                }
            }
            
            // Show loading state
            applyBtn.innerHTML = '<i class="fas fa-spinner fa-spin me-2"></i>Applying Filters...';
            applyBtn.disabled = true;
            
            // Allow form to submit normally
            // The form will redirect to the same page with new parameters
        });

        // Reset button state when page loads (in case of back button or refresh)
        document.addEventListener('DOMContentLoaded', function() {
            const applyBtn = document.querySelector('.btn-apply');
            if (applyBtn) {
                applyBtn.innerHTML = '<i class="fas fa-filter me-2"></i>Apply Filters';
                applyBtn.disabled = false;
            }
            
            // Log filter status
            const urlParams = new URLSearchParams(window.location.search);
            if (urlParams.has('timePeriod') || urlParams.has('paymentMethod') || urlParams.has('orderStatus')) {
                console.log('Filters applied successfully');
            }
        });

        // Handle time period change to show/hide custom date fields
        document.getElementById('timePeriod').addEventListener('change', function() {
            const customDateGroups = document.querySelectorAll('.custom-date-group');
            const isCustom = this.value === 'custom';
            
            customDateGroups.forEach(function(group) {
                if (isCustom) {
                    group.style.display = 'block';
                    // Make date fields required when custom is selected
                    const dateInputs = group.querySelectorAll('input[type="date"]');
                    dateInputs.forEach(input => input.required = true);
                } else {
                    group.style.display = 'none';
                    // Remove required attribute when not custom
                    const dateInputs = group.querySelectorAll('input[type="date"]');
                    dateInputs.forEach(input => input.required = false);
                }
            });
        });

        // Validate custom date range
        document.getElementById('startDate').addEventListener('change', function() {
            const endDate = document.getElementById('endDate');
            if (this.value) {
                endDate.min = this.value;
            }
        });

        document.getElementById('endDate').addEventListener('change', function() {
            const startDate = document.getElementById('startDate');
            if (this.value) {
                startDate.max = this.value;
            }
        });

        // Handle filter changes to enable real-time filtering (optional)
        document.querySelectorAll('#paymentMethod, #orderStatus').forEach(function(select) {
            select.addEventListener('change', function() {
                // Optional: Auto-submit form when filters change
                // Uncomment the line below if you want automatic filtering
                // document.getElementById('filterForm').submit();
            });
        });
    </script>
</body>
</html>