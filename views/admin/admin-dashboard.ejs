<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Admin Dashboard - ArvanClaire</title>
    <!-- Bootstrap CSS -->
    <link href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap/5.3.0/css/bootstrap.min.css" rel="stylesheet">
    <!-- Font Awesome -->
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" rel="stylesheet">
    <!-- Chart.js -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/3.9.1/chart.min.js"></script>
    <!-- SweetAlert2 -->
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <!-- Custom CSS -->
    <link rel="stylesheet" href="/styles/admin/admin-dashboard.css">
</head>
<body>
    <!-- Include Admin Sidebar -->
    <%- include("../partials/admin/sidebar") %>

    <!-- Main Content -->
    <div class="main-content">
        <!-- Header Section -->
        <div class="dashboard-header">
            <div class="header-content">
                <div class="header-left">
                    <h1 class="dashboard-title">Dashboard Overview</h1>
                    <p class="dashboard-subtitle">Welcome back! Here's what's happening with your store today.</p>
                </div>
                <div class="header-right">
                    <div class="date-display">
                        <i class="fas fa-calendar-alt"></i>
                        <span id="currentDate"></span>
                    </div>
                </div>
            </div>
        </div>

        <!-- Quick Stats Grid -->
        <div class="stats-grid">
            <div class="stat-card primary">
                <div class="stat-icon">
                    <i class="fas fa-users"></i>
                </div>
                <div class="stat-content">
                    <div class="stat-number" id="totalCustomers">0</div>
                    <div class="stat-label">Total Customers</div>
                    <div class="stat-change">
                        <i class="fas fa-info-circle"></i>
                        <span>Live Data</span>
                    </div>
                </div>
            </div>

            <div class="stat-card success">
                <div class="stat-icon">
                    <i class="fas fa-shopping-cart"></i>
                </div>
                <div class="stat-content">
                    <div class="stat-number" id="totalOrders">0</div>
                    <div class="stat-label">Total Orders</div>
                    <div class="stat-change">
                        <i class="fas fa-info-circle"></i>
                        <span>Live Data</span>
                    </div>
                </div>
            </div>

            <div class="stat-card warning">
                <div class="stat-icon">
                    <i class="fas fa-rupee-sign"></i>
                </div>
                <div class="stat-content">
                    <div class="stat-number" id="totalRevenue">â‚¹0</div>
                    <div class="stat-label">Total Revenue</div>
                    <div class="stat-change">
                        <i class="fas fa-info-circle"></i>
                        <span>Live Data</span>
                    </div>
                </div>
            </div>

            <div class="stat-card danger">
                <div class="stat-icon">
                    <i class="fas fa-clock"></i>
                </div>
                <div class="stat-content">
                    <div class="stat-number" id="pendingOrders">0</div>
                    <div class="stat-label">Pending Orders</div>
                    <div class="stat-change">
                        <i class="fas fa-info-circle"></i>
                        <span>Live Data</span>
                    </div>
                </div>
            </div>
        </div>

        <!-- Charts and Analytics Section -->
        <div class="analytics-section">
            <div class="row g-4">
                <!-- Sales Chart -->
                <div class="col-lg-8">
                    <div class="chart-card">
                        <div class="chart-header">
                            <div class="chart-title-section">
                                <h3 class="chart-title">Sales Analytics</h3>
                                <p class="chart-subtitle">Monthly sales performance overview</p>
                            </div>
                            <div class="chart-controls">
                                <select class="form-select chart-dropdown" id="salesPeriod">
                                    <option value="monthly">Monthly</option>
                                    <option value="weekly">Weekly</option>
                                    <option value="yearly">Yearly</option>
                                </select>
                            </div>
                        </div>
                        <div class="chart-container">
                            <canvas id="salesChart"></canvas>
                        </div>
                    </div>
                </div>

                <!-- Top Products -->
                <div class="col-lg-4">
                    <div class="top-products-card">
                        <div class="card-header">
                            <h3 class="card-title">Top Products</h3>
                            <span class="card-subtitle">Best selling items</span>
                        </div>
                        <div class="products-list" id="topProductsList">
                            <div class="no-data-message" style="text-align: center; padding: 2rem; color: #6c757d;">
                                <i class="fas fa-chart-bar" style="font-size: 2rem; margin-bottom: 1rem; opacity: 0.5;"></i>
                                <p>No product data available yet</p>
                                <small>Top selling products will appear here once you have sales data</small>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Recent Activity Section -->
        <div class="activity-section">
            <div class="row g-4">
                <!-- Recent Orders -->
                <div class="col-lg-6">
                    <div class="activity-card">
                        <div class="activity-header">
                            <h3 class="activity-title">Recent Orders</h3>
                            <a href="/get-orders" class="view-all-link">View All</a>
                        </div>
                        <div class="activity-list" id="recentOrdersList">
                            <div class="no-data-message" style="text-align: center; padding: 2rem; color: #6c757d;">
                                <i class="fas fa-shopping-bag" style="font-size: 2rem; margin-bottom: 1rem; opacity: 0.5;"></i>
                                <p>No recent orders</p>
                                <small>Recent order activity will appear here</small>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Recent Customers -->
                <div class="col-lg-6">
                    <div class="activity-card">
                        <div class="activity-header">
                            <h3 class="activity-title">New Customers</h3>
                            <a href="/get-user" class="view-all-link">View All</a>
                        </div>
                        <div class="activity-list" id="newCustomersList">
                            <div class="no-data-message" style="text-align: center; padding: 2rem; color: #6c757d;">
                                <i class="fas fa-user-plus" style="font-size: 2rem; margin-bottom: 1rem; opacity: 0.5;"></i>
                                <p>No new customers</p>
                                <small>New customer registrations will appear here</small>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Quick Actions -->
        <div class="quick-actions-section">
            <div class="quick-actions-header">
                <h3 class="section-title">Quick Actions</h3>
                <p class="section-subtitle">Frequently used admin functions</p>
            </div>
            <div class="quick-actions-grid">
                <a href="/get-product" class="quick-action-card">
                    <div class="action-icon">   
                        <i class="fas fa-plus-circle"></i>
                    </div>
                    <div class="action-content">
                        <h4 class="action-title">Product Management</h4>
                        <p class="action-description">Manage your Products</p>
                    </div>
                </a>
                <a href="/coupons" class="quick-action-card">
                    <div class="action-icon">
                        <i class="fas fa-ticket-alt"></i>
                    </div>
                    <div class="action-content">
                        <h4 class="action-title">Manage Coupons</h4>
                        <p class="action-description">Create and manage discount coupons</p>
                    </div>
                </a>
                <a href="/sales-report" class="quick-action-card">
                    <div class="action-icon">
                        <i class="fas fa-chart-line"></i>
                    </div>
                    <div class="action-content">
                        <h4 class="action-title">Sales Report</h4>
                        <p class="action-description">View detailed sales analytics</p>
                    </div>
                </a>
                <a href="/get-category" class="quick-action-card">
                    <div class="action-icon">
                        <i class="fas fa-tags"></i>
                    </div>
                    <div class="action-content">
                        <h4 class="action-title">Categories</h4>
                        <p class="action-description">Manage product categories</p>
                    </div>
                </a>
            </div>
        </div>
    </div>

    <script>
        document.addEventListener('DOMContentLoaded', function () {
            // Set current date
            const currentDate = new Date();
            const options = { 
                weekday: 'long', 
                year: 'numeric', 
                month: 'long', 
                day: 'numeric' 
            };
            document.getElementById('currentDate').textContent = currentDate.toLocaleDateString('en-US', options);

            // Initialize Sales Chart
            const ctx = document.getElementById('salesChart').getContext('2d');
            
            const salesData = {
                labels: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],
                datasets: [{
                    label: 'Sales',
                    data: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                    borderColor: '#cccccc',
                    backgroundColor: 'rgba(204, 204, 204, 0.05)',
                    borderWidth: 2,
                    fill: true,
                    tension: 0.4,
                    pointBackgroundColor: '#cccccc',
                    pointBorderColor: '#ffffff',
                    pointBorderWidth: 2,
                    pointRadius: 4,
                    pointHoverRadius: 6
                }]
            };

            new Chart(ctx, {
                type: 'line',
                data: salesData,
                options: {
                    responsive: true,
                    maintainAspectRatio: false,
                    plugins: {
                        legend: {
                            display: false
                        },
                        tooltip: {
                            backgroundColor: '#000000',
                            titleColor: 'white',
                            bodyColor: 'white',
                            borderColor: '#000000',
                            borderWidth: 1,
                            displayColors: false,
                            callbacks: {
                                label: function(context) {
                                    return 'â‚¹' + context.parsed.y.toLocaleString();
                                }
                            }
                        }
                    },
                    scales: {
                        x: {
                            grid: {
                                display: false
                            },
                            border: {
                                display: false
                            },
                            ticks: {
                                color: '#666666',
                                font: {
                                    size: 12,
                                    weight: '500'
                                }
                            }
                        },
                        y: {
                            beginAtZero: true,
                            grid: {
                                color: 'rgba(0, 0, 0, 0.08)',
                                borderDash: [5, 5]
                            },
                            border: {
                                display: false
                            },
                            ticks: {
                                callback: function(value) {
                                    return 'â‚¹' + (value / 1000) + 'k';
                                },
                                color: '#666666',
                                font: {
                                    size: 12,
                                    weight: '500'
                                }
                            }
                        }
                    },
                    interaction: {
                        intersect: false,
                        mode: 'index'
                    }
                }
            });

            // Load real dashboard data
            loadDashboardData();

            // Handle sales period change
            document.getElementById('salesPeriod').addEventListener('change', function(e) {
                loadSalesChart(e.target.value);
            });
        });

        // Function to load real dashboard data
        async function loadDashboardData() {
            try {
                console.log('Loading dashboard data...');
                
                // Test API first
                try {
                    const testResponse = await fetch('/api/dashboard/test');
                    const testData = await testResponse.json();
                    console.log('Test API response:', testData);
                } catch (testError) {
                    console.error('Test API failed:', testError);
                }
                
                // Load dashboard statistics
                const statsResponse = await fetch('/api/dashboard/stats');
                console.log('Stats response status:', statsResponse.status);
                
                if (statsResponse.ok) {
                    const statsData = await statsResponse.json();
                    console.log('Stats data:', statsData);
                    
                    if (statsData.success) {
                        document.getElementById('totalCustomers').textContent = statsData.data.totalCustomers.toLocaleString();
                        document.getElementById('totalOrders').textContent = statsData.data.totalOrders.toLocaleString();
                        document.getElementById('totalRevenue').textContent = 'â‚¹' + statsData.data.totalRevenue.toLocaleString();
                        document.getElementById('pendingOrders').textContent = statsData.data.pendingOrders.toLocaleString();
                        console.log('Dashboard stats updated successfully');
                    } else {
                        console.error('Stats API returned error:', statsData.message);
                    }
                } else {
                    console.error('Failed to fetch stats:', statsResponse.status, statsResponse.statusText);
                }

                // Load sales data for chart
                await loadSalesChart('monthly');

                // Load top products
                await loadTopProducts();

                // Load recent orders
                await loadRecentOrders();

                // Load new customers
                await loadNewCustomers();
                
            } catch (error) {
                console.error('Error loading dashboard data:', error);
                showErrorMessage('Failed to load dashboard data: ' + error.message);
            }
        }

        // Function to load sales chart data
        async function loadSalesChart(period = 'monthly') {
            try {
                const response = await fetch(`/api/dashboard/sales?period=${period}`);
                const data = await response.json();
                
                if (data.success) {
                    updateSalesChart(data.data.labels, data.data.salesData);
                }
            } catch (error) {
                console.error('Error loading sales chart:', error);
            }
        }

        // Function to update sales chart
        function updateSalesChart(labels, salesData) {
            const ctx = document.getElementById('salesChart').getContext('2d');
            
            // Destroy existing chart if it exists
            if (window.salesChart) {
                window.salesChart.destroy();
            }

            const chartData = {
                labels: labels,
                datasets: [{
                    label: 'Sales',
                    data: salesData,
                    borderColor: '#000000',
                    backgroundColor: 'rgba(0, 0, 0, 0.05)',
                    borderWidth: 2,
                    fill: true,
                    tension: 0.4,
                    pointBackgroundColor: '#000000',
                    pointBorderColor: '#ffffff',
                    pointBorderWidth: 2,
                    pointRadius: 4,
                    pointHoverRadius: 6
                }]
            };

            window.salesChart = new Chart(ctx, {
                type: 'line',
                data: chartData,
                options: {
                    responsive: true,
                    maintainAspectRatio: false,
                    plugins: {
                        legend: {
                            display: false
                        },
                        tooltip: {
                            backgroundColor: '#000000',
                            titleColor: 'white',
                            bodyColor: 'white',
                            borderColor: '#000000',
                            borderWidth: 1,
                            displayColors: false,
                            callbacks: {
                                label: function(context) {
                                    return 'â‚¹' + context.parsed.y.toLocaleString();
                                }
                            }
                        }
                    },
                    scales: {
                        x: {
                            grid: {
                                display: false
                            },
                            border: {
                                display: false
                            },
                            ticks: {
                                color: '#666666',
                                font: {
                                    size: 12,
                                    weight: '500'
                                }
                            }
                        },
                        y: {
                            beginAtZero: true,
                            grid: {
                                color: 'rgba(0, 0, 0, 0.08)',
                                borderDash: [5, 5]
                            },
                            border: {
                                display: false
                            },
                            ticks: {
                                callback: function(value) {
                                    return 'â‚¹' + (value / 1000) + 'k';
                                },
                                color: '#666666',
                                font: {
                                    size: 12,
                                    weight: '500'
                                }
                            }
                        }
                    },
                    interaction: {
                        intersect: false,
                        mode: 'index'
                    }
                }
            });
        }

        // Function to load top products
        async function loadTopProducts() {
            try {
                const response = await fetch('/api/dashboard/top-products');
                const data = await response.json();
                
                if (data.success && data.data.length > 0) {
                    const topProductsList = document.getElementById('topProductsList');
                    topProductsList.innerHTML = '';
                    
                    data.data.forEach((product, index) => {
                        const productItem = document.createElement('div');
                        productItem.className = 'product-item';
                        productItem.innerHTML = `
                            <div class="product-rank">#${index + 1}</div>
                            <div class="product-info">
                                <div class="product-name">${product.productName}</div>
                                <div class="product-stats">
                                    <span class="product-sales">${product.totalQuantity} sold</span>
                                    <span class="product-revenue">â‚¹${product.totalRevenue.toLocaleString()}</span>
                                </div>
                            </div>
                        `;
                        topProductsList.appendChild(productItem);
                    });
                }
            } catch (error) {
                console.error('Error loading top products:', error);
            }
        }

        // Function to load recent orders
        async function loadRecentOrders() {
            try {
                const response = await fetch('/api/dashboard/recent-orders');
                const data = await response.json();
                
                if (data.success && data.data.length > 0) {
                    const recentOrdersList = document.getElementById('recentOrdersList');
                    recentOrdersList.innerHTML = '';
                    
                    data.data.forEach(order => {
                        const orderItem = document.createElement('div');
                        orderItem.className = 'activity-item';
                        orderItem.innerHTML = `
                            <div class="activity-icon">
                                <i class="fas fa-shopping-bag"></i>
                            </div>
                            <div class="activity-content">
                                <div class="activity-title">${order.orderId}</div>
                                <div class="activity-subtitle">${order.userId.fullname}</div>
                                <div class="activity-meta">
                                    <span class="activity-amount">â‚¹${order.finalAmount.toLocaleString()}</span>
                                    <span class="activity-status status-${order.status.toLowerCase().replace(' ', '-')}">${order.status}</span>
                                </div>
                            </div>
                            <div class="activity-time">${formatTimeAgo(order.createdAt)}</div>
                        `;
                        recentOrdersList.appendChild(orderItem);
                    });
                }
            } catch (error) {
                console.error('Error loading recent orders:', error);
            }
        }

        // Function to load new customers
        async function loadNewCustomers() {
            try {
                const response = await fetch('/api/dashboard/new-customers');
                const data = await response.json();
                
                if (data.success && data.data.length > 0) {
                    const newCustomersList = document.getElementById('newCustomersList');
                    newCustomersList.innerHTML = '';
                    
                    data.data.forEach(customer => {
                        const customerItem = document.createElement('div');
                        customerItem.className = 'activity-item';
                        customerItem.innerHTML = `
                            <div class="activity-icon">
                                <i class="fas fa-user-plus"></i>
                            </div>
                            <div class="activity-content">
                                <div class="activity-title">${customer.fullname}</div>
                                <div class="activity-subtitle">${customer.email}</div>
                            </div>
                            <div class="activity-time">${formatTimeAgo(customer.createdAt)}</div>
                        `;
                        newCustomersList.appendChild(customerItem);
                    });
                }
            } catch (error) {
                console.error('Error loading new customers:', error);
            }
        }

        // Utility function to format time ago
        function formatTimeAgo(dateString) {
            const date = new Date(dateString);
            const now = new Date();
            const diffInSeconds = Math.floor((now - date) / 1000);
            
            if (diffInSeconds < 60) return 'Just now';
            if (diffInSeconds < 3600) return Math.floor(diffInSeconds / 60) + 'm ago';
            if (diffInSeconds < 86400) return Math.floor(diffInSeconds / 3600) + 'h ago';
            if (diffInSeconds < 2592000) return Math.floor(diffInSeconds / 86400) + 'd ago';
            return date.toLocaleDateString();
        }

        // Function to show error messages
        function showErrorMessage(message) {
            console.error(message);
            // You can implement a toast notification here if needed
        }

            // Handle sidebar navigation
        const navItems = document.querySelectorAll('.nav-item[data-route]');
        const mobileToggle = document.getElementById('mobileToggle');
        const sidebar = document.getElementById('sidebar');

        // Set Dashboard as active
        document.querySelector('[data-route="dashboard"]')?.classList.add('active');

        navItems.forEach(item => {
            item.addEventListener('click', function (e) {
                navItems.forEach(nav => nav.classList.remove('active'));
                this.classList.add('active');

                if (window.innerWidth <= 768) {
                    sidebar.classList.remove('show');
                }
            });
        });

        if (mobileToggle && sidebar) {
            mobileToggle.addEventListener('click', function () {
                sidebar.classList.toggle('show');
            });

            document.addEventListener('click', function (e) {
                if (window.innerWidth <= 768) {
                    if (!sidebar.contains(e.target) && !mobileToggle.contains(e.target)) {
                        sidebar.classList.remove('show');
                    }
                }
            });
        }

        // Logout functionality
        const logoutBtn = document.getElementById('logoutBtn');
        if (logoutBtn) {
            logoutBtn.addEventListener('click', function (e) {
                e.preventDefault();

                Swal.fire({
                    title: 'Are you sure?',
                    text: "You will be logged out of the admin panel",
                    icon: 'warning',
                    showCancelButton: true,
                    confirmButtonColor: '#000000',
                    cancelButtonColor: '#6c757d',
                    confirmButtonText: 'Yes, logout',
                    cancelButtonText: 'Cancel'
                }).then((result) => {
                    if (result.isConfirmed) {
                        window.location.href = '/admin-logout';
                    }
                });
            });
        }
    });
    </script>
</body>
</html>