<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Return Requests Management - ArvanClaire</title>
    <link href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap/5.3.0/css/bootstrap.min.css" rel="stylesheet">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" rel="stylesheet">
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    
    <style>
        /* Modern Return Request Styles - White Theme with Black Text */

        /* Reset and Base Styles */
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            background-color: #f8f9fa;
            font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Helvetica Neue', Arial, sans-serif;
            color: #212529;
            line-height: 1.6;
        }

        /* Main Content Layout */
        .main-content {
            margin-left: 250px;
            min-height: 100vh;
            padding: 2rem;
            background-color: #f8f9fa;
        }

        /* Breadcrumbs */
        .breadcrumb {
            background: none;
            padding: 0;
            margin-bottom: 1.5rem;
            font-size: 0.9rem;
        }

        .breadcrumb-item a {
            color: #6c757d;
            text-decoration: none;
            transition: color 0.3s ease;
        }

        .breadcrumb-item a:hover {
            color: #000000;
        }

        .breadcrumb-item.active {
            color: #000000;
            font-weight: 500;
        }

        .breadcrumb-item + .breadcrumb-item::before {
            content: "/";
            color: #6c757d;
        }

        /* Page Header */
        .page-header {
            background: linear-gradient(135deg, #ffffff 0%, #f8f9fa 100%);
            border-radius: 16px;
            padding: 2rem;
            margin-bottom: 2rem;
            box-shadow: 0 4px 20px rgba(0, 0, 0, 0.08);
            border: 1px solid #e9ecef;
        }

        .page-title {
            font-size: 2.5rem;
            font-weight: 700;
            color: #000000;
            margin-bottom: 0.5rem;
            letter-spacing: -0.02em;
        }

        .page-subtitle {
            font-size: 1.1rem;
            color: #6c757d;
            margin: 0;
            font-weight: 400;
        }

        /* Statistics Cards */
        .stats-row {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
            gap: 1.5rem;
            margin-bottom: 2rem;
        }

        .stat-card {
            background: linear-gradient(135deg, #ffffff 0%, #f8f9fa 100%);
            border-radius: 16px;
            padding: 2rem;
            box-shadow: 0 4px 20px rgba(0, 0, 0, 0.08);
            border: 1px solid #e9ecef;
            text-align: center;
            transition: transform 0.3s ease, box-shadow 0.3s ease;
        }

        .stat-card:hover {
            transform: translateY(-2px);
            box-shadow: 0 8px 30px rgba(0, 0, 0, 0.12);
        }

        .stat-card i {
            font-size: 2.5rem;
            margin-bottom: 1rem;
        }

        .stat-card h3 {
            margin: 0;
            font-size: 2rem;
            font-weight: 700;
            color: #000000;
            margin-bottom: 0.5rem;
        }

        .stat-card p {
            margin: 0;
            color: #6c757d;
            font-size: 0.95rem;
            font-weight: 500;
        }

        .pending { color: #f39c12; }
        .approved { color: #27ae60; }
        .rejected { color: #e74c3c; }
        .total { color: #3498db; }

        /* Filters Card */
        .filters-card {
            background: #ffffff;
            border-radius: 16px;
            padding: 2rem;
            margin-bottom: 2rem;
            box-shadow: 0 4px 20px rgba(0, 0, 0, 0.08);
            border: 1px solid #e9ecef;
        }

        .filters-header {
            margin-bottom: 1.5rem;
        }

        .filters-title {
            font-size: 1.25rem;
            font-weight: 600;
            color: #000000;
            display: flex;
            align-items: center;
            gap: 0.5rem;
            margin: 0;
        }

        .filters-title i {
            color: #6c757d;
        }

        .filters-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(280px, 1fr));
            gap: 1.5rem;
            margin-bottom: 2rem;
        }

        .filter-group {
            display: flex;
            flex-direction: column;
            gap: 0.5rem;
        }

        .filter-label {
            font-weight: 600;
            color: #000000;
            margin-bottom: 0.5rem;
            font-size: 0.9rem;
            display: flex;
            align-items: center;
            gap: 0.5rem;
        }

        .filter-label i {
            color: #6c757d;
            width: 16px;
        }

        .search-container {
            position: relative;
        }

        .search-icon {
            position: absolute;
            right: 1rem;
            top: 50%;
            transform: translateY(-50%);
            color: #6c757d;
            pointer-events: none;
        }

        .form-control,
        .form-select {
            border: 2px solid #e9ecef;
            border-radius: 8px;
            padding: 0.75rem 1rem;
            font-size: 0.95rem;
            color: #000000;
            background-color: #ffffff;
            transition: all 0.3s ease;
        }

        .form-control:focus,
        .form-select:focus {
            border-color: #000000;
            box-shadow: 0 0 0 0.2rem rgba(0, 0, 0, 0.1);
            outline: none;
        }

        /* Date Range Container */
        .date-range-container {
            display: grid;
            grid-template-columns: 1fr auto 1fr;
            gap: 0.75rem;
            align-items: center;
        }

        .date-separator {
            text-align: center;
            color: #6c757d;
            font-weight: 500;
            font-size: 0.875rem;
        }

        /* Amount Range Container */
        .amount-range-container {
            display: grid;
            grid-template-columns: 1fr auto 1fr;
            gap: 0.75rem;
            align-items: center;
        }

        .amount-input-wrapper {
            position: relative;
        }

        .currency-symbol {
            position: absolute;
            left: 1rem;
            top: 50%;
            transform: translateY(-50%);
            color: #6c757d;
            font-weight: 600;
            pointer-events: none;
        }

        .amount-input {
            padding-left: 2.5rem;
        }

        .amount-separator {
            text-align: center;
            color: #6c757d;
            font-weight: 500;
            font-size: 0.875rem;
        }

        /* Filter Action Buttons */
        .filter-actions {
            display: flex;
            gap: 1rem;
            justify-content: center;
            flex-wrap: wrap;
        }

        .filter-btn {
            padding: 0.75rem 1.5rem;
            border: 2px solid;
            border-radius: 8px;
            font-weight: 600;
            font-size: 0.9rem;
            cursor: pointer;
            transition: all 0.3s ease;
            display: flex;
            align-items: center;
            gap: 0.5rem;
            white-space: nowrap;
            min-width: 120px;
            justify-content: center;
        }

        .filter-btn.primary {
            background-color: #000000;
            border-color: #000000;
            color: #ffffff;
        }

        .filter-btn.primary:hover {
            background-color: #333333;
            border-color: #333333;
            transform: translateY(-1px);
            box-shadow: 0 4px 15px rgba(0, 0, 0, 0.3);
        }

        .filter-btn.secondary {
            background-color: #ffffff;
            border-color: #6c757d;
            color: #6c757d;
        }

        .filter-btn.secondary:hover {
            background-color: #6c757d;
            color: #ffffff;
            transform: translateY(-1px);
            box-shadow: 0 4px 15px rgba(108, 117, 125, 0.3);
        }

        .filter-btn.danger {
            background-color: #ffffff;
            border-color: #dc3545;
            color: #dc3545;
        }

        .filter-btn.danger:hover {
            background-color: #dc3545;
            color: #ffffff;
            transform: translateY(-1px);
            box-shadow: 0 4px 15px rgba(220, 53, 69, 0.3);
        }

        /* Table Container */
        .table-container {
            background: #ffffff;
            border-radius: 16px;
            box-shadow: 0 4px 20px rgba(0, 0, 0, 0.08);
            border: 1px solid #e9ecef;
            overflow: hidden;
        }

        .table-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            padding: 1.5rem;
            border-bottom: 2px solid #f8f9fa;
            background: #f8f9fa;
        }

        .results-info {
            font-weight: 500;
            color: #000000;
            font-size: 0.95rem;
        }

        .results-count {
            font-weight: 700;
            color: #000000;
        }

        /* Table Styles */
        .table-wrapper {
            overflow-x: auto;
        }

        .modern-table {
            width: 100%;
            border-collapse: collapse;
            background: #ffffff;
        }

        .modern-table th {
            background-color: #f8f9fa;
            color: #000000;
            font-weight: 700;
            padding: 1.25rem 1rem;
            text-align: left;
            border-bottom: 2px solid #e9ecef;
            font-size: 0.9rem;
            letter-spacing: 0.5px;
            text-transform: uppercase;
            position: sticky;
            top: 0;
            z-index: 10;
        }

        .modern-table td {
            padding: 1.25rem 1rem;
            border-bottom: 1px solid #f1f3f4;
            color: #000000;
            font-size: 0.95rem;
            vertical-align: middle;
        }

        .modern-table tr:hover {
            background-color: #f8f9fa;
        }

        .modern-table tr:last-child td {
            border-bottom: none;
        }

        /* Table Cell Styles */
        .order-id-cell {
            font-weight: 600;
            color: #000000;
            display: flex;
            align-items: center;
            gap: 0.5rem;
        }

        .order-id-cell i {
            color: #6c757d;
            font-size: 0.9rem;
        }

        .customer-info {
            display: flex;
            align-items: center;
            gap: 1rem;
        }

        .customer-avatar {
            width: 45px;
            height: 45px;
            border-radius: 50%;
            background-color: #000000;
            color: #ffffff;
            display: flex;
            align-items: center;
            justify-content: center;
            font-weight: 700;
            font-size: 1.1rem;
            flex-shrink: 0;
        }

        .customer-details {
            flex: 1;
        }

        .customer-name {
            font-weight: 600;
            color: #000000;
            font-size: 0.95rem;
            margin-bottom: 0.25rem;
        }

        .customer-email {
            font-size: 0.8rem;
            color: #6c757d;
        }

        .product-info {
            display: flex;
            align-items: center;
            gap: 0.75rem;
        }

        .product-image {
            width: 50px;
            height: 50px;
            object-fit: cover;
            border-radius: 8px;
            border: 1px solid #e9ecef;
        }

        .product-placeholder {
            width: 50px;
            height: 50px;
            background: #f8f9fa;
            border: 2px dashed #dee2e6;
            border-radius: 8px;
            display: flex;
            align-items: center;
            justify-content: center;
            color: #6c757d;
            font-size: 1.2rem;
        }

        .product-details h6 {
            margin: 0;
            font-size: 0.9rem;
            font-weight: 600;
            color: #000000;
            margin-bottom: 0.25rem;
        }

        .product-details small {
            color: #6c757d;
            font-size: 0.8rem;
        }

        .amount-cell {
            display: flex;
            align-items: center;
            gap: 0.5rem;
            font-weight: 600;
            color: #000000;
            font-size: 1rem;
        }

        .amount-cell i {
            color: #6c757d;
            font-size: 0.85rem;
        }

        .date-cell {
            display: flex;
            align-items: center;
            gap: 0.5rem;
            color: #000000;
        }

        .date-cell i {
            color: #6c757d;
            font-size: 0.85rem;
        }

        .reason-cell {
            max-width: 200px;
        }

        .reason-text {
            font-size: 0.85rem;
            color: #000000;
            line-height: 1.4;
        }

        /* Status Badges */
        .status-display {
            display: flex;
            justify-content: center;
        }

        .status-badge {
            display: flex;
            align-items: center;
            gap: 0.5rem;
            padding: 0.5rem 1rem;
            border-radius: 20px;
            font-size: 0.85rem;
            font-weight: 600;
            text-transform: capitalize;
        }

        .status-pending {
            background-color: rgba(255, 193, 7, 0.1);
            color: #ffc107;
        }

        .status-approved,
        .status-returned {
            background-color: rgba(40, 167, 69, 0.1);
            color: #28a745;
        }

        .status-rejected {
            background-color: rgba(220, 53, 69, 0.1);
            color: #dc3545;
        }

        /* Action Buttons */
        .action-buttons {
            display: flex;
            gap: 0.5rem;
            justify-content: center;
        }

        .btn-action {
            padding: 0.5rem 0.75rem;
            border: none;
            border-radius: 6px;
            cursor: pointer;
            font-size: 0.85rem;
            transition: all 0.3s ease;
            display: flex;
            align-items: center;
            gap: 0.25rem;
            text-decoration: none;
        }

        .btn-success {
            background-color: #28a745;
            color: white;
        }

        .btn-success:hover {
            background-color: #218838;
            color: white;
            text-decoration: none;
            transform: translateY(-1px);
            box-shadow: 0 2px 4px rgba(40, 167, 69, 0.3);
        }

        .btn-danger {
            background-color: #dc3545;
            color: white;
        }

        .btn-danger:hover {
            background-color: #c82333;
            color: white;
            text-decoration: none;
            transform: translateY(-1px);
            box-shadow: 0 2px 4px rgba(220, 53, 69, 0.3);
        }

        .btn-info {
            background-color: #000000;
            color: white;
        }

        .btn-info:hover {
            background-color: #333333;
            color: white;
            text-decoration: none;
            transform: translateY(-1px);
            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.3);
        }

        /* Empty State */
        .empty-state {
            text-align: center;
            padding: 4rem 2rem;
            color: #6c757d;
        }

        .empty-state i {
            font-size: 4rem;
            color: #dee2e6;
            margin-bottom: 1.5rem;
        }

        .empty-state h4 {
            color: #000000;
            margin-bottom: 1rem;
            font-weight: 600;
        }

        .empty-state p {
            margin-bottom: 0.5rem;
            font-size: 1rem;
            color: #6c757d;
        }

        .empty-state small {
            color: #6c757d;
            font-size: 0.875rem;
        }

        /* Pagination */
        .pagination-wrapper {
            margin-top: 2rem;
            padding-top: 1.5rem;
            border-top: 1px solid #e9ecef;
            display: flex;
            justify-content: space-between;
            align-items: center;
            background: #f8f9fa;
            padding: 1.5rem;
        }

        .pagination-info {
            color: #6c757d;
            font-size: 0.9rem;
            font-weight: 500;
        }

        .pagination {
            margin: 0;
            display: flex;
            gap: 0.25rem;
        }

        .page-link {
            color: #000000;
            border: 2px solid #e9ecef;
            background: #ffffff;
            padding: 0.5rem 0.75rem;
            border-radius: 6px;
            transition: all 0.3s ease;
            text-decoration: none;
            font-weight: 500;
            display: flex;
            align-items: center;
            justify-content: center;
            min-width: 40px;
        }

        .page-link:hover {
            background-color: #f8f9fa;
            border-color: #000000;
            color: #000000;
            text-decoration: none;
        }

        .page-item.active .page-link {
            background-color: #000000;
            border-color: #000000;
            color: #ffffff;
        }

        .page-item.disabled .page-link {
            color: #6c757d;
            background-color: #ffffff;
            border-color: #e9ecef;
            cursor: not-allowed;
        }

        /* Animation Classes */
        @keyframes fadeInUp {
            from {
                opacity: 0;
                transform: translateY(30px);
            }
            to {
                opacity: 1;
                transform: translateY(0);
            }
        }

        .filters-card,
        .table-container {
            animation: fadeInUp 0.6s ease-out;
        }

        .filters-card { animation-delay: 0.1s; }
        .table-container { animation-delay: 0.2s; }

        /* Custom Scrollbar */
        ::-webkit-scrollbar {
            width: 8px;
            height: 8px;
        }

        ::-webkit-scrollbar-track {
            background: #f1f1f1;
            border-radius: 4px;
        }

        ::-webkit-scrollbar-thumb {
            background: #c1c1c1;
            border-radius: 4px;
        }

        ::-webkit-scrollbar-thumb:hover {
            background: #a8a8a8;
        }

        /* Responsive Design */
        @media (max-width: 768px) {
            .main-content {
                margin-left: 0;
                padding: 1rem;
                padding-top: 80px;
            }

            .page-header {
                padding: 1.5rem;
                margin-bottom: 1.5rem;
            }

            .page-title {
                font-size: 2rem;
            }

            .stats-row {
                grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
                gap: 1rem;
            }

            .stat-card {
                padding: 1.5rem;
            }

            .filters-grid {
                grid-template-columns: 1fr;
                gap: 1rem;
            }

            .date-range-container,
            .amount-range-container {
                grid-template-columns: 1fr;
                gap: 0.5rem;
            }

            .date-separator,
            .amount-separator {
                transform: rotate(90deg);
                font-size: 1rem;
            }

            .filter-actions {
                flex-direction: column;
            }

            .filter-btn {
                width: 100%;
            }

            .table-container {
                padding: 1rem;
            }

            .table-header {
                flex-direction: column;
                gap: 1rem;
                text-align: center;
            }

            .modern-table {
                font-size: 0.85rem;
            }

            .modern-table th,
            .modern-table td {
                padding: 0.75rem 0.5rem;
            }

            .customer-info {
                flex-direction: column;
                gap: 0.5rem;
                text-align: center;
            }

            .customer-avatar {
                width: 40px;
                height: 40px;
                font-size: 1rem;
            }

            .action-buttons {
                flex-direction: column;
                gap: 0.25rem;
            }

            .btn-action {
                padding: 0.375rem 0.5rem;
                font-size: 0.8rem;
            }

            .pagination-wrapper {
                flex-direction: column;
                gap: 1rem;
                text-align: center;
            }
        }

        @media (max-width: 576px) {
            .page-header {
                padding: 1rem;
            }

            .page-title {
                font-size: 1.75rem;
            }

            .filters-card,
            .table-container {
                padding: 1rem;
            }

            .modern-table th,
            .modern-table td {
                padding: 0.5rem 0.25rem;
            }

            .customer-name {
                font-size: 0.85rem;
            }

            .customer-email {
                font-size: 0.75rem;
            }

            .status-badge {
                font-size: 0.75rem;
                padding: 0.375rem 0.75rem;
            }

            .btn-action {
                padding: 0.25rem 0.5rem;
                font-size: 0.75rem;
            }
        }
    </style>
</head>
<body>
    <%- include("../partials/admin/sidebar") %>

    <div class="main-content">
        <!-- Breadcrumbs -->
        <nav aria-label="breadcrumb" class="mb-3">
            <ol class="breadcrumb">
                <li class="breadcrumb-item"><a href="/admin-dashboard">Dashboard</a></li>
                <li class="breadcrumb-item"><a href="/get-orders">Orders</a></li>
                <li class="breadcrumb-item active">Return Requests</li>
            </ol>
        </nav>

        <!-- Page Header -->
        <div class="page-header">
            <h1 class="page-title">Return Requests Management</h1>
            <p class="page-subtitle">Manage and track all customer return requests</p>
        </div>

        <!-- Statistics Cards -->
        <div class="stats-row">
            <div class="stat-card">
                <i class="fas fa-clock pending"></i>
                <h3 id="pendingCount">
                    <%= returnRequests ? returnRequests.filter(req => req.status === 'Return Request').length : 0 %>
                </h3>
                <p>Pending Requests</p>
            </div>
            <div class="stat-card">
                <i class="fas fa-check-circle approved"></i>
                <h3 id="approvedCount">
                    <%= returnRequests ? returnRequests.filter(req => req.status === 'Returned').length : 0 %>
                </h3>
                <p>Approved Returns</p>
            </div>
            <div class="stat-card">
                <i class="fas fa-times-circle rejected"></i>
                <h3 id="rejectedCount">
                    <%= returnRequests ? returnRequests.filter(req => 
                        req.returnRejectedAt || 
                        (req.returnType === 'individual' && req.returnItems.some(item => item.returnRejectedAt))
                    ).length : 0 %>
                </h3>
                <p>Rejected Requests</p>
            </div>
            <div class="stat-card">
                <i class="fas fa-list total"></i>
                <h3 id="totalCount">
                    <%= returnRequests ? returnRequests.length : 0 %>
                </h3>
                <p>Total Requests</p>
            </div>
        </div>

        <!-- Search and Filters -->
        <div class="filters-card">
            <div class="filters-header">
                <h3 class="filters-title">
                    <i class="fas fa-search"></i>
                    Search & Filter Return Requests
                </h3>
            </div>
            <form id="filtersForm">
                <div class="filters-grid">
                    <!-- Search Filter -->
                    <div class="filter-group">
                        <label class="filter-label">
                            <i class="fas fa-search"></i>
                            Search Return Requests
                        </label>
                        <div class="search-container">
                            <input type="text" 
                                   name="search" 
                                   id="searchInput" 
                                   class="form-control"
                                   placeholder="Search by Order ID, Customer name, Email..."
                                   value="<%= searchTerm || '' %>">
                            <i class="fas fa-search search-icon"></i>
                        </div>
                    </div>

                    <!-- Status Filter -->
                    <div class="filter-group">
                        <label class="filter-label">
                            <i class="fas fa-flag"></i>
                            Status Filter
                        </label>
                        <select name="status" class="form-select">
                            <option value="">All Status</option>
                            <option value="Pending" <%= statusFilter === 'Pending' ? 'selected' : '' %>>Pending</option>
                            <option value="Approved" <%= statusFilter === 'Approved' ? 'selected' : '' %>>Approved</option>
                            <option value="Rejected" <%= statusFilter === 'Rejected' ? 'selected' : '' %>>Rejected</option>
                        </select>
                    </div>

                    <!-- Return Type Filter -->
                    <div class="filter-group">
                        <label class="filter-label">
                            <i class="fas fa-layer-group"></i>
                            Return Type
                        </label>
                        <select name="returnType" class="form-select">
                            <option value="">All Types</option>
                            <option value="individual" <%= (typeof returnType !== 'undefined' && returnType === 'individual') ? 'selected' : '' %>>Individual Items</option>
                            <option value="entire" <%= (typeof returnType !== 'undefined' && returnType === 'entire') ? 'selected' : '' %>>Entire Order</option>
                        </select>
                    </div>

                    <!-- Sort By -->
                    <div class="filter-group">
                        <label class="filter-label">
                            <i class="fas fa-sort"></i>
                            Sort By
                        </label>
                        <select name="sortBy" class="form-select">
                            <option value="newest" <%= (typeof sortBy !== 'undefined' && sortBy === 'newest') ? 'selected' : '' %>>Newest First</option>
                            <option value="oldest" <%= (typeof sortBy !== 'undefined' && sortBy === 'oldest') ? 'selected' : '' %>>Oldest First</option>
                            <option value="amount-high" <%= (typeof sortBy !== 'undefined' && sortBy === 'amount-high') ? 'selected' : '' %>>Amount: High to Low</option>
                            <option value="amount-low" <%= (typeof sortBy !== 'undefined' && sortBy === 'amount-low') ? 'selected' : '' %>>Amount: Low to High</option>
                            <option value="customer-az" <%= (typeof sortBy !== 'undefined' && sortBy === 'customer-az') ? 'selected' : '' %>>Customer: A-Z</option>
                            <option value="customer-za" <%= (typeof sortBy !== 'undefined' && sortBy === 'customer-za') ? 'selected' : '' %>>Customer: Z-A</option>
                        </select>
                    </div>

                    <!-- Date Range Filter -->
                    <div class="filter-group">
                        <label class="filter-label">
                            <i class="fas fa-calendar"></i>
                            Date Range
                        </label>
                        <div class="date-range-container">
                            <input type="date" 
                                   name="dateFrom" 
                                   class="form-control"
                                   value="<%= (typeof dateFrom !== 'undefined') ? dateFrom : '' %>">
                            <span class="date-separator">to</span>
                            <input type="date" 
                                   name="dateTo" 
                                   class="form-control"
                                   value="<%= (typeof dateTo !== 'undefined') ? dateTo : '' %>">
                        </div>
                    </div>

                    <!-- Amount Range Filter -->
                    <div class="filter-group">
                        <label class="filter-label">
                            <i class="fas fa-rupee-sign"></i>
                            Amount Range
                        </label>
                        <div class="amount-range-container">
                            <div class="amount-input-wrapper">
                                <span class="currency-symbol">₹</span>
                                <input type="number" 
                                       name="minAmount" 
                                       class="form-control amount-input"
                                       placeholder="Min"
                                       min="0"
                                       step="100"
                                       value="<%= (typeof minAmount !== 'undefined') ? minAmount : '' %>">
                            </div>
                            <span class="amount-separator">to</span>
                            <div class="amount-input-wrapper">
                                <span class="currency-symbol">₹</span>
                                <input type="number" 
                                       name="maxAmount" 
                                       class="form-control amount-input"
                                       placeholder="Max"
                                       min="0"
                                       step="100"
                                       value="<%= (typeof maxAmount !== 'undefined') ? maxAmount : '' %>">
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Filter Action Buttons -->
                <div class="filter-actions">
                    <button type="submit" class="filter-btn primary">
                        <i class="fas fa-filter"></i>
                        Apply Filters
                    </button>
                    <button type="button" class="filter-btn secondary" onclick="resetFilters()">
                        <i class="fas fa-refresh"></i>
                        Reset
                    </button>
                    <button type="button" class="filter-btn danger" onclick="clearAllFilters()">
                        <i class="fas fa-times"></i>
                        Clear All
                    </button>
                </div>
            </form>
        </div>

        <!-- Table Container -->
        <div class="table-container">
            <div class="table-header">
                <div class="results-info">
                    <% if (returnRequests && returnRequests.length > 0) { %>
                        Showing <span class="results-count"><%= startIdx + 1 %>-<%= endIdx %></span>
                        of <span class="results-count"><%= totalRequests %></span> return requests
                    <% } else { %>
                        <span class="results-count">No return requests found</span>
                    <% } %>
                </div>
            </div>

            <div class="table-wrapper">
                <table class="modern-table">
                    <thead>
                        <tr>
                            <th class="col-order-id">Order ID</th>
                            <th class="col-customer">Customer</th>
                            <th class="col-products">Products</th>
                            <th class="col-amount">Amount</th>
                            <th class="col-date">Request Date</th>
                            <th class="col-reason">Reason</th>
                            <th class="col-status">Status</th>
                            <th class="col-actions">Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        <% if (returnRequests && returnRequests.length > 0) { %>
                            <% returnRequests.forEach(order => { %>
                                <tr>
                                    <td>
                                        <div class="order-id-cell">
                                            <i class="fas fa-receipt"></i>
                                            <span><%= order.orderId %></span>
                                        </div>
                                    </td>
                                    <td>
                                        <div class="customer-info">
                                            <div class="customer-avatar">
                                                <%= order.userId?.fullname ? order.userId.fullname.charAt(0).toUpperCase() : 'U' %>
                                            </div>
                                            <div class="customer-details">
                                                <div class="customer-name"><%= order.userId ? order.userId.fullname || 'Unknown Customer' : 'Unknown Customer' %></div>
                                                <div class="customer-email"><%= order.userId ? order.userId.email || 'No email' : 'No email' %></div>
                                            </div>
                                        </div>
                                    </td>
                                    <td>
                                        <div class="product-info">
                                            <% if (order.returnType === 'individual' && order.returnItems && order.returnItems.length > 0) { %>
                                                <% 
                                                // For individual returns, show the specific returned item
                                                const returnItem = order.returnItems[0];
                                                const product = returnItem.product;
                                                let productImage = null;
                                                let hasImage = false;
                                                
                                                if (product && product.productImages && product.productImages.length > 0) {
                                                    productImage = `/uploads/products/${product.productImages[0]}`;
                                                    hasImage = true;
                                                } else if (product && product.mainImage) {
                                                    productImage = `/uploads/products/${product.mainImage}`;
                                                    hasImage = true;
                                                }
                                                %>
                                                <% if (hasImage) { %>
                                                    <img src="<%= productImage %>" 
                                                         alt="Product" class="product-image"
                                                         onerror="this.style.display='none'; this.nextElementSibling.style.display='flex';">
                                                    <div class="product-placeholder" style="display: none;">
                                                        <i class="fas fa-image"></i>
                                                    </div>
                                                <% } else { %>
                                                    <div class="product-placeholder">
                                                        <i class="fas fa-image"></i>
                                                    </div>
                                                <% } %>
                                                <div class="product-details">
                                                    <h6><%= product ? product.productName || 'Product Name' : 'Product Name' %></h6>
                                                    <small>
                                                        Qty: <%= returnItem.quantity || 1 %> | Individual Return
                                                    </small>
                                                </div>
                                            <% } else if (order.orderedItems && order.orderedItems.length > 0) { %>
                                                <% 
                                                // For entire order returns, show first item with count
                                                const firstItem = order.orderedItems[0];
                                                const product = firstItem.product;
                                                let productImage = null;
                                                let hasImage = false;
                                                
                                                if (product && product.productImages && product.productImages.length > 0) {
                                                    productImage = `/uploads/products/${product.productImages[0]}`;
                                                    hasImage = true;
                                                } else if (product && product.mainImage) {
                                                    productImage = `/uploads/products/${product.mainImage}`;
                                                    hasImage = true;
                                                }
                                                %>
                                                <% if (hasImage) { %>
                                                    <img src="<%= productImage %>" 
                                                         alt="Product" class="product-image"
                                                         onerror="this.style.display='none'; this.nextElementSibling.style.display='flex';">
                                                    <div class="product-placeholder" style="display: none;">
                                                        <i class="fas fa-image"></i>
                                                    </div>
                                                <% } else { %>
                                                    <div class="product-placeholder">
                                                        <i class="fas fa-image"></i>
                                                    </div>
                                                <% } %>
                                                <div class="product-details">
                                                    <h6><%= product ? product.productName || 'Product Name' : 'Product Name' %></h6>
                                                    <small>
                                                        <% if (order.orderedItems.length > 1) { %>
                                                            +<%= order.orderedItems.length - 1 %> more items | Entire Order
                                                        <% } else { %>
                                                            Qty: <%= firstItem.quantity || 1 %> | Entire Order
                                                        <% } %>
                                                    </small>
                                                </div>
                                            <% } else { %>
                                                <div class="product-details">
                                                    <h6>No items</h6>
                                                    <small>No products found</small>
                                                </div>
                                            <% } %>
                                        </div>
                                    </td>
                                    <td>
                                        <div class="amount-cell">
                                            <i class="fas fa-rupee-sign"></i>
                                            <span>₹<%= order.returnAmount ? order.returnAmount.toFixed(2) : '0.00' %></span>
                                        </div>
                                    </td>
                                    <td>
                                        <div class="date-cell">
                                            <i class="fas fa-calendar-alt"></i>
                                            <span><%= order.returnRequestedAt ? new Date(order.returnRequestedAt).toLocaleDateString('en-IN') : 'N/A' %></span>
                                        </div>
                                    </td>
                                    <td>
                                        <div class="reason-cell">
                                            <div class="reason-text">
                                                <% if (order.returnType === 'individual' && order.returnItems && order.returnItems.length > 0) { %>
                                                    <%= order.returnItems[0].returnReason || 'No reason provided' %>
                                                <% } else { %>
                                                    <%= order.returnReason || 'No reason provided' %>
                                                <% } %>
                                            </div>
                                        </div>
                                    </td>
                                    <td>
                                        <div class="status-display">
                                            <% 
                                            let statusClass = 'status-pending';
                                            let statusText = 'Pending';
                                            
                                            if (order.returnType === 'individual') {
                                                // Individual item return status
                                                const hasReturnedItems = order.returnItems.some(item => item.status === 'Returned');
                                                const hasPendingItems = order.returnItems.some(item => item.status === 'Return Request');
                                                const hasRejectedItems = order.returnItems.some(item => item.returnRejectedAt && item.status === 'Active');
                                                
                                                if (hasReturnedItems && !hasPendingItems && !hasRejectedItems) {
                                                    statusClass = 'status-approved';
                                                    statusText = 'Approved';
                                                } else if (hasRejectedItems && !hasPendingItems && !hasReturnedItems) {
                                                    statusClass = 'status-rejected';
                                                    statusText = 'Rejected';
                                                } else if (hasPendingItems) {
                                                    statusClass = 'status-pending';
                                                    statusText = 'Pending';
                                                }
                                            } else {
                                                // Entire order return status
                                                if (order.status === 'Returned') {
                                                    statusClass = 'status-approved';
                                                    statusText = 'Approved';
                                                } else if (order.returnRejectedAt) {
                                                    statusClass = 'status-rejected';
                                                    statusText = 'Rejected';
                                                }
                                            }
                                            %>
                                            <span class="status-badge <%= statusClass %>">
                                                <i class="fas fa-<%= statusClass === 'status-pending' ? 'clock' : statusClass === 'status-approved' ? 'check-circle' : 'times-circle' %>"></i>
                                                <span><%= statusText %></span>
                                            </span>
                                        </div>
                                    </td>
                                    <td>
                                        <div class="action-buttons">
                                            <% 
                                            let showApproveReject = false;
                                            let isRejected = false;
                                            
                                            if (order.returnType === 'individual') {
                                                // Show approve/reject if there are pending individual items
                                                showApproveReject = order.returnItems.some(item => item.status === 'Return Request');
                                                isRejected = order.returnItems.some(item => item.returnRejectedAt && item.status === 'Active');
                                            } else {
                                                // Show approve/reject if entire order is pending return
                                                showApproveReject = order.status === 'Return Request';
                                                isRejected = order.returnRejectedAt && order.status === 'Delivered';
                                            }
                                            %>
                                            
                                            <% if (showApproveReject && !isRejected) { %>
                                                <button class="btn-action btn-success" 
                                                        onclick="approveReturn('<%= order._id %>')"
                                                        title="Approve Return">
                                                    <i class="fas fa-check"></i>
                                                </button>
                                                <button class="btn-action btn-danger" 
                                                        onclick="rejectReturn('<%= order._id %>')"
                                                        title="Reject Return">
                                                    <i class="fas fa-times"></i>
                                                </button>
                                            <% } %>
                                            <button class="btn-action btn-info" 
                                                    onclick="viewReturnDetails('<%= order._id %>')"
                                                    title="View Details">
                                                <i class="fas fa-eye"></i>
                                            </button>
                                        </div>
                                    </td>
                                </tr>
                            <% }); %>
                        <% } else { %>
                            <tr>
                                <td colspan="8">
                                    <div class="empty-state">
                                        <i class="fas fa-inbox"></i>
                                        <h4>No Return Requests</h4>
                                        <p>There are currently no return requests to display.</p>
                                        <small>Return requests will appear here when customers submit them.</small>
                                    </div>
                                </td>
                            </tr>
                        <% } %>
                    </tbody>
                </table>
            </div>

            <!-- Pagination -->
            <% if (returnRequests && returnRequests.length > 0) { %>
                <div class="pagination-wrapper">
                    <div class="pagination-info">
                        Showing <span><%= startIdx + 1 %></span> to <span><%= endIdx %></span> of <span><%= totalRequests %></span> return requests
                    </div>
                    <nav aria-label="Return requests pagination">
                        <ul class="pagination">
                            <li class="page-item <%= currentPage === 1 ? 'disabled' : '' %>">
                                <a class="page-link" href="?page=<%= currentPage - 1 %>&search=<%= searchTerm || '' %>&status=<%= statusFilter || '' %>" aria-label="Previous">
                                    <i class="fas fa-chevron-left"></i>
                                </a>
                            </li>
                            
                            <% for (let i = Math.max(1, currentPage - 2); i <= Math.min(totalPages, currentPage + 2); i++) { %>
                                <li class="page-item <%= i === currentPage ? 'active' : '' %>">
                                    <a class="page-link" href="?page=<%= i %>&search=<%= searchTerm || '' %>&status=<%= statusFilter || '' %>">
                                        <%= i %>
                                    </a>
                                </li>
                            <% } %>
                            
                            <li class="page-item <%= currentPage === totalPages ? 'disabled' : '' %>">
                                <a class="page-link" href="?page=<%= currentPage + 1 %>&search=<%= searchTerm || '' %>&status=<%= statusFilter || '' %>" aria-label="Next">
                                    <i class="fas fa-chevron-right"></i>
                                </a>
                            </li>
                        </ul>
                    </nav>
                </div>
            <% } %>
        </div>
    </div>

    <script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap/5.3.0/js/bootstrap.bundle.min.js"></script>
    <script src="/scripts/admin/return-request.js"></script>
    <script>
        // Advanced Filters Form Handling
        document.addEventListener('DOMContentLoaded', function() {
            const filtersForm = document.getElementById('filtersForm');
            
            // Handle form submission
            filtersForm.addEventListener('submit', function(e) {
                e.preventDefault();
                applyFilters();
            });

            // Real-time search with debounce
            const searchInput = document.getElementById('searchInput');
            let searchTimeout;
            
            searchInput.addEventListener('input', function() {
                clearTimeout(searchTimeout);
                searchTimeout = setTimeout(() => {
                    if (this.value.length >= 3 || this.value.length === 0) {
                        applyFilters();
                    }
                }, 500);
            });

            // Validate amount range
            const minAmountInput = document.querySelector('input[name="minAmount"]');
            const maxAmountInput = document.querySelector('input[name="maxAmount"]');
            
            function validateAmountRange() {
                const minAmount = parseFloat(minAmountInput.value) || 0;
                const maxAmount = parseFloat(maxAmountInput.value) || Infinity;
                
                if (minAmount > maxAmount && maxAmount !== Infinity) {
                    minAmountInput.style.borderColor = '#ef4444';
                    maxAmountInput.style.borderColor = '#ef4444';
                    return false;
                } else {
                    minAmountInput.style.borderColor = '#e5e7eb';
                    maxAmountInput.style.borderColor = '#e5e7eb';
                    return true;
                }
            }

            minAmountInput.addEventListener('input', validateAmountRange);
            maxAmountInput.addEventListener('input', validateAmountRange);

            // Validate date range
            const dateFromInput = document.querySelector('input[name="dateFrom"]');
            const dateToInput = document.querySelector('input[name="dateTo"]');
            
            function validateDateRange() {
                const dateFrom = new Date(dateFromInput.value);
                const dateTo = new Date(dateToInput.value);
                
                if (dateFromInput.value && dateToInput.value && dateFrom > dateTo) {
                    dateFromInput.style.borderColor = '#ef4444';
                    dateToInput.style.borderColor = '#ef4444';
                    return false;
                } else {
                    dateFromInput.style.borderColor = '#e5e7eb';
                    dateToInput.style.borderColor = '#e5e7eb';
                    return true;
                }
            }

            dateFromInput.addEventListener('change', validateDateRange);
            dateToInput.addEventListener('change', validateDateRange);
        });

        function applyFilters() {
            const form = document.getElementById('filtersForm');
            const formData = new FormData(form);
            const url = new URL(window.location);
            
            // Clear existing parameters
            url.search = '';
            
            // Add form data to URL
            for (let [key, value] of formData.entries()) {
                if (value && value.trim() !== '') {
                    url.searchParams.set(key, value.trim());
                }
            }
            
            // Reset to page 1 for new filters
            url.searchParams.set('page', '1');
            
            // Navigate to filtered URL
            window.location.href = url.toString();
        }

        function resetFilters() {
            // Reset form
            document.getElementById('filtersForm').reset();
            
            // Navigate to base URL without parameters
            window.location.href = window.location.pathname;
        }

        function clearAllFilters() {
            // Reset form
            document.getElementById('filtersForm').reset();
            
            // Navigate to base URL without parameters
            window.location.href = window.location.pathname;
        }

        function refreshData() {
            window.location.reload();
        }

        function exportData() {
            // Get current filters
            const url = new URL(window.location);
            const params = url.searchParams;
            
            // Create export URL
            const exportUrl = '/return-requests/export?' + params.toString();
            
            // Open export in new tab
            window.open(exportUrl, '_blank');
            
            showToast('info', 'Export started. Download will begin shortly.');
        }

        // Enhanced search functionality
        function searchReturns(searchTerm) {
            const searchInput = document.getElementById('searchInput');
            searchInput.value = searchTerm;
            applyFilters();
        }

        function filterByStatus(status) {
            const statusSelect = document.querySelector('select[name="status"]');
            statusSelect.value = status;
            applyFilters();
        }

        // Toast notification system
        function showToast(icon, title, timer = 3000) {
            const Toast = Swal.mixin({
                toast: true,
                position: 'bottom-right',
                showConfirmButton: false,
                timer: timer,
                timerProgressBar: true
            });
            Toast.fire({
                icon: icon,
                title: title
            });
        }

        // Filter animation on load
        document.addEventListener('DOMContentLoaded', function() {
            const filterGroups = document.querySelectorAll('.filter-group');
            filterGroups.forEach((group, index) => {
                group.style.opacity = '0';
                group.style.transform = 'translateY(20px)';
                group.style.transition = 'all 0.6s ease';
                
                setTimeout(() => {
                    group.style.opacity = '1';
                    group.style.transform = 'translateY(0)';
                }, index * 100);
            });
        });
    </script>
</body>
</html>